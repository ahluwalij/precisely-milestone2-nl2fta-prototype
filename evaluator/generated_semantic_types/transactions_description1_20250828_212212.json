{
  "dataset": "transactions",
  "description_number": 1,
  "timestamp": "20250828_212212",
  "generated_types": [
    {
      "resultType": "generated",
      "semanticType": "IP Address",
      "description": "The internet protocol address of the network connection used during a financial transaction, enabling digital forensics and security analysis.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "192.168.1.1",
        "10.0.0.1",
        "172.16.254.1",
        "8.8.8.8",
        "255.255.255.255",
        "127.0.0.1"
      ],
      "negativeContentExamples": [
        "10.0.0",
        "172.16.254.1.1",
        "8.8.8",
        "127.0.0.1.1"
      ],
      "positiveHeaderExamples": [
        "IP Address",
        "Source IP"
      ],
      "negativeHeaderExamples": [
        "MAC Address",
        "Address"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*ip\\s*address.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP Address"
          ],
          "negativeExamples": [
            "MAC Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*source\\s*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Source IP"
          ],
          "negativeExamples": [
            "Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP"
          ],
          "negativeExamples": [
            "Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*address.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP Address"
          ],
          "negativeExamples": [
            "MAC Address"
          ],
          "rationale": null
        }
      ],
      "priority": 9620,
      "explanation": "This semantic type identifies IP addresses used in network connections, particularly in the context of financial transactions. It is crucial for digital forensics and security analysis, allowing for the tracking and identification of network activity.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "acfceec5-6e7d-4367-881b-e7972fe9fcf8"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDuration",
      "description": "The time elapsed in seconds from transaction initiation to completion, used for performance monitoring and fraud detection.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "120",
        "3600",
        "45",
        "300",
        "180",
        "600"
      ],
      "negativeContentExamples": [
        "1.5",
        "two hours",
        "3 minutes",
        "00:05:00",
        "five hundred",
        "1:30"
      ],
      "positiveHeaderExamples": [
        "Transaction Duration",
        "Duration",
        "Time Elapsed",
        "Seconds Taken",
        "Transaction Time",
        "Duration in Seconds"
      ],
      "negativeHeaderExamples": [
        "Session Duration",
        "Processing Time",
        "Elapsed Time",
        "Time Taken",
        "Duration",
        "Completion Time"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Session Duration"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*secs.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Duration (secs)"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*time.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Time"
          ],
          "negativeExamples": [
            "Session Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*seconds.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Duration in Seconds"
          ],
          "negativeExamples": [
            "Minutes Elapsed"
          ],
          "rationale": null
        }
      ],
      "priority": 9630,
      "explanation": "This semantic type represents the duration of a transaction in seconds, which is crucial for performance monitoring and fraud detection. It is identified by numeric values representing seconds and specific header patterns indicating transaction-related durations.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "64886b05-c3ac-4fa2-8bf6-d085f220ec8c"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionID",
      "description": "A unique transaction identifier that enables tracking and referencing of individual financial transactions across banking systems.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^[A-Z0-9]{8,20}$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "TX12345678",
        "ABCD1234EFGH",
        "1234567890AB",
        "TRX2023XYZ",
        "TXN00000001",
        "REF123456789"
      ],
      "negativeContentExamples": [
        "12345",
        "TX-1234",
        "1234-5678-9012",
        "TXN#123456",
        "TX 12345678"
      ],
      "positiveHeaderExamples": [
        "Transaction ID",
        "TX Reference",
        "Transaction Number",
        "TX ID",
        "Transaction Identifier",
        "TXN ID"
      ],
      "negativeHeaderExamples": [
        "User ID",
        "Transaction Date",
        "Amount",
        "Customer Name",
        "Account Number",
        "Order ID"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction ID"
          ],
          "negativeExamples": [
            "User ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*tx.*reference.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "TX Reference"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Number"
          ],
          "negativeExamples": [
            "User Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*tx.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "TX ID"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        }
      ],
      "priority": 9640,
      "explanation": "This semantic type is used to identify unique transaction identifiers in datasets, which are crucial for tracking and referencing financial transactions across various banking systems. The regex pattern is designed to match alphanumeric strings typically used for transaction IDs, ensuring they are of a reasonable length to maintain uniqueness.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "158b00c9-b319-4e77-9248-d5fba3ecd8b5"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDate",
      "description": "The date and time when a financial transaction occurred, used for chronological tracking and reporting purposes.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023-10-15T14:30:00",
        "2022-01-01T00:00:00",
        "2021-12-31T23:59:59",
        "2020-06-30T12:00:00",
        "2019-11-11T11:11:11",
        "2018-05-05T05:05:05"
      ],
      "negativeContentExamples": [
        "2023/10/15 14:30:00",
        "15-10-2023 14:30",
        "2023-10-15",
        "14:30:00",
        "Transaction ID: 12345",
        "Created on 2023-10-15"
      ],
      "positiveHeaderExamples": [
        "Transaction Date",
        "Txn Timestamp"
      ],
      "negativeHeaderExamples": [
        "Transaction ID",
        "Date Created",
        "Customer Name",
        "Amount"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*timestamp.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        }
      ],
      "priority": 9650,
      "explanation": "This semantic type is used to identify and classify data fields that represent the date and time when a financial transaction occurred. It is crucial for chronological tracking and reporting in financial datasets.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "49d997ed-12f5-4b82-a159-a65323ca503f"
    },
    {
      "resultType": "generated",
      "semanticType": "LoginAttempts",
      "description": "The number of authentication attempts made by a customer before successfully accessing their account for the transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "3",
        "5",
        "10",
        "1",
        "7",
        "12"
      ],
      "negativeContentExamples": [
        "three",
        "five",
        "ten",
        "one",
        "seven",
        "twelve"
      ],
      "positiveHeaderExamples": [
        "Login Attempts",
        "Attempt Count"
      ],
      "negativeHeaderExamples": [
        "Failed Attempts",
        "Retry Count"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*login.*attempts.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Login Attempts"
          ],
          "negativeExamples": [
            "Failed Attempts"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempt Count"
          ],
          "negativeExamples": [
            "Retry Count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempts"
          ],
          "negativeExamples": [
            "Retries"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Count"
          ],
          "negativeExamples": [
            "Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 9660,
      "explanation": "This semantic type identifies the number of login attempts made by a user before successfully accessing their account. It is useful for tracking authentication attempts and can help in identifying potential security issues or user behavior patterns.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "eacc1301-a2d0-4ee9-ae7c-9296d0e1b6fb"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountBalance",
      "description": "The current monetary balance in the customer's account at the time of the transaction, expressed in the account's base currency.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^\\d+(\\.\\d{1,2})?$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1000.00",
        "250.50",
        "0.99",
        "123456.78",
        "500",
        "75.25"
      ],
      "negativeContentExamples": [
        "1000,00",
        "250.5.0",
        "abc",
        "1234.567",
        "-500",
        "75.2a"
      ],
      "positiveHeaderExamples": [
        "Account Balance",
        "Current Balance",
        "Balance",
        "Amount",
        "Value",
        "Number"
      ],
      "negativeHeaderExamples": [
        "Balance Change",
        "Credit Limit",
        "Transaction Amount",
        "Interest Rate",
        "Account Number",
        "Currency Code"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Balance"
          ],
          "negativeExamples": [
            "Balance Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*current.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Current Balance"
          ],
          "negativeExamples": [
            "Credit Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance"
          ],
          "negativeExamples": [
            "Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 9670,
      "explanation": "This semantic type represents the current monetary balance in a customer's account, typically expressed in the account's base currency. It is used to identify and classify data fields that store account balance information, which is crucial for financial transactions and reporting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "47590dc0-420f-4de1-a9fd-000fc148388a"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionAmount",
      "description": "The monetary value involved in a financial transaction, representing the amount being transferred, debited, or credited.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1,234.56",
        "100.00",
        "0.99",
        "10,000",
        "5,678.90",
        "123"
      ],
      "negativeContentExamples": [
        "1234,56",
        "100,00",
        "0.9",
        "10.000",
        "5.678,90",
        "abc"
      ],
      "positiveHeaderExamples": [
        "Transaction Amount",
        "Amount",
        "Amount",
        "Value",
        "Transaction Value",
        "Payment Amount"
      ],
      "negativeHeaderExamples": [
        "Transaction Date",
        "Balance",
        "Date",
        "Account Number",
        "Customer ID",
        "Invoice Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Amount"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*usd.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount (USD)"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 9680,
      "explanation": "This semantic type is used to identify and classify monetary values in financial transactions. It is applicable in datasets where financial amounts are recorded, such as transaction logs, invoices, and payment records. The regex pattern captures common formats for currency values, including those with commas as thousand separators and two decimal places.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "a8116da5-f9bf-4cfb-867f-82e7df713726"
    },
    {
      "resultType": "generated",
      "semanticType": "PreviousTransactionDate",
      "description": "The timestamp of the most recent transaction that occurred before the current transaction on the same account.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(?:previous|last)\\s+transaction\\s+date\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "2023-09-15",
        "14:30:00",
        "Next Transaction Date",
        "Original Date",
        "2023-09-15T14:30:00+02:00",
        "2023-09-15T14:30:00-05:00"
      ],
      "positiveHeaderExamples": [
        "Previous Transaction Date",
        "Last Transaction Date"
      ],
      "negativeHeaderExamples": [
        "Next Transaction Date",
        "Original Date",
        "Transaction Amount",
        "Account Balance"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*previous\\s+transaction\\s+date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Previous Transaction Date"
          ],
          "negativeExamples": [
            "Next Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*last\\s+transaction\\s+date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Last Transaction Date"
          ],
          "negativeExamples": [
            "Original Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction\\s+date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Date"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        }
      ],
      "priority": 9690,
      "explanation": "This semantic type is used to identify columns that contain the date and time of the most recent transaction that occurred before the current transaction on the same account. It is useful for financial data analysis and transaction history tracking.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "627eee27-6cf2-44b7-b7cd-3ae65c581dfe"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountID",
      "description": "A bank account identifier that uniquely represents a customer's financial account within the banking institution.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^[A-Z0-9]{8,20}$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "AB12345678",
        "1234567890123456",
        "ACCT987654321",
        "ZXCVBNM12345",
        "1234ABCD5678",
        "9876543210ABCD"
      ],
      "negativeContentExamples": [
        "12345",
        "1234-5678-9012",
        "123456789012345678901"
      ],
      "positiveHeaderExamples": [
        "Account ID",
        "Customer Account Code",
        "Bank Account ID",
        "Account Identifier",
        "Account Number",
        "Client Account ID"
      ],
      "negativeHeaderExamples": [
        "Account Balance",
        "Customer Name",
        "Transaction Date",
        "Invoice Number",
        "Payment Amount",
        "Customer Email"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*account.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Account ID"
          ],
          "negativeExamples": [
            "Customer Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Code"
          ],
          "negativeExamples": [
            "Account Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 9700,
      "explanation": "This semantic type is used to identify bank account identifiers that uniquely represent a customer's financial account within a banking institution. It is characterized by alphanumeric strings typically ranging from 8 to 20 characters in length, often used in financial datasets to track customer accounts.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "50e7b991-d9cc-443b-a9dc-c869db9766b1"
    },
    {
      "resultType": "generated",
      "semanticType": "CustomerOccupation",
      "description": "The professional role or job category of the customer, used for income verification and risk profiling purposes.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i).*\\b(manager|engineer|developer|analyst|consultant|teacher|nurse|doctor|lawyer|accountant)\\b.*",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "Software Engineer",
        "Project Manager",
        "Data Analyst",
        "Financial Consultant",
        "Registered Nurse",
        "High School Teacher",
        "Corporate Lawyer",
        "Certified Public Accountant"
      ],
      "negativeContentExamples": [
        "12345",
        "John Doe",
        "New York",
        "123-45-6789",
        "john.doe@example.com",
        "http://example.com",
        "555-1234",
        "01/01/2000"
      ],
      "positiveHeaderExamples": [
        "Customer Occupation",
        "Job Title",
        "Occupation",
        "Job"
      ],
      "negativeHeaderExamples": [
        "Customer Name",
        "Occupation Code",
        "Address",
        "Phone Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*occupation.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Occupation"
          ],
          "negativeExamples": [
            "Customer Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*job.*title.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Job Title"
          ],
          "negativeExamples": [
            "Occupation Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*occupation.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Occupation"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*job.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Job"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 9710,
      "explanation": "This semantic type identifies the professional role or job category of a customer, which is crucial for income verification and risk profiling. It matches common job titles and occupations, ensuring accurate classification of customer data related to their employment.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "af7fffc8-6880-442e-9ea2-5e91cdbd6228"
    },
    {
      "resultType": "generated",
      "semanticType": "MerchantID",
      "description": "A unique code identifying the merchant or business entity involved in a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(?:merchant|business|entity)[-_ ]?(?:id|code)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "Store-123",
        "Vendor-456",
        "Customer-789",
        "Product-101",
        "Order-202",
        "Invoice-303"
      ],
      "positiveHeaderExamples": [
        "Merchant ID",
        "Merchant Code",
        "Business ID",
        "Entity ID",
        "Merchant Identifier",
        "Business Code"
      ],
      "negativeHeaderExamples": [
        "Store Name",
        "Vendor Name",
        "Customer ID",
        "Product Code",
        "Order Number",
        "Invoice ID"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*merchant[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*merchant[_-]?code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant Code"
          ],
          "negativeExamples": [
            "Vendor Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*business[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Business ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*entity[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Entity ID"
          ],
          "negativeExamples": [
            "Vendor Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 9720,
      "explanation": "This semantic type is used to identify unique codes associated with merchants or business entities in financial transactions. It helps in categorizing and processing transaction data by linking it to specific merchants or businesses.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "58fdb4f2-5c23-4b5f-9b8b-8cebfa473d39"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionType",
      "description": "The classification of a transaction indicating whether funds are being added to or removed from an account.",
      "baseType": "STRING",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND",
        "CHARGE",
        "REVERSAL"
      ],
      "backout": "^[A-Z_]{4,12}$",
      "positiveContentExamples": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND"
      ],
      "negativeContentExamples": [
        "ACCOUNT",
        "METHOD",
        "EMAIL",
        "ADDRESS",
        "NAME",
        "NUMBER",
        "CODE",
        "DATE"
      ],
      "positiveHeaderExamples": [
        "Transaction Type",
        "Txn Direction",
        "Transaction",
        "Txn",
        "Type"
      ],
      "negativeHeaderExamples": [
        "Account Type",
        "Payment Method",
        "Email Address",
        "Customer Name",
        "Invoice Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Type"
          ],
          "negativeExamples": [
            "Account Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*direction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Direction"
          ],
          "negativeExamples": [
            "Payment Method"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction"
          ],
          "negativeExamples": [
            "Account"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn"
          ],
          "negativeExamples": [
            "Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Method"
          ],
          "rationale": null
        }
      ],
      "priority": 9730,
      "explanation": "This semantic type is used to classify transactions based on whether funds are being added to or removed from an account. It helps in identifying the direction of financial transactions, such as credits, debits, deposits, and withdrawals, which are crucial for financial analysis and reporting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "fdaaf61f-e86b-4e39-b923-dda8b6b4ef77"
    },
    {
      "resultType": "generated",
      "semanticType": "Location",
      "description": "The geographic location where a financial transaction was initiated or processed, typically represented as a city name.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "New York",
        "Los Angeles",
        "Chicago",
        "Houston",
        "Miami",
        "San Francisco",
        "Seattle",
        "Boston"
      ],
      "negativeContentExamples": [
        "12345",
        "40.7128° N",
        "10001",
        "+1 212",
        "http://example.com"
      ],
      "positiveHeaderExamples": [
        "Location",
        "Branch Location",
        "City",
        "Place",
        "Area",
        "Location Name"
      ],
      "negativeHeaderExamples": [
        "Latitude",
        "Country Code",
        "Postal Code",
        "State",
        "Region",
        "Zone"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*branch.*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch Location"
          ],
          "negativeExamples": [
            "Latitude"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Location"
          ],
          "negativeExamples": [
            "Country Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*city.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "City"
          ],
          "negativeExamples": [
            "State"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*place.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Place"
          ],
          "negativeExamples": [
            "Region"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*area.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Area"
          ],
          "negativeExamples": [
            "Zone"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*name.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Name"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 9740,
      "explanation": "This semantic type is used to identify city names that represent the location where a financial transaction was initiated or processed. It is useful for categorizing and analyzing transaction data based on geographic locations.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "15b2de9e-0617-4a39-93b4-c14f8ed104b4"
    },
    {
      "resultType": "generated",
      "semanticType": "CustomerAge",
      "description": "The age of the customer in years at the time of the transaction, used for demographic analysis and risk assessment.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d{1,3}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "25",
        "42",
        "67",
        "18",
        "90",
        "33"
      ],
      "negativeContentExamples": [
        "Account Age",
        "Years Since Opening",
        "Customer ID",
        "Transaction Date",
        "Invoice Number",
        "Order Total"
      ],
      "positiveHeaderExamples": [
        "Customer Age",
        "Age",
        "Age",
        "Years"
      ],
      "negativeHeaderExamples": [
        "Account Age",
        "Years Since Opening",
        "Customer ID",
        "Transaction Date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Age"
          ],
          "negativeExamples": [
            "Account Age"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age (years)"
          ],
          "negativeExamples": [
            "Years Since Opening"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age"
          ],
          "negativeExamples": [
            "Years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Years"
          ],
          "negativeExamples": [
            "Months"
          ],
          "rationale": null
        }
      ],
      "priority": 9750,
      "explanation": "This semantic type represents the age of a customer in years, which is crucial for demographic analysis and risk assessment in various business contexts. It is identified by numeric values typically ranging from 0 to 120, and column headers that include terms like \"age\" or \"years\".",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "defaf80c-e404-433d-8187-b005e700dc05"
    },
    {
      "resultType": "generated",
      "semanticType": "DeviceID",
      "description": "A unique identifier for the electronic device used to initiate or authorize a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "123e4567-e89b-12d3-a456-426614174000",
        "550e8400-e29b-41d4-a716-446655440000",
        "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "9b2c4d5e-6f7a-8b9c-0d1e-2f3a4b5c6d7e",
        "1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d",
        "3f2504e0-4f89-11d3-9a0c-0305e82c3301"
      ],
      "negativeContentExamples": [
        "g47ac10b-58cc-4372-a567-0e02b2c3d479",
        "123e4567e89b12d3a456426614174000",
        "550e8400e29b41d4a716446655440000",
        "f47ac10b58cc4372a5670e02b2c3d479",
        "9b2c4d5e6f7a8b9c0d1e2f3a4b5c6d7e"
      ],
      "positiveHeaderExamples": [
        "Device ID",
        "D‑ID"
      ],
      "negativeHeaderExamples": [
        "Customer ID",
        "Device Type"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*device.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*d[\\s-]*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "D‑ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*device.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        }
      ],
      "priority": 9760,
      "explanation": "This semantic type is used to identify unique device identifiers, typically in the form of UUIDs, that are used in financial transactions. These identifiers are crucial for tracking and authorizing transactions initiated by electronic devices.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "43a89aae-7748-403e-87d2-cc5a59bcd195"
    },
    {
      "resultType": "generated",
      "semanticType": "Channel",
      "description": "The service delivery method or platform through which a financial transaction was conducted.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^(online|mobile|branch|atm|phone|internet|app|kiosk|agent|pos|web)$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "Online",
        "Mobile",
        "Branch",
        "ATM",
        "Phone",
        "Internet",
        "App",
        "Kiosk"
      ],
      "negativeContentExamples": [
        "TV",
        "Radio",
        "Newspaper",
        "Magazine",
        "Billboard",
        "Flyer",
        "Poster",
        "Brochure"
      ],
      "positiveHeaderExamples": [
        "Channel",
        "Transaction Channel",
        "Payment Channel",
        "Service Channel",
        "Delivery Channel",
        "Access Channel"
      ],
      "negativeHeaderExamples": [
        "TV Channel",
        "Distribution Channel",
        "Marketing Channel",
        "Sales Channel",
        "Communication Channel",
        "Broadcast Channel"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Channel"
          ],
          "negativeExamples": [
            "TV Channel"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Channel"
          ],
          "negativeExamples": [
            "Distribution Channel"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Type"
          ],
          "negativeExamples": [
            "TV Transaction"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Channel"
          ],
          "negativeExamples": [
            "TV Channel"
          ],
          "rationale": null
        }
      ],
      "priority": 9770,
      "explanation": "This semantic type identifies the method or platform used for conducting financial transactions, such as online, mobile, or ATM. It is crucial for categorizing transaction data based on the delivery channel, which can be used for analysis, reporting, and improving customer service.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "99a634a2-cd66-4887-b49d-51c553aab8a4"
    }
  ]
}