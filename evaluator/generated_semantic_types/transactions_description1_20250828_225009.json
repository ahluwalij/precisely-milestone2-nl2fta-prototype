{
  "dataset": "transactions",
  "description_number": 1,
  "timestamp": "20250828_225009",
  "generated_types": [
    {
      "resultType": "generated",
      "semanticType": "TransactionDuration",
      "description": "The time elapsed in seconds from transaction initiation to completion, used for performance monitoring and fraud detection.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "120",
        "3600",
        "45",
        "600",
        "180",
        "90"
      ],
      "negativeContentExamples": [
        "1.5 hours",
        "2 minutes",
        "three hundred",
        "00:05:00",
        "5m",
        "1h"
      ],
      "positiveHeaderExamples": [
        "Transaction Duration",
        "Duration"
      ],
      "negativeHeaderExamples": [
        "Session Duration",
        "Processing Time"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Session Duration"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*secs.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Duration (secs)"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*time.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Duration (secs)"
          ],
          "negativeExamples": [
            "Session Duration"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        }
      ],
      "priority": 2840,
      "explanation": "This semantic type represents the duration of a transaction in seconds, which is crucial for monitoring performance and detecting potential fraud. It is identified by numeric values representing seconds and is typically labeled with headers indicating duration in seconds.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "afe411d3-2168-43a7-a766-6c744e252b1e"
    },
    {
      "resultType": "generated",
      "semanticType": "LoginAttempts",
      "description": "The number of authentication attempts made by a customer before successfully accessing their account for the transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "3",
        "5",
        "10",
        "1",
        "7",
        "12"
      ],
      "negativeContentExamples": [
        "three",
        "five",
        "ten",
        "one",
        "seven",
        "twelve"
      ],
      "positiveHeaderExamples": [
        "Login Attempts",
        "Attempt Count"
      ],
      "negativeHeaderExamples": [
        "Failed Attempts",
        "Retry Count"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*login.*attempts.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Login Attempts"
          ],
          "negativeExamples": [
            "Failed Attempts"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempt Count"
          ],
          "negativeExamples": [
            "Retry Count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempts"
          ],
          "negativeExamples": [
            "Retries"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Count"
          ],
          "negativeExamples": [
            "Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 2850,
      "explanation": "This semantic type identifies the number of login attempts made by a user before successfully accessing their account. It is useful for tracking authentication behavior and security analysis.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "82e9d332-a564-49e2-a6f8-aced661eaed4"
    },
    {
      "resultType": "generated",
      "semanticType": "IP Address",
      "description": "The internet protocol address of the network connection used during a financial transaction, enabling digital forensics and security analysis.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "192.168.1.1",
        "10.0.0.1",
        "172.16.254.1",
        "8.8.8.8",
        "255.255.255.255",
        "127.0.0.1"
      ],
      "negativeContentExamples": [
        "256.256.256.256",
        "192.168.1",
        "192.168.1.256",
        "192.168.1.1.1",
        "192.168.1.abc",
        "192.168.1.-1"
      ],
      "positiveHeaderExamples": [
        "IP Address",
        "Source IP",
        "Destination IP",
        "Client IP",
        "Server IP",
        "Remote IP"
      ],
      "negativeHeaderExamples": [
        "MAC Address",
        "Address",
        "Postal Code",
        "Street Address",
        "Email Address",
        "Phone Number"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*ip\\s*address.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP Address"
          ],
          "negativeExamples": [
            "MAC Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*source\\s*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Source IP"
          ],
          "negativeExamples": [
            "Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP"
          ],
          "negativeExamples": [
            "Address"
          ],
          "rationale": null
        }
      ],
      "priority": 2860,
      "explanation": "This semantic type identifies IP addresses used in network connections, which are crucial for digital forensics and security analysis in financial transactions. The regex pattern matches IPv4 addresses, ensuring accurate identification of valid IP addresses while excluding invalid formats.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "f2975f2d-1dc3-42eb-8baf-c8fd0399f022"
    },
    {
      "resultType": "generated",
      "semanticType": "CustomerAge",
      "description": "The age of the customer in years at the time of the transaction, used for demographic analysis and risk assessment.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d{1,3}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "25",
        "42",
        "67",
        "18",
        "90",
        "33"
      ],
      "negativeContentExamples": [
        "5.5",
        "Age: 30",
        "twenty-five",
        "1000",
        "-1",
        "Age"
      ],
      "positiveHeaderExamples": [
        "Customer Age",
        "Age",
        "Age",
        "Years"
      ],
      "negativeHeaderExamples": [
        "Account Age",
        "Years Since Opening",
        "Months",
        "Days"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Age"
          ],
          "negativeExamples": [
            "Account Age"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age (years)"
          ],
          "negativeExamples": [
            "Years Since Opening"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age"
          ],
          "negativeExamples": [
            "Years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Years"
          ],
          "negativeExamples": [
            "Months"
          ],
          "rationale": null
        }
      ],
      "priority": 2870,
      "explanation": "This semantic type represents the age of a customer in years, which is crucial for demographic analysis and risk assessment in various business contexts. It is identified by numeric values typically ranging from 0 to 120, and is often labeled in datasets with terms like \"Customer Age\" or \"Age (years)\".",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "ee68886a-97f2-43a2-bdde-f71e396f66b3"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionID",
      "description": "A unique transaction identifier that enables tracking and referencing of individual financial transactions across banking systems.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(transaction_id|txn_id|reference|ref_id)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "123456",
        "2023-10-01",
        "John Doe",
        "user@example.com",
        "+1234567890",
        "123 Main St"
      ],
      "positiveHeaderExamples": [
        "Transaction ID",
        "TX Reference",
        "Reference Number",
        "Ref ID",
        "Transaction Identifier",
        "Txn ID"
      ],
      "negativeHeaderExamples": [
        "User ID",
        "Transaction Date",
        "Account Number",
        "Customer ID",
        "Order Number",
        "Invoice ID"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction ID"
          ],
          "negativeExamples": [
            "User ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "TX Reference"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*reference.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Reference Number"
          ],
          "negativeExamples": [
            "Account Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ref_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Ref ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 2880,
      "explanation": "This semantic type is used to identify unique transaction identifiers in banking and financial datasets. These identifiers are crucial for tracking and referencing individual transactions across systems, ensuring accurate record-keeping and auditing.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "f3733bd4-8241-4f70-8cb2-fa2a41064e04"
    },
    {
      "resultType": "generated",
      "semanticType": "DeviceID",
      "description": "A unique identifier for the electronic device used to initiate or authorize a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "123e4567-e89b-12d3-a456-426614174000",
        "abcdefab-1234-5678-abcd-ef1234567890",
        "00112233-4455-6677-8899-aabbccddeeff",
        "deadbeef-cafe-babe-face-feedfacefeed",
        "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "550e8400-e29b-41d4-a716-446655440000"
      ],
      "negativeContentExamples": [
        "abcdefg-1234-5678-abcd-ef1234567890",
        "00112233-4455-6677-8899-aabbccddeefg",
        "deadbeef-cafe-babe-face-feedfacefeed1",
        "f47ac10b-58cc-4372-a567-0e02b2c3d4790",
        "550e8400-e29b-41d4-a716-44665544000z"
      ],
      "positiveHeaderExamples": [
        "Device ID",
        "D‑ID"
      ],
      "negativeHeaderExamples": [
        "Customer ID",
        "Device Type"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*device.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*d[\\W_]*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "D‑ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*device.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        }
      ],
      "priority": 2890,
      "explanation": "This semantic type represents a unique identifier for electronic devices used in financial transactions. It is typically a UUID format, which is a 128-bit number used to uniquely identify information in computer systems. The regex pattern captures this format, ensuring that the identifier is correctly recognized.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "34ed0eb5-aa34-466a-8c47-1df132e42108"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountID",
      "description": "A bank account identifier that uniquely represents a customer's financial account within the banking institution.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(account[_\\s]?id|acct[_\\s]?id|account[_\\s]?number)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "John Doe",
        "123 Main St",
        "01/01/2020",
        "$1000.00",
        "john.doe@example.com",
        "+1-800-555-1234"
      ],
      "positiveHeaderExamples": [
        "Account ID",
        "Customer Account Code",
        "Acct ID",
        "Account Number",
        "Account Identifier",
        "Customer ID"
      ],
      "negativeHeaderExamples": [
        "Account Balance",
        "Customer Name",
        "Account Type",
        "Account Opening Date",
        "Transaction Date",
        "Balance"
      ],
      "confidenceThreshold": 97.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account[_\\s]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account ID"
          ],
          "negativeExamples": [
            "Account Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer[_\\s]?account[_\\s]?code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Account Code"
          ],
          "negativeExamples": [
            "Customer Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*acct[_\\s]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Acct ID"
          ],
          "negativeExamples": [
            "Account Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account[_\\s]?number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Number"
          ],
          "negativeExamples": [
            "Account Opening Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        }
      ],
      "priority": 2900,
      "explanation": "This semantic type is used to identify columns or data fields that contain unique identifiers for bank accounts. These identifiers are crucial for distinguishing between different accounts within a banking institution and are often used in financial transactions, account management, and customer service operations.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "fb409c80-f679-4b49-a1d7-6b07d7f498c9"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionAmount",
      "description": "The monetary value involved in a financial transaction, representing the amount being transferred, debited, or credited.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^\\$?\\d{1,3}(,\\d{3})*(\\.\\d{2})?$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "$1,234.56",
        "$0.99",
        "$10,000.00",
        "500"
      ],
      "negativeContentExamples": [
        "1234,56",
        "$1234,56",
        "1,234.567",
        "12.345,67",
        "Amount: $1234.56",
        "USD 1234.56"
      ],
      "positiveHeaderExamples": [
        "Transaction Amount",
        "Amount",
        "Amount",
        "Value",
        "Transaction Value",
        "Payment Amount"
      ],
      "negativeHeaderExamples": [
        "Transaction Date",
        "Balance",
        "Account Number",
        "Customer Name",
        "Invoice Date",
        "Payment Method"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Amount"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*usd.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount (USD)"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 2910,
      "explanation": "This semantic type represents the monetary value involved in financial transactions. It is used to identify columns or data fields that contain amounts of money, typically formatted with or without currency symbols and commas for thousands separators. This type is crucial for financial data analysis, accounting, and transaction processing.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "17848f9b-bc54-4a47-b95c-eb37a44bf30e"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionType",
      "description": "The classification of a transaction indicating whether funds are being added to or removed from an account.",
      "baseType": "STRING",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND",
        "CHARGE",
        "REVERSAL"
      ],
      "backout": "^[A-Z_]{4,12}$",
      "positiveContentExamples": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND"
      ],
      "negativeContentExamples": [
        "ACCOUNT",
        "METHOD",
        "EMAIL",
        "ADDRESS",
        "NAME",
        "NUMBER"
      ],
      "positiveHeaderExamples": [
        "Transaction Type",
        "Txn Direction",
        "Transaction",
        "Txn",
        "Type"
      ],
      "negativeHeaderExamples": [
        "Account Type",
        "Payment Method",
        "Email Address",
        "Customer Name",
        "Invoice Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Type"
          ],
          "negativeExamples": [
            "Account Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*direction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Direction"
          ],
          "negativeExamples": [
            "Payment Method"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction"
          ],
          "negativeExamples": [
            "Account"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn"
          ],
          "negativeExamples": [
            "Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Method"
          ],
          "rationale": null
        }
      ],
      "priority": 2920,
      "explanation": "This semantic type is used to classify transactions based on whether funds are being added to or removed from an account. It helps in identifying the direction of the transaction, such as credit, debit, withdrawal, deposit, etc., which is crucial for financial data analysis and reporting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "515d971d-c9ac-4735-83c5-ff6faafa7622"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDate",
      "description": "The date and time when a financial transaction occurred, used for chronological tracking and reporting purposes.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023-10-15T14:30:00Z",
        "2022-05-01T08:45:30+02:00",
        "2021-12-31T23:59:59-05:00",
        "2020-07-20T12:00:00.000Z",
        "2019-11-11T11:11:11+00:00",
        "2018-03-03T03:03:03.123-07:00"
      ],
      "negativeContentExamples": [
        "2023/10/15 14:30:00",
        "15-10-2023 14:30",
        "2023-10-15",
        "14:30:00",
        "2023-10-15T14:30",
        "2023-10-15T14:30:00"
      ],
      "positiveHeaderExamples": [
        "Transaction Date",
        "Txn Timestamp",
        "Transaction Date and Time",
        "Transaction DateTime",
        "Transaction Date Stamp",
        "Transaction Date/Time"
      ],
      "negativeHeaderExamples": [
        "Transaction ID",
        "Date Created",
        "Customer Name",
        "Account Number",
        "Amount",
        "Payment Method"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*timestamp.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        }
      ],
      "priority": 2930,
      "explanation": "This semantic type represents the date and time when a financial transaction occurred. It is crucial for chronological tracking and reporting in financial systems. The regex pattern captures ISO 8601 date-time formats, which are commonly used in transaction records.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "e1d153b5-f667-4fa7-82e6-b1203815fb1b"
    },
    {
      "resultType": "generated",
      "semanticType": "PreviousTransactionDate",
      "description": "The timestamp of the most recent transaction that occurred before the current transaction on the same account.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i).*previous.*transaction.*date.*|.*last.*transaction.*date.*",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "2023-10-01T14:30:00Z",
        "2023-09-30 12:00:00",
        "2023/09/29 08:45:00",
        "01-10-2023 14:30",
        "30-Sep-2023 12:00",
        "29/09/2023 08:45"
      ],
      "positiveHeaderExamples": [
        "Previous Transaction Date",
        "Last Transaction Date"
      ],
      "negativeHeaderExamples": [
        "Next Transaction Date",
        "Original Date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*previous.*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Previous Transaction Date"
          ],
          "negativeExamples": [
            "Next Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*last.*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Last Transaction Date"
          ],
          "negativeExamples": [
            "Original Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Date"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2940,
      "explanation": "This semantic type is used to identify the date and time of the most recent transaction that occurred before the current transaction on the same account. It is useful for financial analysis, auditing, and transaction history tracking.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "138424fa-cc79-4c09-8f84-6699620ee9ed"
    },
    {
      "resultType": "generated",
      "semanticType": "MerchantID",
      "description": "A unique code identifying the merchant or business entity involved in a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(?:merchant|business|vendor)[-_ ]?(?:id|code)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "Store123",
        "VendorName",
        "BusinessName",
        "Shop001",
        "CompanyXYZ",
        "Retailer"
      ],
      "positiveHeaderExamples": [
        "Merchant ID",
        "Merchant Code",
        "Business ID",
        "Vendor ID",
        "Merchant Identifier",
        "Business Code"
      ],
      "negativeHeaderExamples": [
        "Store Name",
        "Vendor Name",
        "Company Name",
        "Shop Name",
        "Retailer Name",
        "Business Name"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*merchant[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*merchant[_-]?code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant Code"
          ],
          "negativeExamples": [
            "Vendor Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*business[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Business ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*vendor[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Vendor ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 2950,
      "explanation": "This semantic type is used to identify unique codes associated with merchants or business entities in financial transactions. It helps in categorizing and processing transaction data by linking it to specific merchants.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "6f88339e-7f4a-414f-a364-51195b7251c0"
    },
    {
      "resultType": "generated",
      "semanticType": "CustomerOccupation",
      "description": "The professional role or job category of the customer, used for income verification and risk profiling purposes.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i).*\\b(manager|engineer|developer|analyst|consultant|teacher|nurse|doctor|lawyer|accountant)\\b.*",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "Software Engineer",
        "Project Manager",
        "Data Analyst",
        "Financial Consultant",
        "High School Teacher",
        "Registered Nurse",
        "Corporate Lawyer",
        "Certified Public Accountant"
      ],
      "negativeContentExamples": [
        "12345",
        "Engineer123"
      ],
      "positiveHeaderExamples": [
        "Customer Occupation",
        "Job Title",
        "Occupation",
        "Job"
      ],
      "negativeHeaderExamples": [
        "Customer Name",
        "Occupation Code",
        "Employee ID",
        "Department"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*occupation.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Occupation"
          ],
          "negativeExamples": [
            "Customer Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*job.*title.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Job Title"
          ],
          "negativeExamples": [
            "Occupation Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*occupation.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Occupation"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*job.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Job"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 2960,
      "explanation": "This semantic type identifies the professional role or job category of a customer, which is crucial for income verification and risk profiling. It helps in categorizing customers based on their occupation, which can be used in various financial and analytical applications.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "46cf1023-4dee-4e64-8d77-6dc33f3ffc31"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountBalance",
      "description": "The current monetary balance in the customer's account at the time of the transaction, expressed in the account's base currency.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^\\d+(\\.\\d{1,2})?$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1234.56",
        "789.00",
        "0.99",
        "10000",
        "250.5",
        "500"
      ],
      "negativeContentExamples": [
        "1234,56",
        "12.345",
        "abc",
        "1234.5678",
        "-100",
        "12.34.56"
      ],
      "positiveHeaderExamples": [
        "Account Balance",
        "Current Balance",
        "Balance",
        "Account Current Balance",
        "Customer Balance",
        "Account Value"
      ],
      "negativeHeaderExamples": [
        "Balance Change",
        "Credit Limit",
        "Transaction Amount",
        "Available Credit",
        "Interest Rate",
        "Loan Amount"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Balance"
          ],
          "negativeExamples": [
            "Balance Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*current.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Current Balance"
          ],
          "negativeExamples": [
            "Credit Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance"
          ],
          "negativeExamples": [
            "Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 2970,
      "explanation": "This semantic type represents the current monetary balance in a customer's account, typically used in financial datasets to track the amount of money available in an account at a given time. It is expressed in the account's base currency and is crucial for financial analysis and reporting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "3e3b9cbb-c086-44e2-a4a3-5c0ee76394ed"
    },
    {
      "resultType": "generated",
      "semanticType": "Channel",
      "description": "The service delivery method or platform through which a financial transaction was conducted.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^(online|mobile|branch|atm|phone|internet|app|kiosk|agent|pos|web)$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "Online",
        "Mobile",
        "Branch",
        "ATM",
        "Phone",
        "Internet",
        "App",
        "Kiosk"
      ],
      "negativeContentExamples": [
        "TV",
        "Radio",
        "Newspaper",
        "Magazine",
        "Billboard",
        "Flyer",
        "Poster",
        "Brochure"
      ],
      "positiveHeaderExamples": [
        "Channel",
        "Transaction Channel"
      ],
      "negativeHeaderExamples": [
        "TV Channel",
        "Distribution Channel"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Channel"
          ],
          "negativeExamples": [
            "TV Channel"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Channel"
          ],
          "negativeExamples": [
            "Distribution Channel"
          ],
          "rationale": null
        }
      ],
      "priority": 2980,
      "explanation": "This semantic type identifies the platform or method through which a financial transaction is conducted, such as online, mobile, or ATM. It is crucial for categorizing transaction data based on the delivery channel used.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "d4be0e2d-dffd-4025-bfe0-aaaac91f3a0b"
    },
    {
      "resultType": "generated",
      "semanticType": "Location",
      "description": "The geographic location where a financial transaction was initiated or processed, typically represented as a city name.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "New York",
        "Los Angeles",
        "Chicago",
        "Houston",
        "Phoenix",
        "Philadelphia",
        "San Antonio",
        "San Diego"
      ],
      "negativeContentExamples": [
        "12345",
        "40.7128° N",
        "74.0060° W",
        "10001",
        "+1 212"
      ],
      "positiveHeaderExamples": [
        "Location",
        "Branch Location",
        "City",
        "Place",
        "Area",
        "Locality"
      ],
      "negativeHeaderExamples": [
        "Latitude",
        "Country Code",
        "Postal Code",
        "Region",
        "Zone",
        "State"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*branch.*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch Location"
          ],
          "negativeExamples": [
            "Latitude"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Location"
          ],
          "negativeExamples": [
            "Country Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*city.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "City"
          ],
          "negativeExamples": [
            "State"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*place.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Place"
          ],
          "negativeExamples": [
            "Region"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*area.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Area"
          ],
          "negativeExamples": [
            "Zone"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*name.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Name"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 2990,
      "explanation": "This semantic type is used to identify city names that represent the location where a financial transaction was initiated or processed. It is useful in datasets where geographic analysis of transactions is required, such as in financial reporting, fraud detection, and market analysis.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "6f73bae7-c0d4-430e-97b5-6eabc6275e75"
    }
  ]
}