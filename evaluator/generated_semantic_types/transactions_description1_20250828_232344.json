{
  "dataset": "transactions",
  "description_number": 1,
  "timestamp": "20250828_232344",
  "generated_types": [
    {
      "resultType": "generated",
      "semanticType": "LoginAttempts",
      "description": "The number of authentication attempts made by a customer before successfully accessing their account for the transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "3",
        "5",
        "10",
        "1",
        "7",
        "12"
      ],
      "negativeContentExamples": [
        "three",
        "five",
        "ten",
        "one",
        "seven",
        "twelve"
      ],
      "positiveHeaderExamples": [
        "Login Attempts",
        "Attempt Count"
      ],
      "negativeHeaderExamples": [
        "Failed Attempts",
        "Retry Count"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*login.*attempts.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Login Attempts"
          ],
          "negativeExamples": [
            "Failed Attempts"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempt Count"
          ],
          "negativeExamples": [
            "Retry Count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempts"
          ],
          "negativeExamples": [
            "Retries"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Count"
          ],
          "negativeExamples": [
            "Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 3960,
      "explanation": "This semantic type identifies the number of login attempts made by a user before successfully accessing their account. It is useful for tracking authentication attempts and can help in identifying potential security issues or user behavior patterns.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "3a27d2b6-cf97-447b-a9ab-980b1d44cc0d"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDuration",
      "description": "The time elapsed in seconds from transaction initiation to completion, used for performance monitoring and fraud detection.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "120",
        "3600",
        "45",
        "300",
        "180",
        "600"
      ],
      "negativeContentExamples": [
        "1.5",
        "two hours",
        "00:05:00",
        "five minutes",
        "1h 30m",
        "3.14"
      ],
      "positiveHeaderExamples": [
        "Transaction Duration",
        "Duration"
      ],
      "negativeHeaderExamples": [
        "Session Duration",
        "Processing Time"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Session Duration"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*secs.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Duration (secs)"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Session Duration"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*time.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Duration (secs)"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        }
      ],
      "priority": 3970,
      "explanation": "This semantic type represents the duration of a transaction in seconds, which is crucial for monitoring performance and detecting potential fraud. It is identified by numeric values representing seconds and is typically labeled with terms like \"Transaction Duration\" or \"Duration (secs)\" in datasets.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "1d28adce-ca23-46f3-9d05-6e4d79e71b18"
    },
    {
      "resultType": "generated",
      "semanticType": "IP Address",
      "description": "The internet protocol address of the network connection used during a financial transaction, enabling digital forensics and security analysis.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "192.168.1.1",
        "10.0.0.1",
        "172.16.254.1",
        "8.8.8.8",
        "255.255.255.255",
        "127.0.0.1"
      ],
      "negativeContentExamples": [
        "256.256.256.256",
        "192.168.1.256",
        "192.168.1",
        "192.168.1.1.1",
        "192.168.1.abc",
        "192.168.1.-1"
      ],
      "positiveHeaderExamples": [
        "IP Address",
        "Source IP"
      ],
      "negativeHeaderExamples": [
        "MAC Address",
        "Address"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*ip\\s*address.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP Address"
          ],
          "negativeExamples": [
            "MAC Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*source\\s*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Source IP"
          ],
          "negativeExamples": [
            "Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP"
          ],
          "negativeExamples": [
            "Address"
          ],
          "rationale": null
        }
      ],
      "priority": 3980,
      "explanation": "This semantic type identifies IP addresses used in network connections during financial transactions. It is crucial for digital forensics and security analysis, allowing for the tracking and identification of network activity.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "ca9ddf4d-2114-4144-8ec1-883bd2909f98"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionType",
      "description": "The classification of a transaction indicating whether funds are being added to or removed from an account.",
      "baseType": "STRING",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND",
        "CHARGE",
        "REVERSAL"
      ],
      "backout": "^[A-Z_]{4,12}$",
      "positiveContentExamples": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND"
      ],
      "negativeContentExamples": [
        "ACCOUNT",
        "METHOD",
        "EMAIL",
        "ADDRESS",
        "PHONE",
        "NAME",
        "DATE",
        "NUMBER"
      ],
      "positiveHeaderExamples": [
        "Transaction Type",
        "Txn Direction",
        "Transaction",
        "Txn",
        "Type"
      ],
      "negativeHeaderExamples": [
        "Account Type",
        "Payment Method",
        "Email Address",
        "Phone Number",
        "Customer Name"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Type"
          ],
          "negativeExamples": [
            "Account Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*direction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Direction"
          ],
          "negativeExamples": [
            "Payment Method"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction"
          ],
          "negativeExamples": [
            "Account"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn"
          ],
          "negativeExamples": [
            "Acc"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Method"
          ],
          "rationale": null
        }
      ],
      "priority": 4000,
      "explanation": "This semantic type is used to classify transactions based on their direction, indicating whether funds are being added to or removed from an account. It helps in identifying the nature of the transaction for financial analysis and reporting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0e042b89-2dbf-4ac1-82aa-53f9210984c8"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionID",
      "description": "A unique transaction identifier that enables tracking and referencing of individual financial transactions across banking systems.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(transaction_id|txn_id|reference|ref_id)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "123456",
        "2023-10-01",
        "John Doe",
        "user@example.com",
        "1234-5678-9012-3456",
        "+1-800-555-0199"
      ],
      "positiveHeaderExamples": [
        "Transaction ID",
        "TX Reference",
        "Reference Number",
        "Ref ID",
        "Transaction Identifier",
        "Txn ID"
      ],
      "negativeHeaderExamples": [
        "User ID",
        "Transaction Date",
        "Account Number",
        "Customer ID",
        "Amount",
        "Date of Birth"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction ID"
          ],
          "negativeExamples": [
            "User ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "TX Reference"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*reference.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Reference Number"
          ],
          "negativeExamples": [
            "Account Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ref_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Ref ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 3990,
      "explanation": "This semantic type is used to identify unique transaction identifiers in banking systems. These identifiers are crucial for tracking and referencing individual transactions, ensuring accurate record-keeping and facilitating financial audits.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "47e41831-2d84-4938-a589-33f214d989d8"
    },
    {
      "resultType": "generated",
      "semanticType": "PreviousTransactionDate",
      "description": "The timestamp of the most recent transaction that occurred before the current transaction on the same account.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i).*previous.*transaction.*date.*|.*last.*transaction.*date.*",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "2023-10-15",
        "15/10/2023",
        "10-15-2023",
        "2023/10/15",
        "2023.10.15",
        "Next Transaction Date"
      ],
      "positiveHeaderExamples": [
        "Previous Transaction Date",
        "Last Transaction Date"
      ],
      "negativeHeaderExamples": [
        "Next Transaction Date",
        "Original Date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*previous.*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Previous Transaction Date"
          ],
          "negativeExamples": [
            "Next Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*last.*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Last Transaction Date"
          ],
          "negativeExamples": [
            "Original Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Date"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        }
      ],
      "priority": 4010,
      "explanation": "This semantic type identifies the date and time of the most recent transaction that occurred before the current transaction on the same account. It is useful for financial analysis, auditing, and transaction history tracking.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "cd2dc801-1d79-496f-889d-d1bc6c458584"
    },
    {
      "resultType": "generated",
      "semanticType": "CustomerAge",
      "description": "The age of the customer in years at the time of the transaction, used for demographic analysis and risk assessment.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d{1,3}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "25",
        "42",
        "67",
        "18",
        "90",
        "33"
      ],
      "negativeContentExamples": [
        "25.5",
        "Age: 42",
        "sixty-seven",
        "18 years",
        "90+",
        "thirty-three"
      ],
      "positiveHeaderExamples": [
        "Customer Age",
        "Age"
      ],
      "negativeHeaderExamples": [
        "Account Age",
        "Years Since Opening"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Age"
          ],
          "negativeExamples": [
            "Account Age"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age (years)"
          ],
          "negativeExamples": [
            "Years Since Opening"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age"
          ],
          "negativeExamples": [
            "Years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Years"
          ],
          "negativeExamples": [
            "Months"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 4020,
      "explanation": "This semantic type represents the age of a customer in years, which is crucial for demographic analysis and risk assessment in various business contexts. It is identified by numeric values typically ranging from 0 to 120, and is often labeled in datasets with terms like \"Customer Age\" or \"Age (years)\".",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "6f3786a9-9731-4c17-b232-5e2be766826f"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionAmount",
      "description": "The monetary value involved in a financial transaction, representing the amount being transferred, debited, or credited.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1,234.56",
        "100.00",
        "5,678.90",
        "0.99",
        "10,000.00",
        "123.45"
      ],
      "negativeContentExamples": [
        "1234,56",
        "100,00",
        "5.678,90",
        "0,99",
        "10.000,00",
        "123,45"
      ],
      "positiveHeaderExamples": [
        "Transaction Amount",
        "Amount",
        "Amount",
        "Value",
        "Transaction Value",
        "Payment Amount"
      ],
      "negativeHeaderExamples": [
        "Transaction Date",
        "Balance",
        "Account Number",
        "Customer ID",
        "Invoice Date",
        "Order Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Amount"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*usd.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount (USD)"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 4030,
      "explanation": "This semantic type represents the monetary value involved in financial transactions. It is used to identify columns or data fields that contain amounts of money, typically formatted with commas as thousand separators and a decimal point for cents. This type is crucial for financial data analysis, accounting, and transaction processing.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "c86a1e6b-fbb6-41cc-994f-7269fb0b28fa"
    },
    {
      "resultType": "generated",
      "semanticType": "Location",
      "description": "The geographic location where a financial transaction was initiated or processed, typically represented as a city name.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^[A-Za-z]+(?:[\\s-][A-Za-z]+)*$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "New York",
        "Los Angeles",
        "Chicago",
        "Houston",
        "Phoenix",
        "Philadelphia",
        "San Antonio",
        "San Diego"
      ],
      "negativeContentExamples": [
        "12345",
        "40.7128° N",
        "74.0060° W",
        "123-456",
        "New York, NY"
      ],
      "positiveHeaderExamples": [
        "Location",
        "Branch Location",
        "City",
        "Place",
        "Area",
        "Location Name"
      ],
      "negativeHeaderExamples": [
        "Latitude",
        "Country Code",
        "State",
        "Region",
        "Zone",
        "Postal Code"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*branch.*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch Location"
          ],
          "negativeExamples": [
            "Latitude"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Location"
          ],
          "negativeExamples": [
            "Country Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*city.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "City"
          ],
          "negativeExamples": [
            "State"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*place.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Place"
          ],
          "negativeExamples": [
            "Region"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*area.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Area"
          ],
          "negativeExamples": [
            "Zone"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*name.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Name"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 4040,
      "explanation": "This semantic type is used to identify geographic locations, specifically city names, where financial transactions are initiated or processed. It is useful in datasets where understanding the location of transactions is important for analysis, reporting, or compliance purposes.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "b6eb7ffd-2736-4431-8498-37cba46672e4"
    },
    {
      "resultType": "generated",
      "semanticType": "DeviceID",
      "description": "A unique identifier for the electronic device used to initiate or authorize a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "123e4567-e89b-12d3-a456-426614174000",
        "abcdefab-1234-5678-abcd-ef1234567890",
        "00112233-4455-6677-8899-aabbccddeeff",
        "deadbeef-cafe-babe-face-feedfacefeed",
        "f47ac10b-58cc-4372-a567-0e02b2c3d479",
        "550e8400-e29b-41d4-a716-446655440000"
      ],
      "negativeContentExamples": [
        "g47ac10b-58cc-4372-a567-0e02b2c3d479",
        "550e8400e29b41d4a716446655440000",
        "123e4567-e89b-12d3-a456-42661417400",
        "123e4567-e89b-12d3-a456-4266141740000",
        "123e4567-e89b-12d3-a456-42661417400g"
      ],
      "positiveHeaderExamples": [
        "Device ID",
        "D‑ID",
        "Device Identifier",
        "Device Identification",
        "Device Unique ID",
        "Device UUID"
      ],
      "negativeHeaderExamples": [
        "Customer ID",
        "Device Type",
        "Transaction ID",
        "Order ID",
        "Product ID",
        "Serial Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*device.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*d[\\s-]*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "D‑ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*device.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        }
      ],
      "priority": 4050,
      "explanation": "This semantic type represents a unique identifier for electronic devices used in financial transactions. It is typically a UUID format, ensuring each device can be distinctly recognized and authenticated.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "4ea7846d-8d65-462b-8b47-ae7e5126f3d4"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountBalance",
      "description": "The current monetary balance in the customer's account at the time of the transaction, expressed in the account's base currency.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^\\d+(\\.\\d{1,2})?$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1234.56",
        "789.00",
        "0.99",
        "10000",
        "250.5",
        "500"
      ],
      "negativeContentExamples": [
        "1234,56",
        "12.345",
        "abc",
        "12.34.56",
        "-100",
        "1,000.00"
      ],
      "positiveHeaderExamples": [
        "Account Balance",
        "Current Balance",
        "Balance",
        "Account Current Balance",
        "Customer Balance",
        "Available Balance"
      ],
      "negativeHeaderExamples": [
        "Balance Change",
        "Credit Limit",
        "Transaction Amount",
        "Balance Due",
        "Interest Rate",
        "Loan Amount"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Balance"
          ],
          "negativeExamples": [
            "Balance Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*current.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Current Balance"
          ],
          "negativeExamples": [
            "Credit Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance"
          ],
          "negativeExamples": [
            "Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Text"
          ],
          "rationale": null
        }
      ],
      "priority": 4060,
      "explanation": "This semantic type represents the current monetary balance in a customer's account, typically expressed in the account's base currency. It is used to identify and classify data fields that store account balance information, which is crucial for financial transactions and account management.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "6f862390-05bf-4353-8624-87fb3342e642"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDate",
      "description": "The date and time when a financial transaction occurred, used for chronological tracking and reporting purposes.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023-10-15T14:30:00Z",
        "2022-05-01T08:45:30+02:00",
        "2021-12-31T23:59:59-05:00",
        "2020-07-20T12:00:00.000Z",
        "2019-11-11T11:11:11+00:00",
        "2018-03-03T03:03:03-03:00"
      ],
      "negativeContentExamples": [
        "2023/10/15 14:30:00",
        "15-10-2023 14:30",
        "2023-10-15",
        "14:30:00",
        "2023-10-15T14:30",
        "Transaction ID: 12345"
      ],
      "positiveHeaderExamples": [
        "Transaction Date",
        "Txn Timestamp"
      ],
      "negativeHeaderExamples": [
        "Transaction ID",
        "Date Created"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*timestamp.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        }
      ],
      "priority": 4070,
      "explanation": "This semantic type is used to identify and classify data that represents the date and time of financial transactions. It is crucial for chronological tracking and reporting in financial datasets. The regex pattern is designed to match ISO 8601 date-time formats, which are commonly used in transaction records.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "5cce43ef-c4d0-4d1b-ad4d-c4201e90e419"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountID",
      "description": "A bank account identifier that uniquely represents a customer's financial account within the banking institution.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i).*account.*id.*|.*acct.*id.*|.*account.*number.*",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "John Doe",
        "123 Main St",
        "Balance: $1000",
        "01/01/2020",
        "USD",
        "Customer Name"
      ],
      "positiveHeaderExamples": [
        "Account ID",
        "Customer Account Code",
        "Acct ID",
        "Account Number",
        "Account Identifier",
        "Customer ID"
      ],
      "negativeHeaderExamples": [
        "Account Balance",
        "Customer Name",
        "Transaction Date",
        "Opening Date",
        "Account Type",
        "Balance ID"
      ],
      "confidenceThreshold": 97.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account ID"
          ],
          "negativeExamples": [
            "Account Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*account.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Account Code"
          ],
          "negativeExamples": [
            "Customer Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*acct.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Acct ID"
          ],
          "negativeExamples": [
            "Balance ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account.*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Number"
          ],
          "negativeExamples": [
            "Account Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        }
      ],
      "priority": 4080,
      "explanation": "This semantic type is used to identify columns or data values that represent a unique identifier for a bank account. It is crucial for distinguishing individual accounts within a banking system, ensuring accurate financial transactions and record-keeping.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "2fdeec5c-9328-4e4b-805f-95abecf7921e"
    },
    {
      "resultType": "generated",
      "semanticType": "MerchantID",
      "description": "A unique code identifying the merchant or business entity involved in a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(?:merchant|business|vendor)[-_ ]?(?:id|code)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "Store-123",
        "VendorName",
        "Shop-456",
        "Company-789",
        "Retailer-ABC",
        "Outlet-XYZ"
      ],
      "positiveHeaderExamples": [
        "Merchant ID",
        "Merchant Code",
        "Vendor ID",
        "Business ID",
        "Merchant Identifier",
        "Vendor Code"
      ],
      "negativeHeaderExamples": [
        "Store Name",
        "Vendor Name",
        "Shop Name",
        "Company Name",
        "Retailer Name",
        "Outlet Name"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*merchant[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*merchant[_-]?code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant Code"
          ],
          "negativeExamples": [
            "Vendor Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*vendor[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Vendor ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*business[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Business ID"
          ],
          "negativeExamples": [
            "Vendor Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 4090,
      "explanation": "This semantic type is used to identify unique codes associated with merchants or business entities in financial transactions. It helps in categorizing and processing transaction data by linking it to specific merchants or vendors.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "21ffcf00-042b-444c-9773-d57100581727"
    },
    {
      "resultType": "error",
      "semanticType": "CustomerOccupation",
      "description": null,
      "baseType": "STRING",
      "pluginType": null,
      "regexPattern": null,
      "listValues": null,
      "backout": null,
      "positiveContentExamples": null,
      "negativeContentExamples": null,
      "positiveHeaderExamples": null,
      "negativeHeaderExamples": null,
      "confidenceThreshold": 0.0,
      "headerPatterns": null,
      "priority": 4100,
      "explanation": "Failed to parse Claude response - no valid JSON or XML found",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "153b56c7-9ade-4a7f-b681-063ce3d12183"
    },
    {
      "resultType": "error",
      "semanticType": "Channel",
      "description": null,
      "baseType": "STRING",
      "pluginType": null,
      "regexPattern": null,
      "listValues": null,
      "backout": null,
      "positiveContentExamples": null,
      "negativeContentExamples": null,
      "positiveHeaderExamples": null,
      "negativeHeaderExamples": null,
      "confidenceThreshold": 0.0,
      "headerPatterns": null,
      "priority": 4110,
      "explanation": "Failed to parse Claude response - no valid JSON or XML found",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0be3c252-e5e4-4c81-857f-f3171da87901"
    }
  ]
}