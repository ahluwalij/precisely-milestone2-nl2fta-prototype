[
  {
    "resultType": "generated",
    "semanticType": "LoanID",
    "description": "A unique numeric identifier assigned to a specific loan product or credit facility extended to a customer. Values are strictly numeric and typically appear as a contiguous 9\u201312 digit sequence suitable for internal referencing and reconciliation.",
    "pluginType": "regex",
    "regexPattern": "\\b\\d{9,12}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9080,
    "headerPatterns": [
      {
        "regExp": "(?i).*loan[_ ]?id.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "loan_id"
        ],
        "negativeExamples": [
          "loan amount"
        ]
      },
      {
        "regExp": "(?i).*loan.*number.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "loan number"
        ],
        "negativeExamples": [
          "account number"
        ]
      },
      {
        "regExp": "(?i).*loan.*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan identifier"
        ],
        "negativeExamples": [
          "customer identifier"
        ]
      },
      {
        "regExp": "(?i).*credit.*facility.*number.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "credit facility number"
        ],
        "negativeExamples": [
          "facility name"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "000123456",
      "987654321",
      "1200345678",
      "7000000001",
      "45012345678",
      "31000000000",
      "560012349876",
      "200045670123"
    ],
    "negativeContentExamples": [
      "12345678",
      "1234567890123",
      "123 456 7890",
      "123-456-789",
      "12345678A",
      "A123456789",
      "00000000",
      "9876543.210"
    ],
    "positiveHeaderExamples": [
      "loan_id",
      "loan id",
      "loan number",
      "loan account number",
      "loan identifier",
      "credit facility number",
      "loan ref number",
      "loanid"
    ],
    "negativeHeaderExamples": [
      "account number",
      "customer id",
      "application number",
      "invoice number",
      "loan amount",
      "interest rate",
      "credit score",
      "transaction id"
    ],
    "explanation": "IDENTITY.LoanID detects numeric-only loan identifiers using a constrained digit-length pattern (9\u201312 digits) and loan-specific header cues. Use this type for columns that store internal loan or credit facility IDs, ensuring disambiguation from generic numbers through header patterns such as loan_id, loan number, and credit facility number.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T16:59:37.093859"
  },
  {
    "resultType": "generated",
    "semanticType": "FeedbackType",
    "description": "The classification of customer feedback based on the nature and intent of the communication.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "COMPLAINT",
      "COMPLIMENT",
      "PRAISE",
      "INQUIRY",
      "QUESTION",
      "BUG REPORT",
      "FEATURE REQUEST",
      "REFUND REQUEST",
      "CANCELLATION REQUEST",
      "ACCOUNT ISSUE",
      "BILLING ISSUE",
      "OUTAGE REPORT",
      "SUGGESTION",
      "ACCESS ISSUE",
      "PAYMENT DISPUTE"
    ],
    "backout": "^[A-Z]{2,20}( [A-Z]{2,20}){0,2}$",
    "confidenceThreshold": 94,
    "priority": 9160,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*feedback.*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_feedback_type"
        ],
        "negativeExamples": [
          "customer_feedback_score"
        ]
      },
      {
        "regExp": "(?i).*feedback.*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "feedback_type"
        ],
        "negativeExamples": [
          "feedback_date"
        ]
      },
      {
        "regExp": "(?i).*feedback.*category.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "feedback_category"
        ],
        "negativeExamples": [
          "product_category"
        ]
      },
      {
        "regExp": "(?i).*(fb|fbk).*type.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "fb_type"
        ],
        "negativeExamples": [
          "fb_id"
        ]
      },
      {
        "regExp": "(?i).*classification.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "feedback_classification"
        ],
        "negativeExamples": [
          "customer_feedback_rating"
        ]
      },
      {
        "regExp": "(?i).*type.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "type"
        ],
        "negativeExamples": [
          "feedback_notes"
        ]
      }
    ],
    "positiveContentExamples": [
      "COMPLAINT",
      "COMPLIMENT",
      "BUG REPORT",
      "FEATURE REQUEST",
      "REFUND REQUEST",
      "BILLING ISSUE",
      "INQUIRY",
      "SUGGESTION"
    ],
    "negativeContentExamples": [
      "COMPLAINTS",
      "COMPLIMENTARY",
      "PRAISES",
      "CUSTOMER INQUIRY",
      "BUG-REPORT",
      "FEATUREREQUEST",
      "REFUND REQUESTED",
      "ACCOUNT ISSUES"
    ],
    "positiveHeaderExamples": [
      "customer_feedback_type",
      "feedback_type",
      "feedback_category",
      "fb_type",
      "fbk_type",
      "feedback_classification",
      "customer_feedback_category",
      "ticket_feedback_type"
    ],
    "negativeHeaderExamples": [
      "feedback_date",
      "feedback_score",
      "feedback_notes",
      "product_category",
      "fb_id",
      "feedback_channel",
      "customer_feedback_rating",
      "feedback_source"
    ],
    "explanation": "This semantic type identifies standardized labels that categorize the intent and nature of customer feedback entries (e.g., complaint, compliment, feature request). It is intended for columns that store a curated set of feedback categories used for routing, analytics, and reporting. The list-based approach ensures precise matching to a finite taxonomy while the backout pattern provides a controlled fallback shape.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T16:59:43.622803"
  },
  {
    "resultType": "generated",
    "semanticType": "FeedbackID",
    "description": "A unique numeric identifier assigned to customer feedback, complaints, or service requests submitted to the bank. This identifier is numeric-only and is typically used to track and reference customer interactions across support and service channels.",
    "pluginType": "regex",
    "regexPattern": "\\b\\d{8,12}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9150,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client).*feedback.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_feedback_id"
        ],
        "negativeExamples": [
          "customer_feedback_date"
        ]
      },
      {
        "regExp": "(?i).*(feedback|complaint|service.*request).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "complaint_id"
        ],
        "negativeExamples": [
          "service_request_code"
        ]
      },
      {
        "regExp": "(?i).*(feedback|complaint|service.*request).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "feedback_details"
        ],
        "negativeExamples": [
          "request_details"
        ]
      },
      {
        "regExp": "(?i).*(fdbk|fbk|sreq|cmpl).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "fdbk_id"
        ],
        "negativeExamples": [
          "fbk_code"
        ]
      },
      {
        "regExp": "(?i).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "id"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "00012345",
      "1029384756",
      "87530124",
      "564738291045",
      "219876543210",
      "8300567891",
      "70004567",
      "991234567890"
    ],
    "negativeContentExamples": [
      "1234567",
      "1234567890123",
      "12345A7890",
      "1234 567890",
      "0123-456789",
      "FB12345678",
      "12345678a",
      "12345678.0"
    ],
    "positiveHeaderExamples": [
      "feedback_id",
      "customer_feedback_id",
      "complaint_id",
      "service_request_id",
      "feedback_ticket_id",
      "fb_feedback_id",
      "feedback_reference_id",
      "case_feedback_id"
    ],
    "negativeHeaderExamples": [
      "feedback_date",
      "feedback_code",
      "complaint_status",
      "service_request_code",
      "request_number",
      "feedback_type",
      "complaint_category",
      "customer_reference"
    ],
    "explanation": "IDENTITY.FeedbackID identifies numeric-only tokens used as unique keys for customer feedback, complaints, or service requests within banking systems. The value pattern targets 8\u201312 digit IDs, avoiding alphanumerics or separators to reduce collisions with other identifiers. Header patterns prioritize explicit feedback/complaint/service-request ID columns while still allowing discovery via common abbreviations and the primitive 'id' term.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T16:59:51.949169"
  },
  {
    "resultType": "generated",
    "semanticType": "LoanStatus",
    "description": "The current state of a loan application or account in the lending process lifecycle.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "APPROVED",
      "PENDING",
      "DECLINED",
      "DENIED",
      "CONDITIONAL APPROVAL",
      "PREAPPROVED",
      "IN REVIEW",
      "UNDERWRITING",
      "FUNDED",
      "DISBURSED",
      "ACTIVE",
      "CURRENT",
      "PAST DUE 30",
      "PAST DUE 60",
      "PAST DUE 90",
      "DELINQUENT",
      "DEFAULTED",
      "CHARGED OFF",
      "CLOSED",
      "WITHDRAWN",
      "CANCELED",
      "PAID OFF",
      "SETTLED"
    ],
    "backout": "^[A-Z][A-Z0-9 ]{1,29}$",
    "confidenceThreshold": 93,
    "priority": 9120,
    "headerPatterns": [
      {
        "regExp": "(?i).*loan.*application.*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan application status"
        ],
        "negativeExamples": [
          "loan application date"
        ]
      },
      {
        "regExp": "(?i).*loan.*account.*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account loan status"
        ],
        "negativeExamples": [
          "account loan number"
        ]
      },
      {
        "regExp": "(?i).*underwriting.*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "underwriting status"
        ],
        "negativeExamples": [
          "underwriting notes"
        ]
      },
      {
        "regExp": "(?i).*(loan|ln|financing|mortgage).*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan status"
        ],
        "negativeExamples": [
          "loan amount"
        ]
      },
      {
        "regExp": "(?i).*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "application status"
        ],
        "negativeExamples": [
          "application id"
        ]
      }
    ],
    "positiveContentExamples": [
      "APPROVED",
      "PENDING",
      "IN REVIEW",
      "UNDERWRITING",
      "PAID OFF",
      "CHARGED OFF",
      "DEFAULTED",
      "PAST DUE 60"
    ],
    "negativeContentExamples": [
      "APPROVE",
      "PENDING REVIEW",
      "PRE-APPROVED",
      "APPROVED FINAL",
      "PAST DUE-30",
      "CHARGEOFF",
      "DEFAULT",
      "ACTIVE ACCOUNT"
    ],
    "positiveHeaderExamples": [
      "loan application status",
      "loan status",
      "account loan status",
      "underwriting status",
      "application status",
      "financing status",
      "mortgage loan status",
      "credit decision status"
    ],
    "negativeHeaderExamples": [
      "loan application date",
      "loan amount",
      "account number",
      "interest rate",
      "payment schedule",
      "loan term",
      "underwriting notes",
      "disbursement date"
    ],
    "explanation": "This semantic type represents standardized labels used to indicate the stage or condition of a loan application or account (e.g., PENDING, APPROVED, DEFAULTED). Use it to classify columns containing categorical status values within lending workflows.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T16:59:53.232270"
  },
  {
    "resultType": "generated",
    "semanticType": "BranchID",
    "description": "A numeric identifier that uniquely represents a specific bank branch or service location within the financial institution's network.",
    "pluginType": "regex",
    "regexPattern": "\\b\\d{4,6}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9070,
    "headerPatterns": [
      {
        "regExp": "(?i).*bank.*branch.*(id|code|number).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "bank_branch_id"
        ],
        "negativeExamples": [
          "bank_code"
        ]
      },
      {
        "regExp": "(?i).*(service|bank).*location.*(id|code|number).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "service_location_id"
        ],
        "negativeExamples": [
          "location_name"
        ]
      },
      {
        "regExp": "(?i).*(branch|br).*([ _]?)(id|code|no|num).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "branch_no"
        ],
        "negativeExamples": [
          "branch_phone"
        ]
      },
      {
        "regExp": "(?i).*(branch|location).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "branch"
        ],
        "negativeExamples": [
          "department"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "code"
        ],
        "negativeExamples": [
          "number"
        ]
      }
    ],
    "positiveContentExamples": [
      "0123",
      "1045",
      "2309",
      "45012",
      "07890",
      "600001",
      "999999",
      "30007"
    ],
    "negativeContentExamples": [
      "123",
      "1234567",
      "12 345",
      "12-345",
      "B1234",
      "1234B",
      "001.23",
      "000 123"
    ],
    "positiveHeaderExamples": [
      "branch_id",
      "bank_branch_id",
      "branch code",
      "service_location_id",
      "location_code",
      "branch number",
      "br_id",
      "branch_no"
    ],
    "negativeHeaderExamples": [
      "customer_id",
      "account_branch",
      "branch_address",
      "bank_code",
      "routing_number",
      "swift_code",
      "atm_id",
      "branch_open_date"
    ],
    "explanation": "This semantic type identifies numeric bank branch identifiers of 4 to 6 digits. It is intended for columns representing a branch or service location key within a financial institution. Content is constrained to compact digit-only strings, while header patterns provide strong context via terms such as branch, location, and code to distinguish from other financial identifiers.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:00.193665"
  },
  {
    "resultType": "generated",
    "semanticType": "ResolutionStatus",
    "description": "The current state of progress in addressing and resolving customer feedback or service requests. Typical values are human-readable lifecycle labels indicating where a case, ticket, or request stands in the resolution process. This type captures human-readable status labels and does not include numeric status codes or timestamps.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "OPEN",
      "NEW",
      "PENDING",
      "IN PROGRESS",
      "WORK IN PROGRESS",
      "ON HOLD",
      "AWAITING CUSTOMER",
      "AWAITING SUPPORT",
      "PENDING VENDOR",
      "ESCALATED",
      "RESOLVED",
      "FIXED",
      "COMPLETED",
      "CLOSED",
      "REOPENED",
      "CANCELED",
      "CANCELLED",
      "DUPLICATE",
      "WONT FIX",
      "NOT REPRODUCIBLE",
      "NEEDS INFO",
      "INFORMATION PROVIDED",
      "DEFERRED"
    ],
    "backout": "^[A-Z]+( [A-Z]+){0,4}$",
    "confidenceThreshold": 93,
    "priority": 9170,
    "headerPatterns": [
      {
        "regExp": "(?i).*(case|ticket|request|incident).*resolution.*status.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "ticket_resolution_status"
        ],
        "negativeExamples": [
          "ticket_resolution_date"
        ]
      },
      {
        "regExp": "(?i).*(customer|client).*feedback.*resolution.*status.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "customer_feedback_resolution_status"
        ],
        "negativeExamples": [
          "customer_feedback_rating"
        ]
      },
      {
        "regExp": "(?i).*service.*request.*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "service_request_status"
        ],
        "negativeExamples": [
          "service_request_id"
        ]
      },
      {
        "regExp": "(?i).*resolution.*status.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "resolution_status"
        ],
        "negativeExamples": [
          "resolution_notes"
        ]
      },
      {
        "regExp": "(?i).*status.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "status"
        ],
        "negativeExamples": [
          "priority"
        ]
      }
    ],
    "positiveContentExamples": [
      "OPEN",
      "IN PROGRESS",
      "PENDING",
      "ON HOLD",
      "RESOLVED",
      "CLOSED",
      "ESCALATED",
      "AWAITING CUSTOMER"
    ],
    "negativeContentExamples": [
      "RESOLVE",
      "RESOLUTION COMPLETE",
      "COMPLETE",
      "CLOSURE",
      "WAITING FOR CUSTOMER",
      "INPROGRESS",
      "PENDING-CUSTOMER",
      "FIX IN PROGRESS"
    ],
    "positiveHeaderExamples": [
      "resolution_status",
      "case_resolution_status",
      "ticket_resolution_status",
      "customer_feedback_resolution_status",
      "service_request_status",
      "incident_status",
      "issue_resolution_status",
      "request_resolution_status"
    ],
    "negativeHeaderExamples": [
      "resolution_date",
      "resolution_time",
      "resolution_notes",
      "status_code",
      "http_status",
      "priority",
      "service_type",
      "issue_category"
    ],
    "explanation": "ResolutionStatus identifies the lifecycle state of a customer feedback item, service ticket, or request, expressed as a human-readable label (e.g., OPEN, IN PROGRESS, RESOLVED). Use this type to categorize and filter workflow progress rather than to capture numeric codes, timestamps, or descriptive notes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:02.539955"
  },
  {
    "resultType": "generated",
    "semanticType": "TransactionAmount",
    "description": "The monetary value involved in a financial transaction, representing the amount being transferred, debited, or credited. This includes amounts with optional currency symbols or ISO currency codes, optional signs, and standard thousand and decimal separators.",
    "pluginType": "regex",
    "regexPattern": "\\b((\\$|\u20ac|\u00a3|\u00a5|\u20b9)\\s?-?\\(?\\d{1,3}(,\\d{3})*(\\.\\d{2})?\\)?|((USD|EUR|GBP|CAD|AUD|JPY|CHF|CNY|INR))\\s?-?\\(?\\d{1,3}(,\\d{3})*(\\.\\d{2})?\\)?|-?\\(?\\d{1,3}(,\\d{3})*(\\.\\d{2})?\\)?\\s?((USD|EUR|GBP|CAD|AUD|JPY|CHF|CNY|INR))|-?\\(?\\d+\\.\\d{2}\\)?)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9010,
    "headerPatterns": [
      {
        "regExp": "(?i).*transaction.*amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "transaction_amount"
        ],
        "negativeExamples": [
          "transaction_date"
        ]
      },
      {
        "regExp": "(?i).*(debit|credit).*amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "debit_amount"
        ],
        "negativeExamples": [
          "credit_score"
        ]
      },
      {
        "regExp": "(?i).*(payment|invoice).*amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "payment_amount"
        ],
        "negativeExamples": [
          "invoice_number"
        ]
      },
      {
        "regExp": "(?i).*(txn|pay).*amt.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "txn_amt"
        ],
        "negativeExamples": [
          "txn_id"
        ]
      },
      {
        "regExp": "(?i).*amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "amount"
        ],
        "negativeExamples": [
          "currency_code"
        ]
      }
    ],
    "positiveContentExamples": [
      "$1,234.56",
      "-$250.00",
      "1,000.00 USD",
      "EUR 999.99",
      "(1250.50)",
      "\u00a312.00",
      "CAD 2,500.00",
      "JPY 1,000"
    ],
    "negativeContentExamples": [
      "$1,234.5",
      "1234",
      "USD12,34.56",
      "\u20ac 1.234,56",
      "1,23.45",
      "AUD - 123.45",
      "(1234)",
      "2500,00"
    ],
    "positiveHeaderExamples": [
      "transaction_amount",
      "amount",
      "payment_amount",
      "debit_amount",
      "credit_amount",
      "txn_amt",
      "invoice_amount",
      "total_amount"
    ],
    "negativeHeaderExamples": [
      "transaction_date",
      "customer_name",
      "invoice_number",
      "payment_method",
      "transaction_count",
      "credit_score",
      "currency_code",
      "txn_id"
    ],
    "explanation": "Identifies monetary amounts associated with transactions, including optional currency symbols (such as $, \u20ac, \u00a3, \u00a5, \u20b9), ISO currency codes (e.g., USD, EUR, GBP, CAD, AUD, JPY, CHF, CNY, INR), optional signs, and common thousand and decimal separators. Suitable for fields capturing debits, credits, payments, and invoice amounts where the value represents money rather than an identifier or code.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:04.209505"
  },
  {
    "resultType": "generated",
    "semanticType": "AccountBalance",
    "description": "The current monetary balance in the customer's account at the time of the transaction, expressed in the account's base currency.",
    "pluginType": "regex",
    "regexPattern": "\\b-?((\\d{1,3}(,\\d{3})+)|\\d+)(\\.\\d{2})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9030,
    "headerPatterns": [
      {
        "regExp": "(?i).*current.*account.*balance.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "current_account_balance"
        ],
        "negativeExamples": [
          "account_balance_history"
        ]
      },
      {
        "regExp": "(?i).*account.*balance.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "account_balance"
        ],
        "negativeExamples": [
          "account_number"
        ]
      },
      {
        "regExp": "(?i).*(acct|account).*(bal|balance).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "acct_bal"
        ],
        "negativeExamples": [
          "available_balance"
        ]
      },
      {
        "regExp": "(?i).*balance.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "ending_balance"
        ],
        "negativeExamples": [
          "transaction_amount"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 88,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "0.00",
      "1250",
      "1,250",
      "1,250.75",
      "-300.00",
      "999999.99",
      "12,345,678.00"
    ],
    "negativeContentExamples": [
      "$123.45",
      "USD123.45",
      "1234.5",
      "1 234.56",
      "1,234,56.00",
      "(123.45)",
      "+100.00",
      "1,234."
    ],
    "positiveHeaderExamples": [
      "current_account_balance",
      "account_balance",
      "acct_bal",
      "post_txn_balance",
      "ending_balance",
      "new_balance",
      "balance_after",
      "balance"
    ],
    "negativeHeaderExamples": [
      "account_number",
      "transaction_amount",
      "available_credit",
      "credit_limit",
      "currency_code",
      "invoice_total",
      "account_type",
      "statement_date"
    ],
    "explanation": "Represents the numeric balance of an account at a given transaction moment, typically shown as an integer or with two decimal places, with optional thousands separators and an optional leading minus sign for overdrafts. The regex permits plain numbers (with or without grouping) and an optional fractional component of exactly two digits, avoiding currency symbols or alphabetic codes to reduce ambiguity. Header patterns prioritize explicit phrases like current_account_balance, then broader account/balance combinations, then generic balance, and finally the primitive numeric term to capture common schema variants.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:05.701428"
  },
  {
    "resultType": "generated",
    "semanticType": "CardType",
    "description": "The payment card network or brand associated with a credit or debit card used in transactions.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "VISA",
      "MASTERCARD",
      "AMERICAN EXPRESS",
      "AMEX",
      "DISCOVER",
      "JCB",
      "UNIONPAY",
      "DINERS CLUB",
      "MAESTRO",
      "INTERAC",
      "RUPAY",
      "MIR",
      "CARTE BANCAIRE",
      "ELO",
      "HIPERCARD",
      "TROY",
      "VERVE",
      "UATP",
      "LASER",
      "PRO100"
    ],
    "backout": "^[A-Z0-9 ]{3,20}$",
    "confidenceThreshold": 95,
    "priority": 9130,
    "headerPatterns": [
      {
        "regExp": "(?i).*payment.*card.*(network|brand|scheme).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "payment_card_network"
        ],
        "negativeExamples": [
          "card_network_id"
        ]
      },
      {
        "regExp": "(?i).*card.*(network|brand|scheme).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "card_brand"
        ],
        "negativeExamples": [
          "gift_card_number"
        ]
      },
      {
        "regExp": "(?i).*(payment|card).*brand.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "payment_brand"
        ],
        "negativeExamples": [
          "payment_method"
        ]
      },
      {
        "regExp": "(?i).*(cc|pmt|pay).*brand.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "cc_brand"
        ],
        "negativeExamples": [
          "cc_number"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "brand_name"
        ],
        "negativeExamples": [
          "description"
        ]
      }
    ],
    "positiveContentExamples": [
      "Visa",
      "MASTERCARD",
      "American Express",
      "Discover",
      "JCB",
      "UnionPay",
      "Diners Club",
      "Maestro"
    ],
    "negativeContentExamples": [
      "Visa Card",
      "Master Card",
      "AMEX CORPORATE",
      "AmericanExpress",
      "Discoverer",
      "J C B",
      "Union Pay",
      "DinersClub"
    ],
    "positiveHeaderExamples": [
      "payment_card_network",
      "card_brand",
      "card_network",
      "card_scheme",
      "cc_brand",
      "payment_brand",
      "card_type",
      "card_brand_name"
    ],
    "negativeHeaderExamples": [
      "gift_card_number",
      "payment_method",
      "cardholder_name",
      "card_issuer",
      "card_number",
      "customer_type",
      "brand_id",
      "name_on_card"
    ],
    "explanation": "Identifies the payment card network or brand (e.g., VISA, MASTERCARD, AMERICAN EXPRESS) associated with a card used in transactions. Useful for analytics, fraud rules, fee routing, and reconciliation where card brand distinctions matter.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:06.557034"
  },
  {
    "resultType": "generated",
    "semanticType": "AccountOpeningDate",
    "description": "The date when the customer's account was first established with the financial institution.",
    "pluginType": "regex",
    "regexPattern": "\\b((19|20)\\d\\d[-/.](0[1-9]|1[0-2])[-/.](0[1-9]|[12]\\d|3[01])|(0[1-9]|1[0-2])/(0[1-9]|[12]\\d|3[01])/(19|20)\\d\\d|(0[1-9]|[12]\\d|3[01])/(0[1-9]|1[0-2])/(19|20)\\d\\d|(19|20)\\d\\d(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01]))\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9040,
    "headerPatterns": [
      {
        "regExp": "(?i).*(account|acct).*(opening|opened).*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_opening_date"
        ],
        "negativeExamples": [
          "account_closing_date"
        ]
      },
      {
        "regExp": "(?i).*(account|acct).*(origination|inception|start).*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "acct_origination_date"
        ],
        "negativeExamples": [
          "acct_origination_number"
        ]
      },
      {
        "regExp": "(?i).*(date.*opened|opened.*date).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "date_opened"
        ],
        "negativeExamples": [
          "opening_balance"
        ]
      },
      {
        "regExp": "(?i).*(acct|account).*(open|orig|start).*dt.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "acct_open_dt"
        ],
        "negativeExamples": [
          "acct_open_qty"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "date"
        ],
        "negativeExamples": [
          "number"
        ]
      }
    ],
    "positiveContentExamples": [
      "2021-04-15",
      "2019/12/31",
      "2005.09.01",
      "07/08/2018",
      "31/01/2010",
      "2010/01/31",
      "1999-11-30",
      "20140305"
    ],
    "negativeContentExamples": [
      "2021-4-5",
      "07/8/2018",
      "2019-12-31T00:00:00Z",
      "2021-02/03",
      "31-01-2010",
      "2014035",
      "20211301",
      "2019/12/31 00:00"
    ],
    "positiveHeaderExamples": [
      "account_opening_date",
      "acct_opened_date",
      "account_origination_date",
      "date_opened",
      "account_start_date",
      "acct_open_dt",
      "account_inception_date"
    ],
    "negativeHeaderExamples": [
      "account_closing_date",
      "opening_balance_date",
      "account_status_date",
      "account_open_flag",
      "customer_opening_date",
      "acct_open_qty",
      "date_closed",
      "application_submission_date"
    ],
    "explanation": "This semantic type captures calendar dates representing when an account was first opened or originated. It recognizes common numeric date formats with clear token boundaries and avoids time components. Typical use cases include onboarding analytics, customer tenure calculations, and compliance reporting.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:11.375240"
  },
  {
    "resultType": "generated",
    "semanticType": "AccountType",
    "description": "The category of banking account that defines the product features and terms governing the customer relationship. Typical values represent deposit, investment, or retirement account products and are used to standardize reporting and analytics across product lines.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "CHECKING",
      "SAVINGS",
      "MONEY MARKET",
      "CERTIFICATE OF DEPOSIT",
      "BUSINESS CHECKING",
      "BUSINESS SAVINGS",
      "STUDENT CHECKING",
      "HIGH YIELD SAVINGS",
      "INTEREST CHECKING",
      "CASH MANAGEMENT",
      "BROKERAGE",
      "INDIVIDUAL RETIREMENT ACCOUNT",
      "IRA",
      "TRUST",
      "CUSTODIAL",
      "FIXED DEPOSIT",
      "CURRENT",
      "CD"
    ],
    "backout": "^[A-Z ]{2,30}$",
    "confidenceThreshold": 93,
    "priority": 9050,
    "headerPatterns": [
      {
        "regExp": "(?i).*account.*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_type"
        ],
        "negativeExamples": [
          "account_number"
        ]
      },
      {
        "regExp": "(?i).*(acct|acnt).*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "acct_type"
        ],
        "negativeExamples": [
          "acct_number"
        ]
      },
      {
        "regExp": "(?i).*account.*(category|class|subtype).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "account category"
        ],
        "negativeExamples": [
          "account status"
        ]
      },
      {
        "regExp": "(?i).*(deposit|bank).*account.*type.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "deposit account type"
        ],
        "negativeExamples": [
          "bank account number"
        ]
      },
      {
        "regExp": "(?i).*account.*(product|plan).*type.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "account product type"
        ],
        "negativeExamples": [
          "product code"
        ]
      },
      {
        "regExp": "(?i).*type.*",
        "confidence": 88,
        "mandatory": true,
        "positiveExamples": [
          "type"
        ],
        "negativeExamples": [
          "category"
        ]
      }
    ],
    "positiveContentExamples": [
      "CHECKING",
      "SAVINGS",
      "MONEY MARKET",
      "CERTIFICATE OF DEPOSIT",
      "BUSINESS CHECKING",
      "HIGH YIELD SAVINGS",
      "IRA",
      "CASH MANAGEMENT"
    ],
    "negativeContentExamples": [
      "CHECKINGS",
      "SAVING",
      "MONEY-MARKET",
      "CERTIFICATE OF DEPOSITS",
      "BUSINESS SAVING",
      "INTEREST CHECKING PLUS",
      "CURRENT ACCOUNT",
      "ACCOUNT TYPE: CHECKING"
    ],
    "positiveHeaderExamples": [
      "account_type",
      "acct_type",
      "account product type",
      "type of account",
      "account category",
      "deposit account type",
      "account class",
      "account subtype"
    ],
    "negativeHeaderExamples": [
      "account_number",
      "account_name",
      "account_status",
      "product_type_code",
      "transaction_type",
      "bank_account_code",
      "customer_type",
      "type_code"
    ],
    "explanation": "This semantic type represents standardized banking account categories used to label customer accounts by product, such as CHECKING, SAVINGS, or MONEY MARKET. It is useful for segmentation, reporting, and mapping disparate product labels into a consistent taxonomy across systems.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:19.881085"
  },
  {
    "resultType": "generated",
    "semanticType": "LoanAmount",
    "description": "The principal amount of money borrowed by the customer as part of a loan agreement.",
    "pluginType": "regex",
    "regexPattern": "\\b([$\u20ac\u00a3])?\\s?(\\d{1,3}([ ,]\\d{3})*|\\d+)(\\.\\d{2})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9090,
    "headerPatterns": [
      {
        "regExp": "(?i).*(loan[_\\s-]?(amount|principal)|principal[_\\s-]?amount).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_principal"
        ],
        "negativeExamples": [
          "loan_term"
        ]
      },
      {
        "regExp": "(?i).*requested[_\\s-]?loan[_\\s-]?amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "requested_loan_amount"
        ],
        "negativeExamples": [
          "requested_loan_term"
        ]
      },
      {
        "regExp": "(?i).*amount[_\\s-]?borrowed.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "amount_borrowed"
        ],
        "negativeExamples": [
          "amount_paid"
        ]
      },
      {
        "regExp": "(?i).*(ln|loan)[_\\s-]?(amt|amount).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_amt"
        ],
        "negativeExamples": [
          "loan_rate"
        ]
      },
      {
        "regExp": "(?i).*principal.*amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "principal_amount"
        ],
        "negativeExamples": [
          "principal_balance"
        ]
      },
      {
        "regExp": "(?i).*amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "amount"
        ],
        "negativeExamples": [
          "number"
        ]
      }
    ],
    "positiveContentExamples": [
      "10000",
      "10,000",
      "10,000.00",
      "950.00",
      "$1,250",
      "\u00a38,250.50",
      "1 200.00",
      "\u20ac1 000"
    ],
    "negativeContentExamples": [
      "1000.5",
      "USD 1,000.00",
      "1.000,00",
      "1,00.00",
      "$1,000.000",
      "-5000",
      "10,00",
      "$1,000.0"
    ],
    "positiveHeaderExamples": [
      "loan_amount",
      "principal_amount",
      "requested_loan_amount",
      "amount_borrowed",
      "loan_principal",
      "initial_loan_amount",
      "principal_loan_amount",
      "original_loan_amount"
    ],
    "negativeHeaderExamples": [
      "loan_term",
      "interest_rate",
      "payment_schedule",
      "loan_status",
      "loan_id",
      "borrower_name",
      "currency_code",
      "payment_date"
    ],
    "explanation": "This semantic type identifies monetary amounts representing the principal borrowed in a loan. It focuses on numeric currency values that may include currency symbols, optional thousands separators (comma or space), and an optional two-decimal fractional part. Typical inputs include values such as 10000, 10,000.00, or \u00a38,250.50. The header patterns prioritize explicit loan amount terminology and fall back to the primitive concept of 'amount'.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:20.446196"
  },
  {
    "resultType": "generated",
    "semanticType": "InterestRate",
    "description": "The annual percentage rate charged on a loan or paid on a deposit account, expressed as a percentage. Values are numeric from 0 to 100 inclusive, optionally with up to four decimal places, and ending with a percent sign, with an optional space before the percent sign.",
    "pluginType": "regex",
    "regexPattern": "\\b(100(\\.0{1,4})?|[0-9]{1,2}(\\.\\d{1,4})?)\\s?%(?!\\s*[A-Za-z%])",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9110,
    "headerPatterns": [
      {
        "regExp": "(?i).*annual.*interest.*rate.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "annual_interest_rate"
        ],
        "negativeExamples": [
          "interest_amount"
        ]
      },
      {
        "regExp": "(?i).*loan.*interest.*rate.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "loan_interest_rate"
        ],
        "negativeExamples": [
          "loan_interest_amount"
        ]
      },
      {
        "regExp": "(?i).*(interest[_ ]?rate|apr[_ ]?percent).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "interest_rate_pct"
        ],
        "negativeExamples": [
          "rate_limit"
        ]
      },
      {
        "regExp": "(?i).*(apr|interest).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "apr"
        ],
        "negativeExamples": [
          "amount"
        ]
      },
      {
        "regExp": "(?i).*rate.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "rate"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "3%",
      "5.25%",
      "7.5 %",
      "0%",
      "12.00%",
      "100%",
      "9.875%",
      "0.5%"
    ],
    "negativeContentExamples": [
      "3",
      "3 percent",
      "105%",
      "12.5%%",
      "7.5% APR",
      "-3%",
      "0.123456%",
      "1,5%"
    ],
    "positiveHeaderExamples": [
      "interest_rate",
      "annual_interest_rate",
      "loan_interest_rate",
      "deposit_interest_rate",
      "apr_percent",
      "interest_rate_pct",
      "apr"
    ],
    "negativeHeaderExamples": [
      "discount_rate",
      "tax_rate",
      "exchange_rate",
      "interest_amount",
      "rate_limit",
      "interest_start_date",
      "currency_rate"
    ],
    "explanation": "This semantic type detects annual interest rates expressed as percentages (0\u2013100%), optionally including up to four decimal places and an optional space before the percent sign. It is suitable for fields representing APR for loans or deposit accounts, ensuring values use a % symbol and excluding textual qualifiers like APR following the number. Header patterns prioritize specific phrases like annual_interest_rate and loan_interest_rate, then broader terms such as interest_rate and apr, finally falling back to the primitive rate term.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:23.083903"
  },
  {
    "resultType": "generated",
    "semanticType": "AccountBalanceAfterTransaction",
    "description": "The resulting account balance immediately following the completion of the current transaction.",
    "pluginType": "regex",
    "regexPattern": "\\b(\\(|-)?\\s*(USD|EUR|GBP|JPY|AUD|CAD|CHF|CNY|INR)?\\s*([$\u20ac\u00a3\u00a5])?\\s*(\\d{1,3}(,\\d{3})+(\\.\\d{2})?|\\d+\\.\\d{2})\\s*(USD|EUR|GBP|JPY|AUD|CAD|CHF|CNY|INR)?\\s*\\)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9060,
    "headerPatterns": [
      {
        "regExp": "(?i).*(account|acct)[ _-]*(balance|bal)[ _-]*(after|post)[ _-]*(transaction|txn|trans|transaction).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_balance_after_transaction"
        ],
        "negativeExamples": [
          "account_balance_before_transaction"
        ]
      },
      {
        "regExp": "(?i).*(post|after)[ _-]*(transaction|txn|trans|transaction)[ _-]*(account|acct)[ _-]*(balance|bal).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "post_transaction_account_balance"
        ],
        "negativeExamples": [
          "pre_transaction_account_balance"
        ]
      },
      {
        "regExp": "(?i).*(ending|closing)[ _-]*(balance|bal).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ending_balance"
        ],
        "negativeExamples": [
          "opening_balance"
        ]
      },
      {
        "regExp": "(?i).*(post|after)[ _-]*(txn|trans|transaction)[ _-]*(bal|balance).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "after_txn_bal"
        ],
        "negativeExamples": [
          "before_txn_bal"
        ]
      },
      {
        "regExp": "(?i).*(number|num).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "amount"
        ]
      }
    ],
    "positiveContentExamples": [
      "$1,234.56",
      "-$45.00",
      "987.65 USD",
      "EUR 2,500.00",
      "(1,200.00)",
      "\u00a30.99",
      "JPY 12,345",
      "3,000.00"
    ],
    "negativeContentExamples": [
      "1,234.567",
      "$12,34.00",
      "1234,56",
      "USD 100,00",
      "100.0",
      "\u20ac-100.00",
      "$0.9",
      "1000"
    ],
    "positiveHeaderExamples": [
      "account_balance_after_transaction",
      "post_transaction_balance",
      "post_transaction_account_balance",
      "acct_bal_after_txn",
      "ending_balance",
      "closing_balance",
      "post_txn_bal",
      "balance_after_trans"
    ],
    "negativeHeaderExamples": [
      "account_balance_before_transaction",
      "opening_balance",
      "available_balance",
      "transaction_amount",
      "running_balance",
      "account_number",
      "currency_code",
      "customer_name"
    ],
    "explanation": "This semantic type detects monetary amounts representing the account balance immediately after a transaction. The value pattern covers common currency symbols, selected ISO currency codes as optional prefixes/suffixes, proper thousand separators, and exactly two decimal places when decimals are present. Header patterns prioritize explicit post-transaction balance signals and then fall back through abbreviations to a primitive numeric indicator. The threshold and priority are set to balance specificity for currency amounts with header context to distinguish post-transaction balances from other financial fields.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:23.461329"
  },
  {
    "resultType": "generated",
    "semanticType": "CreditLimit",
    "description": "The maximum amount of credit extended to a customer on a credit card or line of credit account. Values are non-negative monetary amounts, optionally prefixed by a currency symbol or 3-letter currency code.",
    "pluginType": "regex",
    "regexPattern": "\\b((USD|EUR|GBP|AUD|CAD|INR|JPY|CHF)\\s*)?([$\u20ac\u00a3]\\s*)?([0-9]{1,3}(,[0-9]{3})+|[0-9]+)(\\.[0-9]{2})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9140,
    "headerPatterns": [
      {
        "regExp": "(?i).*credit.*limit.*amount.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "credit_limit_amount"
        ],
        "negativeExamples": [
          "credit_available_amount"
        ]
      },
      {
        "regExp": "(?i).*credit.*limit.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "credit_limit"
        ],
        "negativeExamples": [
          "credit_balance"
        ]
      },
      {
        "regExp": "(?i).*(credit|card|loan).*(limit).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "card_credit_limit"
        ],
        "negativeExamples": [
          "loan_amount"
        ]
      },
      {
        "regExp": "(?i).*(limit).*(amount).*",
        "confidence": 91,
        "mandatory": true,
        "positiveExamples": [
          "limit_amount"
        ],
        "negativeExamples": [
          "credit_amount"
        ]
      },
      {
        "regExp": "(?i).*(number|num).*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "limit_number"
        ],
        "negativeExamples": [
          "limit_amount"
        ]
      }
    ],
    "positiveContentExamples": [
      "5000",
      "10,000",
      "$2,500",
      "1500.00",
      "USD 3,000",
      "\u00a37,500.50",
      "EUR2500",
      "CHF 12,000.00"
    ],
    "negativeContentExamples": [
      "-5000",
      "$-1,000",
      "5,000.0",
      "3,000.000",
      "\u20ac 5 000",
      "5.000",
      "5,000 USD",
      "limit 5000"
    ],
    "positiveHeaderExamples": [
      "credit_limit",
      "credit limit amount",
      "card_credit_limit",
      "max_credit_limit",
      "loan_credit_limit",
      "line_of_credit_limit",
      "credit_limit_number",
      "credit_limit_usd"
    ],
    "negativeHeaderExamples": [
      "credit_balance",
      "available_credit",
      "credit_used",
      "spending_limit",
      "max_transaction_amount",
      "credit_score",
      "limit_date",
      "currency_code"
    ],
    "explanation": "This semantic type captures monetary credit limit values commonly found in finance and customer account datasets. It recognizes amounts with or without thousands separators, optional two-decimal precision, and optional leading currency symbols or common ISO currency codes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:27.531261"
  },
  {
    "resultType": "generated",
    "semanticType": "TransactionID",
    "description": "A unique transaction identifier used to track and reference individual financial transactions across banking systems. Typical values include a transaction-specific prefix followed by alphanumeric sequences, sometimes split by hyphens or underscores.",
    "pluginType": "regex",
    "regexPattern": "\\b((TXN|TRX|TXID|TRANS|TID)[-_]?[A-Za-z0-9]{6,24}|(TXN|TRX|TXID|TRANS|TID)[-_]?[A-Za-z0-9]{2,12}[-_][A-Za-z0-9]{2,12}([-_][A-Za-z0-9]{2,12})?)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9000,
    "headerPatterns": [
      {
        "regExp": "(?i).*(payment|bank|card|wire)[_ -]*transaction[_ -]*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "payment_transaction_id"
        ],
        "negativeExamples": [
          "customer_transaction_id"
        ]
      },
      {
        "regExp": "(?i).*transaction[_ -]*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "transaction-identifier"
        ],
        "negativeExamples": [
          "transaction-status"
        ]
      },
      {
        "regExp": "(?i).*(txn|trx)[_ -]*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "trx_id"
        ],
        "negativeExamples": [
          "tx_code"
        ]
      },
      {
        "regExp": "(?i).*transaction.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "transactionid"
        ],
        "negativeExamples": [
          "translation_id"
        ]
      },
      {
        "regExp": "(?i).*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "id"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "TXN-20230815-000123",
      "TRX_9F7A23B4",
      "TXIDabc123XYZ7890",
      "TRANS8453-AB23",
      "TXN12345678Z9",
      "TRX-2023ABCD-001",
      "TID_7H28K39M5Q",
      "TXID-45LMN789PQ"
    ],
    "negativeContentExamples": [
      "20230815-000123",
      "INV-20230815-000123",
      "REF_9F7A23B4",
      "TX-123456",
      "TRN12345",
      "TXN-123",
      "transaction123456",
      "ABCD-TRX-1234"
    ],
    "positiveHeaderExamples": [
      "transaction_id",
      "transaction-identifier",
      "payment_transaction_id",
      "bank_transaction_id",
      "trx_id",
      "txn_identifier",
      "transactionid",
      "card_transaction_id"
    ],
    "negativeHeaderExamples": [
      "transaction_date",
      "order_id",
      "invoice_number",
      "authorization_code",
      "reference_id",
      "customer_identifier",
      "account_id",
      "payment_reference"
    ],
    "explanation": "This type targets structured transaction identifiers commonly found in financial systems, typically starting with a transaction-related prefix (TXN, TRX, TXID, TRANS, TID) followed by an alphanumeric payload that may include separators. It is tuned to avoid purely numeric sequences and general reference or invoice identifiers, focusing on realistic transaction ID shapes for reliable classification across datasets.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:27.754083"
  },
  {
    "resultType": "generated",
    "semanticType": "LoanType",
    "description": "The category of loan product that defines the purpose and terms of the credit facility.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(mortgage|home[\\s\\-]+equity[\\s\\-]+line[\\s\\-]+of[\\s\\-]+credit|home[\\s\\-]+equity|heloc|auto[\\s\\-]+loan|car[\\s\\-]+loan|vehicle[\\s\\-]+loan|personal[\\s\\-]+loan|student[\\s\\-]+loan|business[\\s\\-]+loan|small[\\s\\-]+business[\\s\\-]+loan|sba[\\s\\-]*7a|sba[\\s\\-]*504|payday[\\s\\-]+loan|installment[\\s\\-]+loan|line[\\s\\-]+of[\\s\\-]+credit|loc|bridge[\\s\\-]+loan|construction[\\s\\-]+loan|equipment[\\s\\-]+financing|equipment[\\s\\-]+loan|refinance|debt[\\s\\-]+consolidation[\\s\\-]+loan|debt[\\s\\-]+consolidation|signature[\\s\\-]+loan|credit[\\s\\-]+card)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9100,
    "headerPatterns": [
      {
        "regExp": "(?i).*loan[_ ]?type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_type"
        ],
        "negativeExamples": [
          "loan_amount"
        ]
      },
      {
        "regExp": "(?i).*type[_ ]?of[_ ]?loan.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "type_of_loan"
        ],
        "negativeExamples": [
          "loan_term"
        ]
      },
      {
        "regExp": "(?i).*(loan|credit).*product.*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "credit_product_type"
        ],
        "negativeExamples": [
          "product_name"
        ]
      },
      {
        "regExp": "(?i).*(loan|credit).*(category|program).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_category"
        ],
        "negativeExamples": [
          "customer_category"
        ]
      },
      {
        "regExp": "(?i).*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "type"
        ],
        "negativeExamples": [
          "category"
        ]
      }
    ],
    "positiveContentExamples": [
      "Mortgage",
      "Auto Loan",
      "Personal Loan",
      "HELOC",
      "Home Equity Line of Credit",
      "Small Business Loan",
      "SBA 7a",
      "Equipment Financing"
    ],
    "negativeContentExamples": [
      "Loan Amount",
      "Interest Rate",
      "Loan ID",
      "Payment Due Date",
      "Credit Score",
      "Mortgage Balance",
      "APR",
      "Loan Purpose"
    ],
    "positiveHeaderExamples": [
      "loan_type",
      "type_of_loan",
      "loan_product_type",
      "credit_product_type",
      "loan_category",
      "credit_program",
      "loan_program"
    ],
    "negativeHeaderExamples": [
      "loan_amount",
      "interest_rate",
      "loan_id",
      "term_months",
      "apr",
      "product_name",
      "customer_segment",
      "payment_method"
    ],
    "explanation": "LoanType identifies the specific loan product category present in a dataset, such as mortgage, personal loan, line of credit, or business loan. It is useful for segmenting portfolios, modeling risk by product, and normalizing product taxonomy across systems.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:35.007797"
  },
  {
    "resultType": "generated",
    "semanticType": "TransactionDate",
    "description": "The date and time when a financial transaction occurred, used for chronological tracking and reporting purposes.",
    "pluginType": "regex",
    "regexPattern": "\\b([12][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])[ T]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])|[12][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])Z|[12][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])[+-]([01][0-9]|2[0-3]):([0-5][0-9])|(0[1-9]|1[0-2])/(0[1-9]|[12][0-9]|3[01])/([12][0-9]{3}) ([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])|(0[1-9]|[12][0-9]|3[01]) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ([12][0-9]{3}) ([01][0-9]|2[0-3]):([0-5][0-9])|[12][0-9]{3}/(0[1-9]|1[0-2])/(0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]))\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9020,
    "headerPatterns": [
      {
        "regExp": "(?i).*(transaction|txn)[ _-]*(date[ _-]*time|datetime|timestamp).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "transaction_datetime"
        ],
        "negativeExamples": [
          "transaction_amount"
        ]
      },
      {
        "regExp": "(?i).*(transaction|txn)[ _-]*date.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "txn_date"
        ],
        "negativeExamples": [
          "invoice_date"
        ]
      },
      {
        "regExp": "(?i).*(tx|trn|trxn)[ _-]*(dt|datetime).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "tx_dt"
        ],
        "negativeExamples": [
          "tx_id"
        ]
      },
      {
        "regExp": "(?i).*transaction.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "transaction"
        ],
        "negativeExamples": [
          "customer"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 88,
        "mandatory": true,
        "positiveExamples": [
          "date"
        ],
        "negativeExamples": [
          "amount"
        ]
      }
    ],
    "positiveContentExamples": [
      "2024-03-01 14:23:59",
      "2025-12-31T23:59:59Z",
      "2023-07-15T08:05:09+02:00",
      "03/01/2024 14:23:59",
      "01 Mar 2024 09:30",
      "2024/03/01 14:23:59",
      "2019-11-05 00:00:00",
      "2022-02-28T13:00:00-05:00"
    ],
    "negativeContentExamples": [
      "2024-03-01",
      "2024-03-01 14:23",
      "2024-13-01 12:00:00",
      "2024-01-32 08:00:00",
      "03/01/2024 02:23 PM",
      "2024/3/01 14:23:59",
      "1 Mar 2024 9:30",
      "2024-03-01T14:23Z"
    ],
    "positiveHeaderExamples": [
      "transaction_date",
      "transaction_datetime",
      "transaction timestamp",
      "txn_date",
      "tx_date_time",
      "transaction_date_time",
      "trn_dt",
      "transaction posted date"
    ],
    "negativeHeaderExamples": [
      "transaction_amount",
      "transaction_id",
      "invoice_date",
      "settlement_date",
      "payment_date",
      "customer_name",
      "posting_time",
      "order_date"
    ],
    "explanation": "Identifies fields that contain both a date and time for when a financial transaction occurred. Useful for chronological ordering, reconciliation windows, aging reports, and time-based analytics such as peak transaction hours.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T17:00:45.780292"
  }
]