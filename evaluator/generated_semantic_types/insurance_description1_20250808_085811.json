{
  "dataset": "insurance",
  "description_number": 1,
  "timestamp": "20250808_091622",
  "generated_types": [
    {
      "resultType": "generated",
      "semanticType": "ID",
      "description": "A unique identifier assigned to each insurance contract or policy for tracking and reference purposes within the system",
      "pluginType": "regex",
      "regexPattern": "[A-Z]{2,4}[0-9]{6,12}|[A-Z0-9]{8,15}|[0-9]{8,15}|[A-Z]{1,3}-[0-9]{6,10}|[0-9]{4,6}-[A-Z0-9]{4,8}|POL[0-9]{6,10}|INS[0-9]{6,10}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "ABC1234567890",
        "POL0012345678",
        "INS9876543210",
        "XY-1234567890",
        "2023-ABC12345",
        "LIFE123456789",
        "AUTO987654321",
        "HM-0987654321"
      ],
      "negativeContentExamples": [
        "CLAIM-123456",
        "CUST-ABC123",
        "BROKER-XYZ"
      ],
      "positiveHeaderExamples": [
        "policy_id",
        "insurance_policy_number",
        "pol_num",
        "policy_identifier",
        "ins_policy_id",
        "contract_policy_id",
        "policy_ref_number",
        "insurance_contract_id"
      ],
      "negativeHeaderExamples": [
        "claim_id",
        "customer_id",
        "agent_id",
        "quote_number",
        "transaction_id",
        "broker_code",
        "reference_number",
        "account_number"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*policy.*(id|identifier|number).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_policy_id"
          ],
          "negativeExamples": [
            "insurance_claim_id"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*(id|identifier|number).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_number"
          ],
          "negativeExamples": [
            "policy_type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(pol|ins).*(id|num|number).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "pol_id"
          ],
          "negativeExamples": [
            "pol_type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy"
          ],
          "negativeExamples": [
            "procedure"
          ],
          "rationale": null
        }
      ],
      "priority": 2800,
      "explanation": "This semantic type identifies insurance policy identifiers, which are unique alphanumeric codes assigned to insurance contracts. These identifiers typically follow patterns established by insurance companies and may include prefixes indicating the type of insurance (POL, INS, AUTO, LIFE, etc.) followed by numeric sequences. The pattern accommodates various formats including pure numeric sequences, alphanumeric combinations, and hyphenated formats commonly used across different insurance systems for policy tracking and reference.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T08:58:44.436296"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_start_contract",
      "description": "The official date when an insurance policy becomes active and coverage begins for the insured party",
      "pluginType": "regex",
      "regexPattern": "\\d{1,2}[/-]\\d{1,2}[/-]\\d{2,4}|\\d{4}[/-]\\d{1,2}[/-]\\d{1,2}|\\d{1,2}\\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s+\\d{2,4}|(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s+\\d{1,2},?\\s+\\d{2,4}|\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "01/15/2024",
        "2024-03-01",
        "12/31/2023",
        "2024/06/15",
        "March 1, 2024",
        "15 Jan 2024",
        "2024-01-01T00:00:00",
        "07-04-2024"
      ],
      "negativeContentExamples": [
        "2024",
        "January",
        "15th",
        "Q1 2024",
        "2024-W15",
        "ACTIVE"
      ],
      "positiveHeaderExamples": [
        "policy_effective_date",
        "insurance_start_date",
        "coverage_begin_date",
        "effective_date",
        "policy_start_dt",
        "coverage_effective_date",
        "eff_date",
        "start_date"
      ],
      "negativeHeaderExamples": [
        "policy_expiration_date",
        "termination_date",
        "renewal_date",
        "policy_end_date",
        "cancellation_date",
        "premium_due_date",
        "claim_date",
        "birth_date"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policy.*effective.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_effective_date"
          ],
          "negativeExamples": [
            "policy_expiration_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*start.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_start_date"
          ],
          "negativeExamples": [
            "insurance_end_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*coverage.*begin.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "coverage_begin_date"
          ],
          "negativeExamples": [
            "coverage_end_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(effective|start|begin).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "effective_date"
          ],
          "negativeExamples": [
            "termination_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(eff|start|begin).*dt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "eff_dt"
          ],
          "negativeExamples": [
            "exp_dt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2810,
      "explanation": "This semantic type identifies dates that represent when insurance policies become active and coverage begins. It's crucial for insurance systems to track policy effective dates for determining coverage periods, calculating premiums, and processing claims. The pattern recognizes various date formats commonly used in insurance systems including MM/DD/YYYY, YYYY-MM-DD, and text-based date formats. This differs from other insurance dates like expiration, renewal, or claim dates by specifically focusing on the commencement of coverage.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T08:59:18.122033"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_last_renewal",
      "description": "The most recent date when an existing insurance policy was renewed or extended for another coverage period",
      "pluginType": "regex",
      "regexPattern": "\\d{4}-\\d{2}-\\d{2}|\\d{2}/\\d{2}/\\d{4}|\\d{2}-\\d{2}-\\d{4}|\\d{1,2}/\\d{1,2}/\\d{4}|\\d{1,2}-\\d{1,2}-\\d{4}|\\d{2}\\.\\d{2}\\.\\d{4}|\\d{4}\\d{2}\\d{2}|(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)[a-z]*\\s+\\d{1,2},?\\s+\\d{4}|\\d{1,2}\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)[a-z]*\\s+\\d{4}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023-03-15",
        "12/08/2023",
        "01-15-2024",
        "3/22/2023",
        "15.06.2023",
        "March 15, 2023",
        "Jan 8, 2024",
        "20231215"
      ],
      "negativeContentExamples": [
        "2023/03/15",
        "15-Mar-23",
        "Q1 2023",
        "March 2023",
        "2023",
        "15th March"
      ],
      "positiveHeaderExamples": [
        "policy_renewal_date",
        "insurance_renewal_date",
        "renewal_date",
        "last_renewed_date",
        "policy_renewed_on",
        "renewal_effective_date",
        "most_recent_renewal",
        "latest_renewal_date"
      ],
      "negativeHeaderExamples": [
        "policy_expiration_date",
        "policy_start_date",
        "next_renewal_date",
        "renewal_premium",
        "policy_issue_date",
        "coverage_end_date",
        "renewal_notice_date",
        "policy_cancellation_date"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policy.*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_renewal_date"
          ],
          "negativeExamples": [
            "policy_expiration_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_renewal_date"
          ],
          "negativeExamples": [
            "insurance_start_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "renewal_date"
          ],
          "negativeExamples": [
            "renewal_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(renewed|renew).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "last_renewed_date"
          ],
          "negativeExamples": [
            "next_review_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*renewal.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "renewal"
          ],
          "negativeExamples": [
            "premium"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2820,
      "explanation": "This semantic type identifies dates that represent when an insurance policy was most recently renewed or extended. It's specifically focused on the actual renewal date rather than future renewal dates, expiration dates, or other policy-related dates. This is commonly found in insurance databases, policy management systems, and customer records where tracking the history of policy renewals is important for business operations, compliance, and customer service. The pattern matches various common date formats while the header patterns focus on identifying columns that specifically contain renewal date information.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T08:59:51.611600"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_next_renewal",
      "description": "The scheduled future date when the current insurance policy is set to expire and requires renewal",
      "pluginType": "regex",
      "regexPattern": "\\d{1,2}[/-]\\d{1,2}[/-]\\d{4}|\\d{4}[/-]\\d{1,2}[/-]\\d{1,2}|\\d{1,2}[/-]\\d{1,2}[/-]\\d{2}|\\d{2}[/-]\\d{2}[/-]\\d{4}|\\d{4}-\\d{2}-\\d{2}|\\d{2}-\\d{2}-\\d{4}|\\d{1,2}/\\d{1,2}/\\d{4}|\\d{4}/\\d{1,2}/\\d{1,2}|[A-Za-z]{3}\\s+\\d{1,2},?\\s+\\d{4}|\\d{1,2}\\s+[A-Za-z]{3}\\s+\\d{4}|[A-Za-z]{3}-\\d{1,2}-\\d{4}|\\d{1,2}-[A-Za-z]{3}-\\d{4}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "12/31/2024",
        "2024-06-15",
        "03/22/2025",
        "2025-12-01",
        "Jan 15, 2024",
        "15 Mar 2025",
        "Dec-31-2024",
        "07/04/2024"
      ],
      "negativeContentExamples": [
        "POL123456",
        "$1,250.00",
        "Active",
        "John Smith"
      ],
      "positiveHeaderExamples": [
        "policy_expiry_date",
        "insurance_expiration",
        "policy_expires_on",
        "expiry_dt",
        "ins_exp_date",
        "policy_end_date",
        "coverage_expires",
        "renewal_due_date"
      ],
      "negativeHeaderExamples": [
        "policy_start_date",
        "claim_date",
        "premium_amount",
        "policy_number",
        "insured_name",
        "coverage_type",
        "agent_name",
        "deductible"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*policy.*expir.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_policy_expiry_date"
          ],
          "negativeExamples": [
            "insurance_claim_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*expir.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_expiration_date"
          ],
          "negativeExamples": [
            "policy_start_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*expir.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_expires"
          ],
          "negativeExamples": [
            "insurance_premium"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*expir.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_expiry"
          ],
          "negativeExamples": [
            "policy_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*expir.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "expiry_date"
          ],
          "negativeExamples": [
            "birth_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*expir.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "expires"
          ],
          "negativeExamples": [
            "premium"
          ],
          "rationale": null
        }
      ],
      "priority": 2830,
      "explanation": "This semantic type identifies dates when insurance policies are scheduled to expire and require renewal. It captures various date formats commonly used in insurance systems and documents. The pattern focuses on future dates that represent when coverage will end, distinguishing them from other insurance-related dates like policy start dates, claim dates, or payment due dates. This is crucial for insurance management systems to track renewal schedules and prevent coverage lapses.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:00:27.181199"
    },
    {
      "resultType": "generated",
      "semanticType": "Distribution_channel",
      "description": "A coded identifier representing the sales channel or method through which the insurance policy was acquired",
      "pluginType": "regex",
      "regexPattern": "[A-Z0-9]{2,8}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "ONLINE",
        "AGENT",
        "BROKER",
        "DIRECT",
        "WEB01",
        "AGT123",
        "BRK",
        "PHONE"
      ],
      "negativeContentExamples": [
        "Online Sales Channel",
        "Insurance Agent",
        "a",
        "VERYLONGCHANNELCODE",
        "agent@company.com",
        "123-456-7890",
        "Direct Mail Marketing",
        "web-portal"
      ],
      "positiveHeaderExamples": [
        "sales_channel_code",
        "channel_code",
        "distribution_channel_cd",
        "sales_channel",
        "channel_id",
        "distribution_code",
        "acquisition_channel",
        "channel_type_code"
      ],
      "negativeHeaderExamples": [
        "sales_channel_name",
        "channel_description",
        "sales_amount",
        "channel_manager",
        "distribution_date",
        "sales_rep_name",
        "channel_address",
        "commission_rate"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*sales.*channel.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "sales_channel_code"
          ],
          "negativeExamples": [
            "sales_channel_name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*channel.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "channel_code"
          ],
          "negativeExamples": [
            "channel_description"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*sales.*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "sales_channel"
          ],
          "negativeExamples": [
            "sales_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*distribution.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "distribution_code"
          ],
          "negativeExamples": [
            "distribution_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "channel"
          ],
          "negativeExamples": [
            "change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "code"
          ],
          "negativeExamples": [
            "name"
          ],
          "rationale": null
        }
      ],
      "priority": 2840,
      "explanation": "This semantic type identifies coded identifiers used to represent sales channels in insurance systems. Sales channel codes are typically short alphanumeric codes (2-8 characters) that categorize how insurance policies were acquired, such as through online portals (ONLINE, WEB01), insurance agents (AGENT, AGT123), brokers (BROKER, BRK), direct sales (DIRECT), or phone sales (PHONE). These codes are essential for tracking distribution effectiveness, commission calculations, and sales performance analysis in insurance business intelligence systems.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:00:59.492797"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_birth",
      "description": "The birth date of the primary policyholder or insured individual associated with an insurance contract",
      "pluginType": "regex",
      "regexPattern": "(?:19|20)\\d{2}[-/](0[1-9]|1[0-2])[-/](0[1-9]|[12]\\d|3[01])|(?:0[1-9]|1[0-2])[-/](0[1-9]|[12]\\d|3[01])[-/](?:19|20)\\d{2}|(?:0[1-9]|[12]\\d|3[01])[-/](?:0[1-9]|1[0-2])[-/](?:19|20)\\d{2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1985-03-15",
        "03/15/1985",
        "15/03/1985",
        "1972-12-08",
        "12/08/1972",
        "08/12/1972",
        "1990-07-22",
        "07/22/1990"
      ],
      "negativeContentExamples": [
        "1899-12-31",
        "13/15/1985",
        "03/32/1985",
        "1985-00-15",
        "1985-13-15",
        "85-03-15",
        "March 15, 1985"
      ],
      "positiveHeaderExamples": [
        "policyholder_birth_date",
        "insured_birth_date",
        "primary_insured_dob",
        "policy_holder_dob",
        "insured_person_birth_date",
        "main_insured_birth_dt",
        "policyholder_date_of_birth",
        "primary_policyholder_dob"
      ],
      "negativeHeaderExamples": [
        "beneficiary_birth_date",
        "dependent_birth_date",
        "policy_effective_date",
        "claim_date",
        "policy_expiration_date",
        "spouse_birth_date",
        "secondary_insured_dob",
        "coverage_start_date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policyholder.*birth.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policyholder_birth_date"
          ],
          "negativeExamples": [
            "beneficiary_birth_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insured.*birth.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insured_birth_date"
          ],
          "negativeExamples": [
            "dependent_birth_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*primary.*insured.*dob.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "primary_insured_dob"
          ],
          "negativeExamples": [
            "secondary_insured_dob"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*holder.*dob.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_holder_dob"
          ],
          "negativeExamples": [
            "policy_effective_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insured.*dob.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insured_dob"
          ],
          "negativeExamples": [
            "claim_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*birth.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "birth_date"
          ],
          "negativeExamples": [
            "issue_date"
          ],
          "rationale": null
        }
      ],
      "priority": 2850,
      "explanation": "This semantic type identifies birth dates specifically for primary policyholders or insured individuals in insurance contexts. It distinguishes between the main policyholder's birth date and other related dates like beneficiary birth dates, policy dates, or dependent birth dates. The pattern matches common date formats (YYYY-MM-DD, MM/DD/YYYY, DD/MM/YYYY) with reasonable year ranges for living adults who would hold insurance policies. This is crucial for insurance systems to properly identify and validate the primary insured person's age for premium calculations, eligibility verification, and policy administration.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:01:37.696111"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_driving_licence",
      "description": "The date when the policyholder's driving license was first issued or obtained from the licensing authority",
      "pluginType": "regex",
      "regexPattern": "(?:19|20)\\d{2}[-/](0[1-9]|1[0-2])[-/](0[1-9]|[12]\\d|3[01])|(?:0[1-9]|1[0-2])[-/](0[1-9]|[12]\\d|3[01])[-/](?:19|20)\\d{2}|(?:0[1-9]|[12]\\d|3[01])[-/](?:0[1-9]|1[0-2])[-/](?:19|20)\\d{2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2015-03-15",
        "03/15/2015",
        "15/03/2015",
        "2020-12-01",
        "01-12-2020",
        "12/01/2020",
        "2018-07-22",
        "07-22-2018"
      ],
      "negativeContentExamples": [
        "1985-13-15",
        "2015-03-32",
        "15/15/2015",
        "2020-00-01",
        "32/03/2015",
        "2015/03",
        "March 15, 2015"
      ],
      "positiveHeaderExamples": [
        "license_issue_date",
        "driving_license_issue_date",
        "dl_issue_date",
        "license_obtained_date",
        "driver_license_issue_dt",
        "licence_issue_date",
        "dl_issued_date",
        "driving_licence_date"
      ],
      "negativeHeaderExamples": [
        "license_expiry_date",
        "license_renewal_date",
        "birth_date",
        "policy_start_date",
        "license_number",
        "driving_test_date",
        "permit_issue_date",
        "registration_date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*licen[cs]e.*issue.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "license_issue_date"
          ],
          "negativeExamples": [
            "license_expiry_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*driving.*licen[cs]e.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "driving_license_date"
          ],
          "negativeExamples": [
            "driving_test_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*dl.*issue.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "dl_issue_date"
          ],
          "negativeExamples": [
            "dl_renewal_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*licen[cs]e.*obtained.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "license_obtained"
          ],
          "negativeExamples": [
            "permit_obtained"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*issue.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "issue_date"
          ],
          "negativeExamples": [
            "birth_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2860,
      "explanation": "This semantic type identifies dates when driving licenses were first issued or obtained from licensing authorities. It's commonly used in insurance, automotive, and identity verification contexts where the original license issue date is important for risk assessment, experience calculation, or compliance purposes. The pattern matches common date formats (YYYY-MM-DD, MM/DD/YYYY, DD/MM/YYYY) with appropriate validation for realistic date ranges, typically from 1900 onwards to account for historical records while excluding obvious future dates that would indicate license expiration rather than issue dates.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:02:11.381969"
    },
    {
      "resultType": "generated",
      "semanticType": "Seniority",
      "description": "The number of years a customer has maintained an active relationship with the insurance company",
      "pluginType": "regex",
      "regexPattern": "\\d{1,2}(\\.\\d{1,2})?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "5",
        "12",
        "3.5",
        "0.5",
        "25",
        "1",
        "8.25",
        "15"
      ],
      "negativeContentExamples": [
        "125",
        "-2",
        "5 years",
        "3.567",
        "N/A",
        "12.345",
        "abc"
      ],
      "positiveHeaderExamples": [
        "customer_tenure_years",
        "years_with_company",
        "relationship_duration_years",
        "customer_seniority",
        "tenure_yrs",
        "years_active",
        "customer_longevity",
        "membership_years"
      ],
      "negativeHeaderExamples": [
        "policy_term_years",
        "employee_tenure",
        "age_years",
        "warranty_years",
        "contract_duration",
        "years_of_experience",
        "building_age_years",
        "vehicle_age"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*tenure.*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_tenure_years"
          ],
          "negativeExamples": [
            "employee_tenure_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*relationship.*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_relationship_years"
          ],
          "negativeExamples": [
            "business_relationship_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*years?.*active.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_years_active"
          ],
          "negativeExamples": [
            "policy_years_active"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(tenure|seniority).*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "tenure_years"
          ],
          "negativeExamples": [
            "experience_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*relationship.*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "relationship_years"
          ],
          "negativeExamples": [
            "warranty_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "years"
          ],
          "negativeExamples": [
            "months"
          ],
          "rationale": null
        }
      ],
      "priority": 2870,
      "explanation": "This semantic type identifies numeric values representing the number of years a customer has maintained an active relationship with an insurance company. It captures customer tenure as a measure of loyalty and relationship duration, typically ranging from less than a year (0.5) to several decades (25+). The pattern allows for decimal values to represent partial years and is commonly used in insurance analytics for customer segmentation, retention analysis, and risk assessment. Values are expected to be reasonable tenure periods, generally not exceeding 99 years, and may include fractional years for more precise measurement.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:02:46.915263"
    },
    {
      "resultType": "generated",
      "semanticType": "Policies_in_force",
      "description": "The current number of active insurance policies held by a customer at a given point in time",
      "pluginType": "regex",
      "regexPattern": "\\d+",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "2",
        "3",
        "5",
        "7",
        "12",
        "0",
        "25"
      ],
      "negativeContentExamples": [
        "-1",
        "3.5",
        "2.0",
        "1,234",
        "N/A",
        "POL-12345",
        "$500"
      ],
      "positiveHeaderExamples": [
        "active_policies_count",
        "current_insurance_policies",
        "customer_policy_count",
        "num_active_policies",
        "total_policies",
        "policy_count",
        "policies_held",
        "active_coverage_count"
      ],
      "negativeHeaderExamples": [
        "policy_number",
        "policy_premium",
        "policy_start_date",
        "claim_count",
        "policy_type",
        "expired_policies",
        "policy_value",
        "insurance_agent_id"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*active.*insurance.*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "active_insurance_policies_count"
          ],
          "negativeExamples": [
            "expired_insurance_policies_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*current.*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "current_policies_count"
          ],
          "negativeExamples": [
            "historical_policies_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_policies_count"
          ],
          "negativeExamples": [
            "agent_policies_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_count"
          ],
          "negativeExamples": [
            "claim_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*num.*polic(y|ies).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "num_policies"
          ],
          "negativeExamples": [
            "policy_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2880,
      "explanation": "This semantic type identifies numeric values representing the count of active insurance policies held by a customer. It's commonly used in customer relationship management systems, insurance databases, and analytics platforms to track customer engagement and portfolio size. The values are typically small positive integers (0-50 range) as most customers hold a limited number of insurance policies. This metric is crucial for customer segmentation, risk assessment, and business intelligence in the insurance industry.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:03:24.039940"
    },
    {
      "resultType": "generated",
      "semanticType": "Max_policies",
      "description": "The highest number of insurance policies that a customer has ever held simultaneously throughout their relationship history",
      "pluginType": "regex",
      "regexPattern": "[1-9]\\d{0,2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "3",
        "7",
        "12",
        "25",
        "48",
        "156",
        "999"
      ],
      "negativeContentExamples": [
        "0",
        "-5",
        "1.5",
        "3.75",
        "1000",
        "12345",
        "N/A"
      ],
      "positiveHeaderExamples": [
        "max_policies_held",
        "peak_policy_count",
        "highest_simultaneous_policies",
        "maximum_policies_ever",
        "policy_peak",
        "max_concurrent_policies",
        "customer_max_policies",
        "policy_high_water_mark"
      ],
      "negativeHeaderExamples": [
        "current_policies",
        "total_policies_lifetime",
        "min_policies_held",
        "average_policies",
        "policy_start_date",
        "active_policy_count",
        "cancelled_policies",
        "policy_premium_max"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*max.*polic.*simultaneous.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_policies_simultaneous"
          ],
          "negativeExamples": [
            "min_policies_simultaneous"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*peak.*polic.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "peak_policy_count"
          ],
          "negativeExamples": [
            "current_policy_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*highest.*polic.*held.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "highest_policies_held"
          ],
          "negativeExamples": [
            "lowest_policies_held"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*polic.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_policies"
          ],
          "negativeExamples": [
            "max_claims"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*polic.*max.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_max"
          ],
          "negativeExamples": [
            "policy_min"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max"
          ],
          "negativeExamples": [
            "min"
          ],
          "rationale": null
        }
      ],
      "priority": 2890,
      "explanation": "This semantic type identifies numeric values representing the maximum number of insurance policies a customer has held simultaneously at any point in their relationship history. It captures peak policy ownership rather than current or cumulative counts. The pattern matches positive integers from 1 to 999, as it's reasonable that customers would hold between 1 and several hundred policies simultaneously. Zero is excluded as it would indicate no policies were ever held, and decimal values are excluded as policy counts must be whole numbers. This metric is valuable for customer segmentation, risk assessment, and understanding customer engagement patterns in insurance analytics.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:03:57.554149"
    },
    {
      "resultType": "generated",
      "semanticType": "Max_products",
      "description": "The maximum number of different insurance product types that a customer has held concurrently during their relationship",
      "pluginType": "regex",
      "regexPattern": "[1-9]\\d*",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "3",
        "5",
        "7",
        "12",
        "25",
        "8",
        "15"
      ],
      "negativeContentExamples": [
        "0",
        "-1",
        "3.5",
        "2.0",
        "N/A",
        "auto",
        "multiple"
      ],
      "positiveHeaderExamples": [
        "max_concurrent_insurance_products",
        "peak_product_types_held",
        "maximum_simultaneous_coverage",
        "concurrent_policy_diversity",
        "max_insurance_product_count",
        "highest_product_mix",
        "peak_coverage_diversity",
        "max_concurrent_policies"
      ],
      "negativeHeaderExamples": [
        "total_insurance_products",
        "current_active_policies",
        "lifetime_product_count",
        "average_concurrent_products",
        "min_concurrent_products",
        "insurance_premium_amount",
        "policy_start_date",
        "customer_tenure_months"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*max.*concurrent.*insurance.*product.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_concurrent_insurance_products"
          ],
          "negativeExamples": [
            "total_insurance_products"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*insurance.*product.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_insurance_product_count"
          ],
          "negativeExamples": [
            "current_insurance_product_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*peak.*insurance.*coverage.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "peak_insurance_coverage_types"
          ],
          "negativeExamples": [
            "peak_insurance_premium"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*concurrent.*product.*types.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "concurrent_product_types"
          ],
          "negativeExamples": [
            "sequential_product_types"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*product.*diversity.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_product_diversity"
          ],
          "negativeExamples": [
            "min_product_diversity"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_count"
          ],
          "negativeExamples": [
            "min_count"
          ],
          "rationale": null
        }
      ],
      "priority": 2900,
      "explanation": "This semantic type identifies numeric values representing the maximum number of different insurance product types that a customer has held simultaneously during their relationship with an insurance provider. This metric is commonly used in customer analytics to understand product diversification patterns, cross-selling effectiveness, and customer engagement levels. The values are positive integers starting from 1, as a customer must have at least one product to be considered, and there's no upper theoretical limit though practical values typically range from 1 to 25. This differs from total lifetime products (which counts sequential products) or current active products (which shows present state only).",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:04:32.992396"
    },
    {
      "resultType": "generated",
      "semanticType": "Lapse",
      "description": "The total count of insurance policies that have been terminated or cancelled by a customer throughout their history",
      "pluginType": "regex",
      "regexPattern": "\\d+",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "0",
        "1",
        "3",
        "7",
        "12",
        "25",
        "156",
        "999"
      ],
      "negativeContentExamples": [
        "-1",
        "3.5",
        "12.75",
        "N/A",
        "None",
        "Unknown",
        "Active",
        "$1,250"
      ],
      "positiveHeaderExamples": [
        "terminated_policies_count",
        "cancelled_policy_count",
        "policy_termination_count",
        "total_terminated_policies",
        "cancellation_count",
        "terminated_count",
        "policy_cancel_total",
        "termination_history_count"
      ],
      "negativeHeaderExamples": [
        "active_policies_count",
        "policy_premium_amount",
        "renewal_count",
        "policy_start_date",
        "coverage_amount",
        "claim_count",
        "policy_duration",
        "customer_age"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*terminated.*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "terminated_policies_count"
          ],
          "negativeExamples": [
            "active_policies_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*cancel(led|lation).*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "cancelled_policies_count"
          ],
          "negativeExamples": [
            "renewed_policies_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*polic(y|ies).*(terminated|cancel).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_termination_count"
          ],
          "negativeExamples": [
            "policy_renewal_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(terminated|cancel).*(total|count).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "terminated_total"
          ],
          "negativeExamples": [
            "approved_total"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(termination|cancellation).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "termination_count"
          ],
          "negativeExamples": [
            "activation_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2910,
      "explanation": "This semantic type identifies numeric values representing the total count of insurance policies that have been terminated or cancelled by a customer throughout their history. It is commonly used in insurance analytics to track customer behavior patterns, churn analysis, and risk assessment. The values are always non-negative integers, as they represent counts of discrete events (policy terminations). This metric helps insurance companies understand customer retention patterns and identify customers who may be at higher risk for future policy cancellations.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:05:14.833692"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_lapse",
      "description": "The specific date when an insurance policy was terminated or cancelled before its scheduled expiration",
      "pluginType": "regex",
      "regexPattern": "\\d{1,2}[/-]\\d{1,2}[/-]\\d{2,4}|\\d{4}[/-]\\d{1,2}[/-]\\d{1,2}|\\d{1,2}\\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s+\\d{2,4}|\\d{2,4}[/-](0[1-9]|1[0-2])[/-](0[1-9]|[12]\\d|3[01])",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "03/15/2023",
        "2023-07-22",
        "12/31/2022",
        "2024-01-15",
        "06/30/23",
        "15 Mar 2023",
        "2023/11/08",
        "09-14-2023"
      ],
      "negativeContentExamples": [
        "2023",
        "March 2023",
        "Q1 2023",
        "Active",
        "Terminated",
        "30 days"
      ],
      "positiveHeaderExamples": [
        "policy_termination_date",
        "cancellation_date",
        "term_date",
        "policy_cancel_dt",
        "termination_effective_date",
        "cancel_date",
        "policy_end_date",
        "terminated_on"
      ],
      "negativeHeaderExamples": [
        "policy_start_date",
        "effective_date",
        "renewal_date",
        "expiration_date",
        "issue_date",
        "premium_due_date",
        "claim_date",
        "birth_date"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policy.*terminat.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_termination_date"
          ],
          "negativeExamples": [
            "policy_effective_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*cancel.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_cancellation_date"
          ],
          "negativeExamples": [
            "policy_renewal_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*terminat.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "termination_date"
          ],
          "negativeExamples": [
            "employment_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*cancel.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "cancellation_date"
          ],
          "negativeExamples": [
            "creation_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(term|cancel).*dt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "term_dt"
          ],
          "negativeExamples": [
            "start_dt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2920,
      "explanation": "This semantic type identifies dates specifically related to insurance policy termination or cancellation events. It distinguishes between voluntary cancellations and involuntary terminations that occur before the policy's natural expiration date. This is crucial for insurance analytics, regulatory reporting, and understanding policy lifecycle patterns. The pattern recognizes various date formats commonly used in insurance systems while the header patterns focus on terminology specific to policy termination events, differentiating from other policy-related dates like effective dates, renewal dates, or natural expiration dates.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:05:49.463623"
    },
    {
      "resultType": "generated",
      "semanticType": "Payment",
      "description": "A binary indicator showing whether premium payments are current and up-to-date for the insurance policy",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "TRUE",
        "FALSE",
        "TRUE",
        "FALSE",
        "TRUE",
        "FALSE",
        "YES",
        "NO",
        "YES",
        "NO",
        "YES",
        "NO",
        "Y",
        "N",
        "Y",
        "N",
        "1",
        "0",
        "CURRENT",
        "OVERDUE",
        "PAID",
        "UNPAID"
      ],
      "backout": "(?i)(true|false|yes|no|y|n|1|0|current|overdue|paid|unpaid)",
      "positiveContentExamples": [
        "true",
        "false",
        "YES",
        "NO",
        "Y",
        "N",
        "1",
        "0"
      ],
      "negativeContentExamples": [
        "maybe",
        "pending",
        "2",
        "unknown",
        "partial",
        "active",
        "expired",
        "cancelled"
      ],
      "positiveHeaderExamples": [
        "premium_current",
        "payment_up_to_date",
        "is_premium_paid",
        "policy_current_status",
        "premium_payment_current",
        "insurance_paid",
        "current_premium_flag",
        "payment_status_current"
      ],
      "negativeHeaderExamples": [
        "premium_amount",
        "payment_date",
        "policy_number",
        "current_balance",
        "payment_method",
        "premium_due_date",
        "policy_start_date",
        "customer_status"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*(premium|payment).*(current|status|up.*to.*date).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "premium_payment_current"
          ],
          "negativeExamples": [
            "premium_amount_due"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(insurance|policy).*(current|paid|status).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_policy_current"
          ],
          "negativeExamples": [
            "insurance_policy_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(premium|payment).*(paid|status).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "premium_paid_status"
          ],
          "negativeExamples": [
            "premium_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(current|paid|uptodate).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "is_current"
          ],
          "negativeExamples": [
            "current_balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(status).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "payment_status"
          ],
          "negativeExamples": [
            "marital_status"
          ],
          "rationale": null
        }
      ],
      "priority": 2930,
      "explanation": "This semantic type identifies binary indicators that show whether insurance premium payments are current and up-to-date. It's commonly used in insurance databases to track payment status and policy compliance. The type recognizes various boolean representations including true/false, yes/no, Y/N, and 1/0 formats, as well as domain-specific terms like \"current\", \"overdue\", \"paid\", and \"unpaid\". This is essential for insurance companies to quickly identify policies that may be at risk of lapse due to non-payment and for regulatory compliance reporting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:06:22.200717"
    },
    {
      "resultType": "generated",
      "semanticType": "Premium",
      "description": "The monetary amount charged for insurance coverage over a specified period, typically annually",
      "pluginType": "regex",
      "regexPattern": "(?:\\$|USD|EUR|GBP|CAD|AUD)?\\s*\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?\\s*(?:per\\s+(?:year|month|quarter|annum)|annually|monthly|quarterly)?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "$1,250.00",
        "2,450.75",
        "$850 annually",
        "1,875.50 per year",
        "$425.00 monthly",
        "3,200.00",
        "$675 per quarter"
      ],
      "negativeContentExamples": [
        "0.05%",
        "$100,000 coverage",
        "Policy #12345",
        "15% discount",
        "$500 deductible",
        "Claim #ABC123"
      ],
      "positiveHeaderExamples": [
        "insurance_premium",
        "annual_premium_amount",
        "monthly_premium_cost",
        "premium_due",
        "insurance_cost",
        "policy_premium",
        "premium_payment",
        "quarterly_premium"
      ],
      "negativeHeaderExamples": [
        "deductible_amount",
        "claim_amount",
        "coverage_limit",
        "policy_number",
        "discount_rate",
        "commission_amount",
        "copay_amount",
        "benefit_amount"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*premium.*(?:amount|cost|price|fee).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_premium_amount"
          ],
          "negativeExamples": [
            "insurance_claim_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:annual|monthly|quarterly).*premium.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "annual_premium_cost"
          ],
          "negativeExamples": [
            "annual_deductible_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*(?:cost|price|fee|rate).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_cost"
          ],
          "negativeExamples": [
            "repair_cost"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*premium.*(?:amount|cost|price).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "premium_amount"
          ],
          "negativeExamples": [
            "discount_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*premium.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "premium"
          ],
          "negativeExamples": [
            "deductible"
          ],
          "rationale": null
        }
      ],
      "priority": 2940,
      "explanation": "This semantic type identifies insurance premium amounts - the monetary charges for insurance coverage over specified periods. It recognizes various currency formats, amounts typically ranging from hundreds to thousands of dollars, and optional period indicators (annually, monthly, quarterly). The pattern is designed to distinguish premiums from other insurance-related monetary values like deductibles, claims, or coverage limits. It's commonly found in insurance databases, billing systems, and financial reports where premium calculations and payments are tracked.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:07:00.190137"
    },
    {
      "resultType": "generated",
      "semanticType": "Cost_claims_year",
      "description": "The total monetary value of insurance claims paid out for a specific policy during the current year",
      "pluginType": "regex",
      "regexPattern": "\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?|\\d+\\.\\d{2}|\\d+",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "15000.00",
        "2,500.50",
        "125000",
        "45,750.25",
        "0.00",
        "1,250,000.00",
        "8500",
        "75,000.75"
      ],
      "negativeContentExamples": [
        "$15,000.00",
        "15000.123",
        "-2500.00",
        "15,000.0",
        "abc123",
        "15.000,50",
        "N/A",
        "15K"
      ],
      "positiveHeaderExamples": [
        "insurance_claims_paid_current_year",
        "claims_paid_ytd",
        "annual_claims_payout",
        "total_claims_paid",
        "claims_settlement_amount",
        "paid_claims_value",
        "current_year_claims_paid",
        "ytd_claims_disbursed"
      ],
      "negativeHeaderExamples": [
        "insurance_premiums_collected",
        "claims_pending_payment",
        "policy_deductible_amount",
        "claims_count_paid",
        "reserve_amount",
        "coverage_limit",
        "claims_processing_fee",
        "policy_premium_due"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*claims.*paid.*current.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_claims_paid_current_year"
          ],
          "negativeExamples": [
            "insurance_premiums_paid_current_year"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims.*paid.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_paid_this_year"
          ],
          "negativeExamples": [
            "claims_received_this_year"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*annual.*claims.*paid.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "annual_claims_paid"
          ],
          "negativeExamples": [
            "annual_claims_pending"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims.*payout.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_payout_amount"
          ],
          "negativeExamples": [
            "claims_reserve_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*paid.*claims.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "paid_claims_total"
          ],
          "negativeExamples": [
            "unpaid_claims_total"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "amount"
          ],
          "negativeExamples": [
            "count"
          ],
          "rationale": null
        }
      ],
      "priority": 2950,
      "explanation": "This semantic type identifies monetary values representing the total amount of insurance claims that have been paid out for specific policies during the current year. It captures numeric values in standard currency formats without currency symbols, as these amounts are typically stored as pure numeric values in insurance databases. The pattern matches whole numbers, numbers with decimal places (typically two for currency), and numbers with comma separators for thousands. This type is commonly found in insurance claim management systems, financial reporting, and policy administration databases where tracking annual claim payouts is essential for actuarial analysis and financial planning.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:07:36.720860"
    },
    {
      "resultType": "generated",
      "semanticType": "N_claims_year",
      "description": "The count of insurance claims filed or processed for a specific policy during the current year",
      "pluginType": "regex",
      "regexPattern": "\\d{1,4}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "0",
        "1",
        "3",
        "7",
        "12",
        "25",
        "156",
        "2847"
      ],
      "negativeContentExamples": [
        "-1",
        "3.5",
        "12.75",
        "$1,250",
        "25000",
        "1,234,567",
        "N/A",
        "pending"
      ],
      "positiveHeaderExamples": [
        "claims_count",
        "insurance_claims_count",
        "policy_claims_count",
        "annual_claims_count",
        "total_claims_count",
        "claims_num",
        "number_of_claims",
        "claim_count_ytd"
      ],
      "negativeHeaderExamples": [
        "claims_amount",
        "claim_value",
        "premium_count",
        "policy_number",
        "claim_id",
        "deductible_amount",
        "coverage_limit",
        "claim_date"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_claims_count"
          ],
          "negativeExamples": [
            "insurance_premium_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_claims_count"
          ],
          "negativeExamples": [
            "policy_start_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*annual.*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "annual_claims_count"
          ],
          "negativeExamples": [
            "annual_premium_total"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_count"
          ],
          "negativeExamples": [
            "claims_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims.*num.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_num"
          ],
          "negativeExamples": [
            "policy_num"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2960,
      "explanation": "This semantic type identifies numeric counts of insurance claims associated with policies during a specific time period, typically the current year. It represents whole numbers from 0 to several thousand, as most policies would not exceed this range in a single year. The pattern excludes negative numbers, decimals, currency amounts, and very large numbers that would be unrealistic for annual claim counts. This type is commonly found in insurance analytics, policy management systems, and actuarial reporting where tracking claim frequency is essential for risk assessment and premium calculations.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:08:11.231350"
    },
    {
      "resultType": "generated",
      "semanticType": "N_claims_history",
      "description": "The total number of insurance claims filed by a customer across their entire relationship history with the company",
      "pluginType": "regex",
      "regexPattern": "\\d+",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "0",
        "1",
        "5",
        "12",
        "27",
        "156",
        "3",
        "89"
      ],
      "negativeContentExamples": [
        "-5",
        "12.5",
        "3.14",
        "N/A",
        "Unknown",
        "$1,250",
        "15%",
        "2023-01-15"
      ],
      "positiveHeaderExamples": [
        "total_claims_filed",
        "customer_lifetime_claims",
        "total_insurance_claims_count",
        "claims_count_total",
        "lifetime_claims_filed",
        "total_claims_history",
        "customer_claims_total",
        "all_time_claims_count"
      ],
      "negativeHeaderExamples": [
        "monthly_claims_count",
        "pending_claims",
        "claims_amount_total",
        "open_claims_count",
        "annual_claims",
        "claims_value",
        "recent_claims",
        "claims_processing_time"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*total.*insurance.*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "total_insurance_claims_count"
          ],
          "negativeExamples": [
            "monthly_insurance_claims_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*total.*claims.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_total_claims_filed"
          ],
          "negativeExamples": [
            "customer_pending_claims"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*lifetime.*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "lifetime_claims_count"
          ],
          "negativeExamples": [
            "annual_claims_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*total.*claims.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "total_claims"
          ],
          "negativeExamples": [
            "total_premiums"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_count"
          ],
          "negativeExamples": [
            "policy_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 2970,
      "explanation": "This semantic type identifies numeric values representing the total cumulative count of insurance claims filed by a customer throughout their entire relationship with an insurance company. It captures lifetime claim frequency metrics used for risk assessment, customer profiling, and actuarial analysis. The values are always non-negative integers, as they represent counts of discrete events (claims) over time. This differs from periodic claim counts, claim amounts, or other claim-related metrics by specifically focusing on the total historical count across the customer's entire policy history.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:08:46.024958"
    },
    {
      "resultType": "generated",
      "semanticType": "R_Claims_history",
      "description": "A ratio measuring the frequency of claims relative to the length of time a customer has held policies",
      "pluginType": "regex",
      "regexPattern": "^\\d{1,3}(\\.\\d{1,6})?$|^0\\.\\d{1,6}$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "0.25",
        "1.5",
        "0.0",
        "2.333333",
        "0.125",
        "3.75",
        "0.666667",
        "1.0"
      ],
      "negativeContentExamples": [
        "-0.5",
        "1000.5",
        "0.1234567",
        "25%",
        "1.5 claims/year",
        "N/A",
        "2,500.00",
        "1.5E+2"
      ],
      "positiveHeaderExamples": [
        "claims_frequency_ratio",
        "claim_freq_ratio",
        "claims_per_tenure",
        "frequency_ratio",
        "claim_frequency_rate",
        "customer_claims_ratio",
        "policy_claim_frequency",
        "tenure_adjusted_claims"
      ],
      "negativeHeaderExamples": [
        "loss_ratio",
        "claims_amount",
        "premium_ratio",
        "claim_severity",
        "policy_count",
        "tenure_years",
        "claim_cost_ratio",
        "expense_ratio"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*claims.*frequency.*ratio.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_frequency_ratio"
          ],
          "negativeExamples": [
            "claims_amount_ratio"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claim.*freq.*ratio.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_freq_ratio"
          ],
          "negativeExamples": [
            "claim_severity_ratio"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims.*per.*tenure.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_per_tenure_year"
          ],
          "negativeExamples": [
            "claims_per_premium"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*frequency.*ratio.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "frequency_ratio"
          ],
          "negativeExamples": [
            "payment_ratio"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claim.*ratio.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_ratio"
          ],
          "negativeExamples": [
            "loss_ratio"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ratio.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ratio"
          ],
          "negativeExamples": [
            "rate"
          ],
          "rationale": null
        }
      ],
      "priority": 2980,
      "explanation": "This semantic type identifies numerical ratios that measure how frequently a customer files insurance claims relative to their policy tenure. These ratios are commonly used in insurance analytics to assess customer risk profiles and predict future claim behavior. The values are typically small positive decimal numbers, where 0 indicates no claims, 1.0 indicates one claim per unit of time (usually years), and higher values indicate more frequent claims. This metric helps insurers in risk assessment, pricing decisions, and customer segmentation.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:09:21.125278"
    },
    {
      "resultType": "generated",
      "semanticType": "Type_risk",
      "description": "A coded classification system that categorizes the insurance risk level associated with a particular policy or customer",
      "pluginType": "regex",
      "regexPattern": "(?i)^(LOW|MEDIUM|HIGH|MINIMAL|MODERATE|SEVERE|CRITICAL|A|B|C|D|E|F|1|2|3|4|5|L|M|H|MIN|MOD|MAX|STANDARD|PREFERRED|SUBSTANDARD|DECLINED|ACCEPT|REJECT|GREEN|YELLOW|RED|AMBER|[A-F][+-]?|[1-9][+-]?|TIER[1-5]|CLASS[1-9]|GRADE[A-F]|LEVEL[1-9]|RISK[1-9]|R[1-9]|T[1-5]|CL[1-9])$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "HIGH",
        "LOW",
        "MEDIUM",
        "A",
        "B+",
        "3",
        "TIER1",
        "PREFERRED"
      ],
      "negativeContentExamples": [
        "UNKNOWN",
        "PENDING",
        "N/A",
        "TBD",
        "REVIEW",
        "PROCESSING",
        "EXPIRED",
        "CANCELLED"
      ],
      "positiveHeaderExamples": [
        "risk_code",
        "insurance_risk_level",
        "policy_risk_classification",
        "underwriting_class",
        "risk_category",
        "customer_risk_rating",
        "risk_tier",
        "uwt_code"
      ],
      "negativeHeaderExamples": [
        "policy_number",
        "premium_amount",
        "customer_name",
        "effective_date",
        "agent_code",
        "coverage_type",
        "deductible",
        "claim_status"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*risk.*(code|classification|category|level|rating)",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_risk_code"
          ],
          "negativeExamples": [
            "insurance_premium_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(policy|customer).*risk.*(code|class|rating)",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_risk_classification"
          ],
          "negativeExamples": [
            "policy_effective_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*risk.*(code|classification|category|class|rating|level)",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "risk_category"
          ],
          "negativeExamples": [
            "credit_score"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(underwriting|uwt).*(code|class|rating)",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "underwriting_class"
          ],
          "negativeExamples": [
            "underwriter_name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(tier|class|grade|level|rating).*code",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "tier_code"
          ],
          "negativeExamples": [
            "zip_code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*code",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "code"
          ],
          "negativeExamples": [
            "name"
          ],
          "rationale": null
        }
      ],
      "priority": 2990,
      "explanation": "This semantic type identifies coded values used in insurance systems to classify risk levels. Insurance companies use various coding schemes to categorize the risk associated with policies or customers, ranging from simple letter grades (A, B, C) or numeric scales (1-5) to descriptive terms (LOW, MEDIUM, HIGH) or industry-specific classifications (PREFERRED, STANDARD, SUBSTANDARD). These codes are crucial for underwriting decisions, premium calculations, and policy management. The pattern accommodates common risk classification formats including alphabetic grades with optional modifiers, numeric tiers, descriptive risk levels, and standardized insurance terminology.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:09:59.560091"
    },
    {
      "resultType": "generated",
      "semanticType": "Area",
      "description": "A geographic classification code indicating the type of area where the insured vehicle is primarily located or garaged",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "URBAN",
        "SUBURBAN",
        "RURAL",
        "METRO",
        "CITY",
        "TOWN",
        "VILLAGE",
        "FARM",
        "U",
        "S",
        "R",
        "M",
        "C",
        "T",
        "V",
        "F",
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08"
      ],
      "backout": "[A-Z]{1,2}|[0-9]{2}|[A-Z]{3,10}",
      "positiveContentExamples": [
        "URBAN",
        "SUBURBAN",
        "RURAL",
        "U",
        "S",
        "R",
        "01",
        "02"
      ],
      "negativeContentExamples": [
        "NEW YORK",
        "90210",
        "RESIDENTIAL",
        "COMMERCIAL",
        "DOWNTOWN",
        "UPTOWN",
        "NORTH",
        "CENTRAL"
      ],
      "positiveHeaderExamples": [
        "territory_code",
        "geographic_area_code",
        "garage_territory",
        "area_type_code",
        "vehicle_territory",
        "location_territory",
        "territory_classification",
        "area_code"
      ],
      "negativeHeaderExamples": [
        "territory_name",
        "area_description",
        "zip_code",
        "state_code",
        "country_code",
        "postal_code",
        "region_name",
        "city_name"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*territory.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "territory_code"
          ],
          "negativeExamples": [
            "territory_name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*geographic.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "geographic_area_code"
          ],
          "negativeExamples": [
            "geographic_coordinates"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*garage.*territory.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "garage_territory"
          ],
          "negativeExamples": [
            "garage_address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*area.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "area_type_code"
          ],
          "negativeExamples": [
            "area_size"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*territory.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "territory"
          ],
          "negativeExamples": [
            "terrain"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "code"
          ],
          "negativeExamples": [
            "name"
          ],
          "rationale": null
        }
      ],
      "priority": 3000,
      "explanation": "This semantic type identifies geographic territory classification codes used in insurance and similar industries to categorize the type of area where a vehicle is primarily located or garaged. These codes are typically used for risk assessment and premium calculation purposes. The codes can be either descriptive text (URBAN, SUBURBAN, RURAL), single-letter abbreviations (U, S, R), or numeric codes (01, 02, 03). This classification helps insurers understand the risk profile associated with different geographic area types, as urban areas may have higher theft rates but better emergency services, while rural areas may have different accident patterns and response times.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:10:31.340406"
    },
    {
      "resultType": "generated",
      "semanticType": "Second_driver",
      "description": "A binary flag indicating whether additional drivers beyond the primary policyholder are covered under the insurance policy",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "TRUE",
        "FALSE",
        "TRUE",
        "FALSE",
        "TRUE",
        "FALSE",
        "YES",
        "NO",
        "YES",
        "NO",
        "YES",
        "NO",
        "Y",
        "N",
        "1",
        "0"
      ],
      "backout": "(?i)(true|false|yes|no|y|n|1|0)",
      "positiveContentExamples": [
        "true",
        "false",
        "True",
        "False",
        "YES",
        "NO",
        "Y",
        "N",
        "1",
        "0"
      ],
      "negativeContentExamples": [
        "maybe",
        "unknown",
        "2",
        "-1",
        "pending",
        "active",
        "inactive"
      ],
      "positiveHeaderExamples": [
        "additional_drivers_flag",
        "additional_drivers_covered",
        "multi_driver_policy",
        "has_additional_drivers",
        "extra_drivers_included",
        "secondary_drivers_flag",
        "other_drivers_covered",
        "additional_driver_indicator"
      ],
      "negativeHeaderExamples": [
        "primary_driver_flag",
        "driver_count",
        "additional_vehicles",
        "driver_age",
        "driver_name",
        "coverage_amount",
        "policy_number",
        "vehicle_flag"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*additional.*driver.*flag.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "additional_drivers_flag"
          ],
          "negativeExamples": [
            "primary_driver_flag"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*additional.*driver.*covered.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "additional_drivers_covered"
          ],
          "negativeExamples": [
            "driver_coverage_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*multi.*driver.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "multi_driver_policy"
          ],
          "negativeExamples": [
            "multi_vehicle_policy"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*additional.*driver.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "additional_drivers"
          ],
          "negativeExamples": [
            "additional_vehicles"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*driver.*flag.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "driver_flag"
          ],
          "negativeExamples": [
            "vehicle_flag"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*flag.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "flag"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3010,
      "explanation": "This semantic type identifies binary flags that indicate whether an insurance policy covers additional drivers beyond the primary policyholder. It's commonly used in auto insurance datasets to track multi-driver policies. The type recognizes various boolean representations including true/false, yes/no, Y/N, and 1/0 formats. This information is crucial for insurance companies to assess risk, calculate premiums, and determine coverage scope for policies that include multiple authorized drivers.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:11:11.443580"
    },
    {
      "resultType": "generated",
      "semanticType": "Year_matriculation",
      "description": "The calendar year when the insured vehicle was first registered or received its initial license plates from authorities",
      "pluginType": "regex",
      "regexPattern": "(19[5-9][0-9]|20[0-9][0-9]|2100)",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023",
        "2015",
        "2008",
        "1995",
        "2001",
        "2019",
        "1987",
        "2024"
      ],
      "negativeContentExamples": [
        "1949",
        "2101",
        "23",
        "15",
        "2023-01-15",
        "Jan 2023",
        "2023.5",
        "20230"
      ],
      "positiveHeaderExamples": [
        "vehicle_registration_year",
        "car_year",
        "auto_reg_year",
        "initial_registration_year",
        "first_reg_yr",
        "vehicle_yr",
        "registration_year",
        "model_year"
      ],
      "negativeHeaderExamples": [
        "registration_date",
        "vehicle_age",
        "license_number",
        "registration_fee",
        "expiry_year",
        "manufacture_date",
        "policy_year",
        "birth_year"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*(vehicle|car|auto).*registration.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_registration_year"
          ],
          "negativeExamples": [
            "vehicle_registration_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(initial|first).*registration.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "initial_registration_year"
          ],
          "negativeExamples": [
            "last_registration_year"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(vehicle|car|auto).*(year|yr).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_year"
          ],
          "negativeExamples": [
            "vehicle_age"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*registration.*(year|yr).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "registration_year"
          ],
          "negativeExamples": [
            "registration_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(reg|regis).*(year|yr).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "reg_year"
          ],
          "negativeExamples": [
            "reg_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(year|yr).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "year"
          ],
          "negativeExamples": [
            "month"
          ],
          "rationale": null
        }
      ],
      "priority": 3020,
      "explanation": "This semantic type identifies calendar years specifically related to vehicle registration, representing when a vehicle was first registered or received its initial license plates. It covers the typical range of vehicle registration years from 1950 to 2100, accounting for both vintage vehicles and future registrations. This is commonly used in insurance, DMV records, and automotive databases to track vehicle history and registration timelines. The pattern distinguishes vehicle registration years from other year-based data like birth years, policy years, or manufacturing dates.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:11:48.393893"
    },
    {
      "resultType": "generated",
      "semanticType": "Power",
      "description": "The engine power output of the insured vehicle measured in horsepower or equivalent power units.",
      "pluginType": "regex",
      "regexPattern": "\\d+(\\.\\d+)?\\s*(hp|HP|bhp|BHP|ps|PS|kw|KW|kW|horsepower|Horsepower|HORSEPOWER)",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "150 hp",
        "200 HP",
        "180.5 bhp",
        "220 BHP",
        "165 ps",
        "140 kW",
        "300 horsepower",
        "95.5 PS"
      ],
      "negativeContentExamples": [
        "2.5L",
        "V6",
        "1500 rpm",
        "350 Nm",
        "4 cylinders",
        "Turbo",
        "Diesel",
        "Manual"
      ],
      "positiveHeaderExamples": [
        "engine_power",
        "horsepower",
        "power_hp",
        "bhp_rating",
        "engine_power_output",
        "vehicle_horsepower",
        "power_kw",
        "hp_rating"
      ],
      "negativeHeaderExamples": [
        "engine_displacement",
        "torque",
        "cylinders",
        "fuel_type",
        "transmission",
        "engine_size",
        "rpm",
        "compression_ratio"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*engine.*power.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "engine_power_hp"
          ],
          "negativeExamples": [
            "engine_displacement"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*vehicle.*power.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_power_output"
          ],
          "negativeExamples": [
            "vehicle_weight"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(horsepower|hp).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "horsepower_rating"
          ],
          "negativeExamples": [
            "horse_breed"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*bhp.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "bhp_rating"
          ],
          "negativeExamples": [
            "rpm_rating"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*power.*output.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "power_output"
          ],
          "negativeExamples": [
            "power_consumption"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*power.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "power"
          ],
          "negativeExamples": [
            "tower"
          ],
          "rationale": null
        }
      ],
      "priority": 3030,
      "explanation": "This semantic type identifies engine power measurements for vehicles, commonly found in automotive insurance data. It recognizes various power units including horsepower (hp), brake horsepower (bhp), metric horsepower (ps), and kilowatts (kW). The pattern accommodates both whole numbers and decimal values followed by the appropriate unit abbreviation or full term. This is essential for vehicle classification, risk assessment, and premium calculation in insurance applications where engine power is a key factor in determining coverage and rates.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:12:20.434423"
    },
    {
      "resultType": "generated",
      "semanticType": "Cylinder_capacity",
      "description": "The total displacement volume of the vehicle's engine cylinders measured in cubic centimeters or equivalent units",
      "pluginType": "regex",
      "regexPattern": "\\d{1,5}(\\.\\d{1,2})?\\s*(cc|CC|cm\u00b3|cm3|L|l|liters?|litres?|cubic\\s*centimeters?|cubic\\s*centimetres?|ci|CID|cubic\\s*inches?)",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1600cc",
        "2.0L",
        "3500 cc",
        "1.8 liters",
        "5000cm\u00b3",
        "427 ci",
        "6.2 L",
        "1200 cubic centimeters"
      ],
      "negativeContentExamples": [
        "250 hp",
        "350 ft-lbs",
        "8000 rpm",
        "25 mpg",
        "V8",
        "DOHC",
        "Turbo",
        "4-cylinder"
      ],
      "positiveHeaderExamples": [
        "engine_displacement",
        "motor_size_cc",
        "displacement_liters",
        "engine_cc",
        "cubic_capacity",
        "engine_volume",
        "displacement_cm3",
        "motor_displacement_l"
      ],
      "negativeHeaderExamples": [
        "engine_power",
        "horsepower",
        "torque_rating",
        "fuel_capacity",
        "cylinder_count",
        "engine_type",
        "transmission_type",
        "fuel_efficiency"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*engine.*displacement.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "engine_displacement_cc"
          ],
          "negativeExamples": [
            "engine_power_hp"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*motor.*displacement.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "motor_displacement"
          ],
          "negativeExamples": [
            "motor_torque"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*engine.*size.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "engine_size_liters"
          ],
          "negativeExamples": [
            "tire_size"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(cc|cubic.*cm|liters?|litres?).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_cc"
          ],
          "negativeExamples": [
            "fuel_capacity_cc"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*displacement.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "displacement"
          ],
          "negativeExamples": [
            "replacement"
          ],
          "rationale": null
        }
      ],
      "priority": 3040,
      "explanation": "This semantic type identifies engine displacement values, which represent the total volume of all cylinders in an internal combustion engine. Engine displacement is a key specification for vehicles and is commonly expressed in cubic centimeters (cc), liters (L), or cubic inches (ci/CID). This measurement is crucial for vehicle classification, performance assessment, taxation in many countries, and regulatory compliance. The pattern recognizes various common formats and units used globally, including metric (cc, cm\u00b3, liters) and imperial (cubic inches) measurements, with optional decimal precision and flexible spacing/formatting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:13:26.427198"
    },
    {
      "resultType": "generated",
      "semanticType": "Value_vehicle",
      "description": "The current market value or replacement cost of an insured vehicle used for coverage limits and premium calculations",
      "pluginType": "regex",
      "regexPattern": "(?:\\$|USD|CAD|EUR|GBP)?\\s*\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?\\s*(?:USD|CAD|EUR|GBP)?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "$25,500.00",
        "$32,000",
        "45,250.50",
        "USD 28,900",
        "$15,000.00",
        "$38,750"
      ],
      "negativeContentExamples": [],
      "positiveHeaderExamples": [
        "vehicle_market_value",
        "auto_current_value",
        "car_replacement_cost",
        "insured_vehicle_worth",
        "coverage_limit_amount",
        "policy_value",
        "vehicle_value",
        "current_market_value"
      ],
      "negativeHeaderExamples": [
        "vehicle_year",
        "insurance_premium",
        "deductible_amount",
        "policy_number",
        "driver_age",
        "claim_amount",
        "mileage",
        "vin_number"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*(?:market|current|replacement).*(?:value|worth|cost).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_market_value"
          ],
          "negativeExamples": [
            "vehicle_purchase_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:auto|car).*(?:market|current|replacement).*(?:value|worth|cost).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "auto_current_value"
          ],
          "negativeExamples": [
            "auto_insurance_premium"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insured.*(?:vehicle|auto|car).*(?:value|worth|cost).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insured_vehicle_value"
          ],
          "negativeExamples": [
            "insured_driver_age"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:coverage|policy).*(?:limit|amount|value).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "coverage_limit_amount"
          ],
          "negativeExamples": [
            "coverage_start_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:market|current|replacement).*(?:value|worth).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "market_value"
          ],
          "negativeExamples": [
            "market_share"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:value|worth|cost).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "value"
          ],
          "negativeExamples": [
            "volume"
          ],
          "rationale": null
        }
      ],
      "priority": 3050,
      "explanation": "This semantic type identifies monetary values representing the current market value or replacement cost of insured vehicles. These values are typically used in insurance contexts for determining coverage limits, calculating premiums, and processing claims. The pattern matches currency amounts in the typical range for vehicle values (roughly $5,000 to $100,000), supporting various currency formats including dollar signs, commas for thousands separators, and optional currency codes. This helps distinguish vehicle values from other monetary amounts like small fees or very high-value items that wouldn't represent typical vehicle worth.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:14:03.584546"
    },
    {
      "resultType": "generated",
      "semanticType": "N_doors",
      "description": "The count of passenger doors on the insured vehicle, excluding the trunk or hatchback opening.",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "2",
        "3",
        "4",
        "5"
      ],
      "backout": "[2-5]",
      "positiveContentExamples": [
        "2",
        "3",
        "4",
        "5"
      ],
      "negativeContentExamples": [
        "1",
        "6",
        "0",
        "10",
        "2.5",
        "-1",
        "two",
        "four doors"
      ],
      "positiveHeaderExamples": [
        "door_count",
        "num_doors",
        "passenger_doors",
        "vehicle_door_count",
        "doors",
        "door_number",
        "total_doors",
        "car_doors"
      ],
      "negativeHeaderExamples": [
        "trunk_doors",
        "garage_doors",
        "door_type",
        "door_color",
        "window_count",
        "seat_count",
        "door_handle",
        "door_material"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*passenger.*door.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "passenger_door_count"
          ],
          "negativeExamples": [
            "cargo_door_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*vehicle.*door.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_door_count"
          ],
          "negativeExamples": [
            "building_door_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*door.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "door_count"
          ],
          "negativeExamples": [
            "window_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*num.*door.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "num_doors"
          ],
          "negativeExamples": [
            "num_windows"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*door.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "doors"
          ],
          "negativeExamples": [
            "floors"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3060,
      "explanation": "This semantic type identifies the count of passenger doors on vehicles, specifically for insurance and automotive contexts. It represents a finite set of values (2-5) as passenger vehicles typically have 2 doors (coupes), 3 doors (some hatchbacks), 4 doors (sedans, most SUVs), or 5 doors (some SUVs and minivans when counting the rear hatch as a passenger access point). The type excludes trunk openings and cargo doors, focusing only on doors used for passenger entry and exit. This is commonly used in insurance forms, vehicle registration systems, and automotive databases for classification and risk assessment purposes.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:14:33.606303"
    },
    {
      "resultType": "generated",
      "semanticType": "Type_fuel",
      "description": "A coded identifier specifying the primary fuel type used by the insured vehicle's engine system",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "G",
        "D",
        "E",
        "H",
        "B",
        "C",
        "F",
        "P",
        "N",
        "GAS",
        "DSL",
        "ETH",
        "HYB",
        "BEV",
        "CNG",
        "FLX",
        "LPG",
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07"
      ],
      "backout": "[A-Z]{1,3}|[0-9]{1,2}",
      "positiveContentExamples": [
        "G",
        "D",
        "E",
        "H",
        "GAS",
        "DSL",
        "HYB",
        "01"
      ],
      "negativeContentExamples": [
        "GASOLINE",
        "DIESEL",
        "V6",
        "AUTO",
        "4WD",
        "SEDAN",
        "2023",
        "TOYOTA"
      ],
      "positiveHeaderExamples": [
        "fuel_type_code",
        "vehicle_fuel_code",
        "fuel_code",
        "fuel_type",
        "primary_fuel_type",
        "engine_fuel_code",
        "fuel_cd",
        "veh_fuel_type"
      ],
      "negativeHeaderExamples": [
        "fuel_capacity",
        "fuel_cost",
        "engine_type",
        "transmission_type",
        "vehicle_type",
        "fuel_efficiency",
        "fuel_grade",
        "body_type"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*fuel.*type.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_fuel_type_code"
          ],
          "negativeExamples": [
            "vehicle_engine_type_code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*type.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel_type_code"
          ],
          "negativeExamples": [
            "fuel_grade_code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel_code"
          ],
          "negativeExamples": [
            "fuel_cost"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel_type"
          ],
          "negativeExamples": [
            "fuel_tank"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel"
          ],
          "negativeExamples": [
            "full"
          ],
          "rationale": null
        }
      ],
      "priority": 3070,
      "explanation": "This semantic type identifies coded values representing vehicle fuel types commonly used in automotive and insurance systems. The codes can be single letters (G for gasoline, D for diesel), short abbreviations (GAS, DSL, HYB), or numeric codes (01, 02, etc.). These standardized codes are essential for vehicle classification, insurance rating, and regulatory compliance in automotive databases. The type uses a finite list approach since fuel type codes are standardized within industry systems, with a backout pattern to catch similar alphanumeric codes that might represent fuel types in different coding schemes.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:15:08.238634"
    },
    {
      "resultType": "generated",
      "semanticType": "Length",
      "description": "The overall length dimension of the insured vehicle measured from front to rear in standard units.",
      "pluginType": "regex",
      "regexPattern": "(?i)\\d+(\\.\\d+)?\\s*(ft|feet|foot|in|inch|inches|cm|centimeter|centimeters|mm|millimeter|millimeters|m|meter|meters|'|\")",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "185.2 inches",
        "15.4 ft",
        "4.7 meters",
        "470 cm",
        "4700 mm",
        "185 in",
        "4.68 m"
      ],
      "negativeContentExamples": [
        "185.2 lbs",
        "15.4 gallons",
        "4.7 liters",
        "470 kg",
        "4700 rpm",
        "185 mph",
        "15 years",
        "Blue"
      ],
      "positiveHeaderExamples": [
        "vehicle_length",
        "car_length_ft",
        "overall_length_inches",
        "auto_length_cm",
        "veh_len",
        "length_mm",
        "total_length",
        "vehicle_overall_length"
      ],
      "negativeHeaderExamples": [
        "vehicle_width",
        "car_height_ft",
        "vehicle_weight",
        "auto_year",
        "veh_color",
        "engine_size",
        "fuel_capacity",
        "vehicle_speed"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_length_ft"
          ],
          "negativeExamples": [
            "vehicle_width_ft"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*car.*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "car_length_inches"
          ],
          "negativeExamples": [
            "car_height_inches"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*auto.*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "auto_length_cm"
          ],
          "negativeExamples": [
            "auto_weight_kg"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(overall|total).*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "overall_length"
          ],
          "negativeExamples": [
            "overall_width"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*len.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "veh_len"
          ],
          "negativeExamples": [
            "veh_wid"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "length"
          ],
          "negativeExamples": [
            "width"
          ],
          "rationale": null
        }
      ],
      "priority": 3080,
      "explanation": "This semantic type identifies vehicle length measurements in various standard units including feet, inches, meters, centimeters, and millimeters. It's commonly used in insurance, automotive, and transportation datasets where vehicle dimensions are recorded. The pattern matches numeric values followed by length unit indicators, accommodating both spelled-out units and abbreviations. This is particularly useful for vehicle registration data, insurance claims processing, and automotive specifications databases where precise vehicle dimensions are required for classification and coverage determination.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:15:47.949093"
    },
    {
      "resultType": "generated",
      "semanticType": "Weight",
      "description": "The total mass of the insured vehicle including its basic equipment measured in standard weight units",
      "pluginType": "regex",
      "regexPattern": "\\d{1,2}[,.]?\\d{3}(?:[,.]?\\d{3})*(?:[,.]?\\d{1,3})?\\s*(?:kg|lbs?|pounds?|kilograms?|tonnes?|tons?|t)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1,500 kg",
        "3,200 lbs",
        "4500 pounds",
        "1800 kilograms",
        "2,850 lb",
        "3500kg"
      ],
      "negativeContentExamples": [
        "150 mph",
        "25 years",
        "$15,000",
        "2.5 liters",
        "180 hp",
        "4 doors",
        "12 months",
        "250 miles"
      ],
      "positiveHeaderExamples": [
        "vehicle_mass",
        "car_weight_kg",
        "total_vehicle_weight",
        "insured_auto_mass",
        "curb_weight",
        "gross_vehicle_weight",
        "vehicle_wt_lbs",
        "auto_mass_tonnes"
      ],
      "negativeHeaderExamples": [
        "cargo_weight",
        "driver_weight",
        "payload_mass",
        "engine_weight",
        "trailer_weight",
        "passenger_weight",
        "fuel_weight",
        "luggage_weight"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*(?:mass|weight).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_mass_kg"
          ],
          "negativeExamples": [
            "cargo_weight"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:insured|auto).*(?:mass|weight).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insured_vehicle_weight"
          ],
          "negativeExamples": [
            "insured_cargo_weight"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:curb|gross|total).*(?:mass|weight).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "total_vehicle_mass"
          ],
          "negativeExamples": [
            "payload_weight"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*vehicle.*(?:wt|mass).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_wt"
          ],
          "negativeExamples": [
            "driver_wt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:mass|weight).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "mass"
          ],
          "negativeExamples": [
            "height"
          ],
          "rationale": null
        }
      ],
      "priority": 3090,
      "explanation": "This semantic type identifies vehicle mass measurements used in insurance contexts. It captures the total weight of insured vehicles including their basic equipment, expressed in various standard weight units (kg, lbs, tonnes, tons, etc.). The pattern accommodates different formatting styles including comma separators, decimal points, and various unit abbreviations. This is commonly used in auto insurance for risk assessment, premium calculation, and vehicle classification purposes.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P1",
      "generated_at": "2025-08-08T09:16:22.361247"
    }
  ]
}