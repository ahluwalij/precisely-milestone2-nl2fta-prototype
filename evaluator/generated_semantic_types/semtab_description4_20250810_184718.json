[
  {
    "resultType": "generated",
    "semanticType": "source",
    "description": "A text field containing URLs that follow RFC 3986 standards with protocol schemes, domain names, and optional paths or parameters. The format represents complete web addresses using standard URI syntax for resource identification and access across internet and network systems.",
    "pluginType": "regex",
    "regexPattern": "\\b(https|http|ftp)://[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)+(:[0-9]{2,5})?(/[A-Za-z0-9._~!$&'()*+,;=:@%/-]*)?(\\?[A-Za-z0-9._~!$&'()*+,;=:@%/?-]*)?(#[A-Za-z0-9._~!$&'()*+,;=:@%/?-]*)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9180,
    "headerPatterns": [
      {
        "regExp": "(?i).*source.*url.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "source_url"
        ],
        "negativeExamples": [
          "source_domain"
        ]
      },
      {
        "regExp": "(?i).*website.*url.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Website URL"
        ],
        "negativeExamples": [
          "Website Domain"
        ]
      },
      {
        "regExp": "(?i).*web.*address.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Web Address"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      },
      {
        "regExp": "(?i).*(website|site).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Website"
        ],
        "negativeExamples": [
          "File Path"
        ]
      },
      {
        "regExp": "(?i).*uri.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Page URI"
        ],
        "negativeExamples": [
          "Domain Name"
        ]
      },
      {
        "regExp": "(?i).*url.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "URL"
        ],
        "negativeExamples": [
          "Domain Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "https://www.example.com",
      "http://example.org/path/to/page",
      "https://sub.domain.co.uk/index.html",
      "http://example.net:8080/api/v1/items?sort=asc&page=2",
      "https://example.com/search?q=fta+semantic&type=regex#section-2",
      "ftp://ftp.example.com/pub/files/readme.txt",
      "https://blog.example.io/2025/08/guide?ref=home",
      "http://news.example.com/archive/2024/10/15?utm_source=rss"
    ],
    "negativeContentExamples": [
      "www.example.com",
      "https//example.com",
      "http:/example.com",
      "http://example",
      "example.com/page",
      "mailto:user@example.com",
      "file:///C:/data/report.csv",
      "https://256.256.256.256"
    ],
    "positiveHeaderExamples": [
      "URL",
      "Website",
      "Web Address",
      "Source URL",
      "Website URL",
      "Page URI",
      "Link URL",
      "Landing Page URL"
    ],
    "negativeHeaderExamples": [
      "Domain Name",
      "Email Address",
      "File Path",
      "Web Domain",
      "Homepage Title",
      "Resource Name",
      "IP Address",
      "Link Text"
    ],
    "explanation": "This semantic type detects web URLs with explicit schemes (http, https, ftp), a valid domain with a top-level domain, and optional port, path, query, and fragment components. It is useful for identifying columns that store full web addresses used as sources, links, or endpoints in datasets.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:47:59.168647"
  },
  {
    "resultType": "generated",
    "semanticType": "cost",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9]+ [A-Za-z0-9][A-Za-z0-9 ,.;:'\"()/_-]{8,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9420,
    "headerPatterns": [
      {
        "regExp": "(?i).*(item|order|additional|general).*(description|notes|comments).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "item_description"
        ],
        "negativeExamples": [
          "price_notes"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|client).*(notes|comments|feedback).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "vendor_comments"
        ]
      },
      {
        "regExp": "(?i).*(free[-_ ]?text|remarks|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "title"
        ]
      },
      {
        "regExp": "(?i).*(desc|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "notes"
        ],
        "negativeExamples": [
          "id"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Delayed shipment due to weather conditions.",
      "Customer reported intermittent login failure across devices.",
      "Please contact support if the issue persists.",
      "Requires manager approval before processing.",
      "Includes accessories: charger, cable, and case.",
      "Refund processed after verification of receipt.",
      "Installation instructions provided in the package.",
      "High priority; escalate to Tier 2 if unresolved."
    ],
    "negativeContentExamples": [
      "N/A",
      "OK",
      "12345",
      "SKU-00123",
      "2023-08-15",
      "john.doe@example.com",
      "$19.99",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Item Description",
      "Customer Notes",
      "General Comments",
      "Additional Details",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Cost",
      "Title",
      "SKU",
      "Email",
      "Quantity"
    ],
    "explanation": "This semantic type targets free-form narrative or descriptive text fields commonly used for descriptions, notes, comments, and other unstructured entries. Matching primarily leverages header semantics and a content pattern that expects at least two words with common punctuation, reducing overlap with identifiers, codes, or single-token values.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:01.208727"
  },
  {
    "resultType": "generated",
    "semanticType": "time",
    "description": "A numeric field containing timestamp values represented as 10-digit integers denoting seconds since the Unix epoch (1970-01-01T00:00:00Z). Values are strictly ten numeric digits with no separators, signs, or decimals, providing second-level precision commonly used in Unix systems and APIs.",
    "pluginType": "regex",
    "regexPattern": "\\b[0-9]{10}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9040,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(unix|posix)\\b.*\\b(timestamp|time)\\b.*\\bseconds\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp Seconds"
        ],
        "negativeExamples": [
          "Unix Timestamp"
        ]
      },
      {
        "regExp": "(?i).*\\bunix\\b.*\\btimestamp\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Timestamp"
        ]
      },
      {
        "regExp": "(?i).*\\bepoch\\b.*\\btime\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Time"
        ]
      },
      {
        "regExp": "(?i).*\\btimestamp\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*\\bepoch\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch"
        ],
        "negativeExamples": [
          "Formatted Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "1000000000",
      "1234567890",
      "1451606400",
      "1500000000",
      "1609459200",
      "1704067200",
      "2000000000",
      "2147483647"
    ],
    "negativeContentExamples": [
      "999999999",
      "10000000000",
      "1609459200000",
      "1,609,459,200",
      "1609459200.0",
      "-1609459200",
      "1609459200Z",
      "2021-01-01T00:00:00"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Unix Epoch Seconds",
      "POSIX Time",
      "Event Timestamp",
      "Epoch"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "ISO Date",
      "Datetime",
      "Milliseconds",
      "Timezone"
    ],
    "explanation": "This semantic type identifies numeric fields that are strictly 10-digit Unix epoch seconds. It is useful for recognizing raw second-precision timestamps in logs, telemetry, APIs, and data pipelines where timestamps are stored as plain integers rather than formatted dates.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:04.895830"
  },
  {
    "resultType": "generated",
    "semanticType": "date",
    "description": "A numeric field containing 10-digit integers representing seconds since the Unix epoch (1970-01-01T00:00:00Z). Values are strictly 10 digits and encode second-precision timestamps commonly used in Unix systems, APIs, and logging.\nThis type excludes 13-digit millisecond timestamps and any human-readable or formatted date/time strings.",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9]\\d{9}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 96,
    "priority": 9060,
    "headerPatterns": [
      {
        "regExp": "(?i).*unix.*timestamp.*seconds.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp Seconds"
        ],
        "negativeExamples": [
          "Formatted Date"
        ]
      },
      {
        "regExp": "(?i).*epoch.*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      },
      {
        "regExp": "(?i).*epoch.*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*ts.*sec.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ts_sec"
        ],
        "negativeExamples": [
          "ts_format"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "1000000000",
      "1234567890",
      "1451606400",
      "1609459200",
      "1672531200",
      "1700000000",
      "2147483647",
      "9999999999"
    ],
    "negativeContentExamples": [
      "987654321",
      "12345678901",
      "1697040000000",
      "-1609459200",
      "1609459200Z",
      "1609459200.0",
      "0000000000",
      "1 609 459 200"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Epoch Seconds",
      "Timestamp Seconds",
      "Unix Time",
      "Epoch Second"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Datetime",
      "ISO8601",
      "Created Date",
      "Local Time"
    ],
    "explanation": "Detects Unix epoch timestamps stored as 10-digit integers representing seconds. The value regex enforces exactly 10 digits (no signs, decimals, or letters), distinguishing it from 13-digit millisecond values and formatted date strings. Header patterns follow a top-down approach from explicit phrases (e.g., 'Unix Timestamp Seconds') to the primitive term 'timestamp' to guide classification without over-matching generic 'date' or 'time' columns.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:06.636447"
  },
  {
    "resultType": "generated",
    "semanticType": "county",
    "description": "US county-level jurisdiction names with proper capitalization, ending in the designation \"County\" or \"Parish\". Matches one or more capitalized words followed by a space and the final designation term. Intended for clean, official county/parish names without abbreviations or trailing state codes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]+(\\s[A-Z][a-z]+)*\\s(County|Parish)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9160,
    "headerPatterns": [
      {
        "regExp": "(?i).*(us|usa).*(county|parish).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US County"
        ],
        "negativeExamples": [
          "County Name"
        ]
      },
      {
        "regExp": "(?i).*(county|parish).*(name|label|title).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "County Name"
        ],
        "negativeExamples": [
          "County Code"
        ]
      },
      {
        "regExp": "(?i).*\\bcnty\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Cnty"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*(county|parish).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Parish"
        ],
        "negativeExamples": [
          "State"
        ]
      },
      {
        "regExp": "(?i).*\\bcounty\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "County"
        ],
        "negativeExamples": [
          "City"
        ]
      }
    ],
    "positiveContentExamples": [
      "Orange County",
      "Los Angeles County",
      "King County",
      "Harris County",
      "Cook County",
      "Fairfax County",
      "Orleans Parish",
      "East Baton Rouge Parish"
    ],
    "negativeContentExamples": [
      "Harris county",
      "Los Angeles",
      "St. Louis County",
      "McLean County",
      "King County, WA",
      "County of Orange",
      "Orange Co.",
      "Orleans Parish LA"
    ],
    "positiveHeaderExamples": [
      "County",
      "County Name",
      "US County",
      "Parish",
      "Cnty",
      "County Label",
      "County Title"
    ],
    "negativeHeaderExamples": [
      "State",
      "FIPS Code",
      "City",
      "Country",
      "Company",
      "Postal Code",
      "Province",
      "Region"
    ],
    "explanation": "This semantic type detects US county-level names formatted as one or more properly capitalized words ending with the designation \"County\" or \"Parish\" (e.g., \"Los Angeles County\", \"Orleans Parish\"). It excludes entries with abbreviations (e.g., \"Co.\"), punctuation within tokens (e.g., \"St.\"), reversed forms (e.g., \"County of Orange\"), or trailing state/country codes (e.g., \"King County, WA\"). Use it for columns storing official county or parish names without extra qualifiers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:08.171824"
  },
  {
    "resultType": "generated",
    "semanticType": "value",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[\\p{L}]{2,}\\b\\s+\\b[\\p{L}]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9430,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|issue|product).*(description|notes|comments).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Customer_Comments"
        ],
        "negativeExamples": [
          "Customer_ID"
        ]
      },
      {
        "regExp": "(?i).*(long|full|detailed).*(description|comment|notes).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Detailed_Description"
        ],
        "negativeExamples": [
          "Detailed_Price"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes|remarks|details).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|cmts|note).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "node"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "ID"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached report.",
      "Customer requested expedited shipping.",
      "Issue persists after reboot; logs attached.",
      "Payment failed due to timeout error.",
      "Use caution when merging these records.",
      "Order canceled by user via portal.",
      "Provide feedback by end of week.",
      "This item was returned damaged."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "A B",
      "2024-07-15",
      "123456",
      "id: 98765",
      "AB-12345",
      "Yes"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Text",
      "Details",
      "Remarks",
      "Customer_Comments",
      "Issue Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Amount",
      "Email",
      "Status Code",
      "Phone"
    ],
    "explanation": "This semantic type targets free-form narrative text fields typically used for descriptions, notes, and comments. The content pattern favors entries with at least two alphabetic words to distinguish narrative text from IDs, codes, and dates. Header patterns prioritize explicit description/comment terminology and common abbreviations, then fall back to the primitive concept of 'text'. High threshold and priority are used to reduce conflicts while acknowledging the type\u2019s broad nature.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:08.790177"
  },
  {
    "resultType": "generated",
    "semanticType": "race",
    "description": "A text field containing racial and ethnic terms that follow standard demographic category terminology and use proper case formatting for established classification systems. The format consists of alphabetic characters representing recognized racial and ethnic designations as commonly used in official demographic and census contexts.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "AMERICAN INDIAN OR ALASKA NATIVE",
      "ASIAN",
      "BLACK OR AFRICAN AMERICAN",
      "NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER",
      "WHITE",
      "HISPANIC OR LATINO",
      "NOT HISPANIC OR LATINO",
      "TWO OR MORE RACES",
      "OTHER",
      "MIDDLE EASTERN OR NORTH AFRICAN",
      "SOME OTHER RACE",
      "PREFER NOT TO SAY",
      "DECLINED TO STATE",
      "UNKNOWN",
      "REFUSED"
    ],
    "backout": "^[A-Z][A-Z ]{2,60}$",
    "confidenceThreshold": 95,
    "priority": 9220,
    "headerPatterns": [
      {
        "regExp": "(?i).*(race[\\s/_-]*ethnicity|ethnicity[\\s/_-]*race|racial[\\s/_-]*group|ethnic[\\s/_-]*group).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Racial Group"
        ],
        "negativeExamples": [
          "Race Code"
        ]
      },
      {
        "regExp": "(?i).*(demographic|patient|employee|student)[\\s/_-]*(race|ethnicity).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Demographic Race"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*(ethn|ethnic)[\\s/_-]*(grp|group|cat|category).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Ethnic grp"
        ],
        "negativeExamples": [
          "Ethics group"
        ]
      },
      {
        "regExp": "(?i).*(ethnicity|ethnic|racial).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Ethnicity"
        ],
        "negativeExamples": [
          "Nationality"
        ]
      },
      {
        "regExp": "(?i).*race.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Race"
        ],
        "negativeExamples": [
          "Gender"
        ]
      }
    ],
    "positiveContentExamples": [
      "White",
      "Black or African American",
      "Asian",
      "American Indian or Alaska Native",
      "Native Hawaiian or Other Pacific Islander",
      "Hispanic or Latino",
      "Not Hispanic or Latino",
      "Two or More Races"
    ],
    "negativeContentExamples": [
      "Caucasian",
      "African American",
      "Hispanic/Latino",
      "Asian-Pacific Islander",
      "White (Non-Hispanic)",
      "Two or More",
      "Unknown/Other",
      "Prefer not to disclose"
    ],
    "positiveHeaderExamples": [
      "Race",
      "Ethnicity",
      "Racial Group",
      "Ethnic Group",
      "Race/Ethnicity",
      "Demographic Race",
      "Patient Race",
      "Resident Ethnicity"
    ],
    "negativeHeaderExamples": [
      "Race Code",
      "Nationality",
      "Country",
      "Citizenship",
      "Language",
      "Gender",
      "Age",
      "Country Code"
    ],
    "explanation": "This semantic type identifies fields storing a person's racial or ethnic designation, using a controlled vocabulary of commonly used demographic categories. It is list-based to ensure precision and reduce ambiguity, with a backout pattern that constrains values to alphabetic tokens and spaces typical of such labels. Typical use cases include standardizing demographic attributes in healthcare, education, HR, or survey datasets.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:10.835533"
  },
  {
    "resultType": "generated",
    "semanticType": "model",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9 ,.;:!?\"'()/_-]*[A-Za-z][A-Za-z0-9 ,.;:!?\"'()/_-]*\\s+[A-Za-z0-9 ,.;:!?\"'()/_-]{3,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9240,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|product|order|issue).*(description|comments?|notes?|remark|free[ _]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(detailed|long|free[ _]?form|additional).*(description|comments?|notes?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_notes"
        ],
        "negativeExamples": [
          "total_price"
        ]
      },
      {
        "regExp": "(?i).*(summary|overview|explanation|context).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "summary"
        ],
        "negativeExamples": [
          "quantity"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts?|rmk|txt|text|notes?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "id"
        ]
      }
    ],
    "positiveContentExamples": [
      "The device was installed successfully and will require a reboot after updates.",
      "Please refer to the attached guidelines for configuration details.",
      "User reported intermittent errors when saving large files.",
      "This entry summarizes the key assumptions and constraints.",
      "No issues observed during the trial period; performance was stable.",
      "Payment pending; awaiting confirmation from the finance team.",
      "Package arrived damaged; box had visible dents and tears."
    ],
    "negativeContentExamples": [
      "OK",
      "Pending",
      "1234567890",
      "A1B2C3",
      "2025-08-11",
      "john.doe@example.com",
      "N/A"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Free Text",
      "Additional Notes",
      "User Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Order Number",
      "Customer Name",
      "Zip Code",
      "Quantity",
      "Code"
    ],
    "explanation": "This semantic type captures free-form narrative text such as descriptions, notes, and comments, where content can include letters, digits, punctuation, and spaces and typically spans multiple words. The regex emphasizes multi-word strings with alphabetic characters to avoid misclassifying single tokens like IDs, dates, or codes; header patterns provide strong semantic cues for description/notes fields. Recommended for columns labeled description, notes, or comments where the data is unstructured text.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:10.835701"
  },
  {
    "resultType": "generated",
    "semanticType": "region",
    "description": "A text field containing US state names that follow standard English linguistic conventions with proper capitalization and spacing. The format represents official state designations as used in US government documentation and legal systems.",
    "pluginType": "regex",
    "regexPattern": "\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9400,
    "headerPatterns": [
      {
        "regExp": "(?i).*(us|usa).*state.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*state.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Full Name"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*state.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*(us|usa).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State"
        ],
        "negativeExamples": [
          "County"
        ]
      },
      {
        "regExp": "(?i).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New York",
      "Rhode Island",
      "North Carolina",
      "South Dakota",
      "West Virginia",
      "Hawaii",
      "Oregon"
    ],
    "negativeContentExamples": [
      "CA",
      "california",
      "California ",
      "NewYork",
      "North  Carolina",
      "Washington, D.C.",
      "Puerto Rico",
      "State of Texas"
    ],
    "positiveHeaderExamples": [
      "State",
      "State Name",
      "US State",
      "State Full Name",
      "Residence State",
      "Issuing State",
      "Home State",
      "US State Name"
    ],
    "negativeHeaderExamples": [
      "State Code",
      "Country",
      "County",
      "Province",
      "Region",
      "State Abbrev",
      "State ID",
      "Territory"
    ],
    "explanation": "This semantic type identifies full US state names written with proper capitalization and spacing, matching the official state names (e.g., California, New York, North Carolina). It is useful for validating and classifying columns containing state names in addresses, demographics, licensing, and jurisdictional records.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:10.999229"
  },
  {
    "resultType": "generated",
    "semanticType": "weight",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\"/(),.-]{1,}\\s+[A-Za-z][A-Za-z0-9'\"/(),.-]{1,}(\\s+[A-Za-z0-9'\"/(),.-]+){0,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9120,
    "headerPatterns": [
      {
        "regExp": "(?i).*(record|item|product|detail).*(description|comment|comments|notes).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "record_description"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(user|customer|internal).*(comments?|notes?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "id"
        ]
      },
      {
        "regExp": "(?i).*(description|descriptions).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmnts|cmts|rmk|memo).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "price_code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "quantity"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached report before Friday.",
      "Customer requested a refund due to damaged packaging.",
      "This item is backordered; expected ship date next week.",
      "Payment pending \u2014 awaiting approval from finance.",
      "Use the left entrance; elevator is under maintenance.",
      "Updated per client feedback on 2024-06-12.",
      "Requires manager sign-off; see ticket #4821.",
      "Notes: replace with newer model if available."
    ],
    "negativeContentExamples": [
      "Pending",
      "2024 report",
      "Report 2024",
      "12345 67890",
      "A-12345",
      "support@example.com",
      "alpha-beta",
      "OK"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "User Comments",
      "Internal Notes",
      "Free Text",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Email",
      "Code",
      "Status",
      "Phone"
    ],
    "explanation": "This semantic type captures free-form narrative fields commonly used for descriptions, comments, and notes. The content regex favors multi-word, human-readable text while avoiding IDs, codes, and single-token values. Header patterns progress from specific variants (e.g., record_description) to the primitive concept of text, ensuring robust detection without over-matching structured identifiers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:12.165784"
  },
  {
    "resultType": "generated",
    "semanticType": "category",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 ,.;:'\"!?()/-]{4,}\\s+[A-Za-z0-9][A-Za-z0-9 ,.;:'\"!?()/-]{12,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9070,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|order|customer|account|user)[ _-]?(description|notes|comments).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(internal|public|additional|special)[ _-]?(notes|comments|description).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "additional_notes"
        ],
        "negativeExamples": [
          "additional_charge"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|notes|cmt|cmts|remark|remarks|memo|memos).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "desc_text"
        ],
        "negativeExamples": [
          "discount_pct"
        ]
      },
      {
        "regExp": "(?i).*(details|summary|explanation|context).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_details"
        ],
        "negativeExamples": [
          "unit_price"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached invoice for accuracy.",
      "Customer reported an intermittent issue during login.",
      "Use this field to store additional notes and context.",
      "Initial installation completed successfully on 2023-08-14.",
      "This category includes accessories and replacement parts.",
      "The item shows minor wear; see photos for details.",
      "Needs approval from finance before shipment.",
      "Provide a brief explanation outlining the rationale and next steps."
    ],
    "negativeContentExamples": [
      "Approved",
      "N/A",
      "12345",
      "OK",
      "Pending review",
      "2024-05-01",
      "19.99",
      "john@example.com"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product_Description",
      "Additional_Notes",
      "Internal_Comments",
      "Details",
      "Summary"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Customer_ID",
      "Order_Date",
      "Unit_Price",
      "Quantity",
      "Status"
    ],
    "explanation": "This type targets free-form textual fields used for descriptions, notes, and comments. Detection emphasizes header semantics with broad coverage and a conservative content pattern to avoid accidental matches on short or code-like values. It is intended for narrative or explanatory text rather than identifiers, codes, or numeric fields.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:15.721970"
  },
  {
    "resultType": "generated",
    "semanticType": "filename",
    "description": "A text field containing filenames with a base name, a dot separator, and a file extension. The base name may include letters, digits, spaces, underscores, hyphens, and periods, and must start with an alphanumeric character; the extension is alphanumeric.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 _.-]*\\.[A-Za-z0-9]{1,10}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9390,
    "headerPatterns": [
      {
        "regExp": "(?i).*(document|attachment|source|upload).*file.*name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Document File Name"
        ],
        "negativeExamples": [
          "Document Path"
        ]
      },
      {
        "regExp": "(?i).*(file).*name.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "File Name"
        ],
        "negativeExamples": [
          "File Path"
        ]
      },
      {
        "regExp": "(?i).*(filename|file_name|file-name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Filename"
        ],
        "negativeExamples": [
          "File URL"
        ]
      },
      {
        "regExp": "(?i).*(doc).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Doc Name"
        ],
        "negativeExamples": [
          "Doc ID"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "report-Q1_2025.xlsx",
      "photo 01-02-2024.JPG",
      "README-v2.1.pdf",
      "data_export-2023_10.csv",
      "invoice-000123.pdf",
      "backup.final-2024-07-15.tar",
      "notes.txt",
      "project plan v3.docx"
    ],
    "negativeContentExamples": [
      "report",
      ".env",
      "/home/user/report.txt",
      "C:\\files\\report.txt",
      "notes.txt.backup",
      "file.",
      "label#1.txt",
      "report.longextension"
    ],
    "positiveHeaderExamples": [
      "Filename",
      "File Name",
      "Document Name",
      "Attachment Filename",
      "Source File Name",
      "Upload File Name",
      "Doc Name",
      "Output Filename"
    ],
    "negativeHeaderExamples": [
      "File Path",
      "Folder",
      "Extension",
      "MIME Type",
      "Directory",
      "File URL",
      "Path Name",
      "Content Type"
    ],
    "explanation": "This semantic type identifies standalone filenames consisting of a base name and an alphanumeric extension separated by a dot. It excludes paths, directories, and values without an extension, ensuring reliable detection of file identifiers rather than locations.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:16.466686"
  },
  {
    "resultType": "generated",
    "semanticType": "type",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9,.;:'\"!\\?-()/_@#&%]{5,} [A-Za-z0-9][A-Za-z0-9,.;:'\"!\\?-()/_@#&%]{5,}[A-Za-z0-9]\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9030,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|user|order|ticket|issue).*(description|comments|notes|remarks|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(additional|general|free).*(notes|comments|remarks|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_notes"
        ],
        "negativeExamples": [
          "general_status"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|remarks|rmks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_desc"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|remarks|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please ensure all items are packed securely before shipping.",
      "Customer reported intermittent connectivity issues after the update.",
      "This field captures any additional remarks provided by the reviewer.",
      "If the invoice is unpaid, explain the reason and expected resolution date.",
      "Notes: Delivery attempted twice; leave at front desk on next try.",
      "Returned because the color did not match the preview shown online.",
      "The user requested expedited processing due to travel plans.",
      "Optional: include context for changes made during the last revision."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "2024-06-01",
      "9.99",
      "AB-12345",
      "123456789",
      "Smith, John",
      "john@example.com"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Remarks",
      "Additional Notes",
      "Detailed Description",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Age",
      "Email"
    ],
    "explanation": "This semantic type captures free-form narrative text commonly used for descriptions, comments, notes, and remarks. It is intentionally broad and relies primarily on header semantics, with a conservative content pattern to avoid overmatching structured identifiers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:19.129277"
  },
  {
    "resultType": "generated",
    "semanticType": "frequency",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9]{2,}[A-Za-z0-9'\"/\\-]*[.!?,;:]*\\s+[A-Za-z0-9]{2,}[A-Za-z0-9'\"/\\-]*[.!?,;:]*\\s+[A-Za-z0-9]{2,}[A-Za-z0-9'\"/\\-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9250,
    "headerPatterns": [
      {
        "regExp": "(?i).*(long|detailed).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Description"
        ],
        "negativeExamples": [
          "Item Description"
        ]
      },
      {
        "regExp": "(?i).*(additional|general).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Additional Comments"
        ],
        "negativeExamples": [
          "Comments"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|cmts|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Item Desc"
        ],
        "negativeExamples": [
          "Design Code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "Email"
        ]
      }
    ],
    "positiveContentExamples": [
      "Order processed successfully today.",
      "Customer reported intermittent issues.",
      "Please refer to the attached guide.",
      "Requires manager approval before shipment.",
      "Updated during quarterly maintenance.",
      "Payment pending due to verification.",
      "Notes include special handling instructions.",
      "Replaced unit under warranty period."
    ],
    "negativeContentExamples": [
      "Needs review",
      "Waiting",
      "Price: $10",
      "2024-05-03",
      "OK",
      "N/A",
      "Pending approval",
      "Error 404"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Additional Comments",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "Quantity",
      "Code"
    ],
    "explanation": "This semantic type captures free-form, multi-word text content typical of narrative descriptions, notes, or comments. The value pattern emphasizes at least three word tokens to reduce collisions with short identifiers, dates, or codes, and is intentionally broad but constrained to avoid trivial single-token strings. Use this type for columns where unstructured explanatory text is expected.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:20.306414"
  },
  {
    "resultType": "generated",
    "semanticType": "treatment",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'()\\-&,/.:;!?%]{1,}\\b(\\s+[A-Za-z0-9][A-Za-z0-9'()\\-&,/.:;!?%]{0,}){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9350,
    "headerPatterns": [
      {
        "regExp": "(?i).*treatment.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Treatment Description"
        ],
        "negativeExamples": [
          "Treatment Code"
        ]
      },
      {
        "regExp": "(?i).*(treatment|procedure).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Procedure Notes"
        ],
        "negativeExamples": [
          "Procedure Date"
        ]
      },
      {
        "regExp": "(?i).*(free|unstructured|narrative).*(text|entry).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Narrative Text"
        ],
        "negativeExamples": [
          "Narrative Code"
        ]
      },
      {
        "regExp": "(?i).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "Status"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Patient reports mild headache after medication.",
      "Apply ointment twice daily for 7 days.",
      "No adverse reactions observed during the session.",
      "Increase dosage by 5 mg if symptoms persist.",
      "Wound cleaned; steri-strips applied; follow-up next week.",
      "Physical therapy focused on range-of-motion exercises.",
      "Advised rest, hydration, and over-the-counter analgesics.",
      "Referred to specialist; awaiting consultation notes."
    ],
    "negativeContentExamples": [
      "N/A",
      "None",
      "2023-09-15",
      "ID-45839",
      "See notes",
      "Completed",
      "OK",
      "100"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Treatment Description",
      "Procedure Notes",
      "Narrative Text",
      "Free Text Entry"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Status",
      "Quantity",
      "Code",
      "Name",
      "Number"
    ],
    "explanation": "This semantic type captures broad, unstructured narrative or explanatory text commonly found in description, notes, or comments fields. It is intended for free-form entries that may contain multiple words, punctuation, and mixed characters, rather than codes, identifiers, dates, or numeric-only values. The regex favors multi-word text to distinguish narrative content from short labels or single tokens.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:20.869220"
  },
  {
    "resultType": "generated",
    "semanticType": "language",
    "description": "A text field containing full language names written in English using alphabetic characters, typically in proper case, and optionally composed of multiple words separated by spaces or hyphens. It excludes numerical codes, abbreviations, and parenthetical qualifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]+([- ][A-Z][a-z]+){0,4}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9440,
    "headerPatterns": [
      {
        "regExp": "(?i).*spoken.*language.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Spoken Language Name"
        ],
        "negativeExamples": [
          "Spoken Language Code"
        ]
      },
      {
        "regExp": "(?i).*(preferred|primary|native).*language.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Preferred Language Name"
        ],
        "negativeExamples": [
          "Native Language Code"
        ]
      },
      {
        "regExp": "(?i).*customer.*language.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Language Name"
        ],
        "negativeExamples": [
          "Customer Language Code"
        ]
      },
      {
        "regExp": "(?i).*spoken.*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Spoken Language"
        ],
        "negativeExamples": [
          "Programming Language"
        ]
      },
      {
        "regExp": "(?i).*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Language"
        ],
        "negativeExamples": [
          "Language Code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "English",
      "Spanish",
      "Mandarin Chinese",
      "American Sign Language",
      "Old Norse",
      "Serbo-Croatian",
      "Western Frisian",
      "Middle High German"
    ],
    "negativeContentExamples": [
      "EN",
      "eng",
      "ENGLISH",
      "english",
      "English (UK)",
      "pt-BR",
      "Chinese2",
      "C++"
    ],
    "positiveHeaderExamples": [
      "Language",
      "Language Name",
      "Spoken Language",
      "Preferred Language Name",
      "Primary Spoken Language",
      "Customer Language",
      "Native Language"
    ],
    "negativeHeaderExamples": [
      "Language Code",
      "Country",
      "Dialect",
      "Programming Language",
      "Language Abbreviation",
      "ISO Language Code",
      "Locale",
      "Region"
    ],
    "explanation": "This semantic type identifies cells containing full human language names in English, written as one or more capitalized words and optionally including hyphenated compounds. It is intended for fields like user spoken language, preferred language, or document language descriptors, and explicitly excludes codes (e.g., EN, pt-BR), abbreviations, and values with parenthetical qualifiers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:21.278923"
  },
  {
    "resultType": "generated",
    "semanticType": "district",
    "description": "Portuguese district names written as proper nouns, typically one to three words, using standard Portuguese capitalization and diacritics, without abbreviations or special formatting characters. Values are expected to be official district names (e.g., Aveiro, Lisboa, Viana do Castelo), consisting only of letters and spaces.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "AVEIRO",
      "BEJA",
      "BRAGA",
      "BRAGAN\u00c7A",
      "CASTELO BRANCO",
      "COIMBRA",
      "\u00c9VORA",
      "FARO",
      "GUARDA",
      "LEIRIA",
      "LISBOA",
      "PORTALEGRE",
      "PORTO",
      "SANTAR\u00c9M",
      "SET\u00daBAL",
      "VIANA DO CASTELO",
      "VILA REAL",
      "VISEU"
    ],
    "backout": "^[A-Z\u00c0\u00c1\u00c2\u00c3\u00c7\u00c9\u00ca\u00cd\u00d3\u00d4\u00d5\u00da][a-z\u00e0\u00e1\u00e2\u00e3\u00e7\u00e9\u00ea\u00ed\u00f3\u00f4\u00f5\u00fa]+(\\s([dD][eE]|[dD][oO]|[dD][aA]|[dD][oO][sS]|[dD][aA][sS])\\s[A-Z\u00c0\u00c1\u00c2\u00c3\u00c7\u00c9\u00ca\u00cd\u00d3\u00d4\u00d5\u00da][a-z\u00e0\u00e1\u00e2\u00e3\u00e7\u00e9\u00ea\u00ed\u00f3\u00f4\u00f5\u00fa]+|\\s[A-Z\u00c0\u00c1\u00c2\u00c3\u00c7\u00c9\u00ca\u00cd\u00d3\u00d4\u00d5\u00da][a-z\u00e0\u00e1\u00e2\u00e3\u00e7\u00e9\u00ea\u00ed\u00f3\u00f4\u00f5\u00fa]+){0,2}$",
    "confidenceThreshold": 98,
    "priority": 9410,
    "headerPatterns": [
      {
        "regExp": "(?i).*(portuguese|portugal|pt).*(district|distrito).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Portuguese District"
        ],
        "negativeExamples": [
          "Portuguese Region"
        ]
      },
      {
        "regExp": "(?i).*(administrative|admin).*(district|distrito).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Administrative District"
        ],
        "negativeExamples": [
          "Administrative Region"
        ]
      },
      {
        "regExp": "(?i).*\\bdistrito\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Distrito"
        ],
        "negativeExamples": [
          "City"
        ]
      },
      {
        "regExp": "(?i).*\\bdist\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Dist"
        ],
        "negativeExamples": [
          "Dept"
        ]
      },
      {
        "regExp": "(?i).*district.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "District"
        ],
        "negativeExamples": [
          "Region"
        ]
      }
    ],
    "positiveContentExamples": [
      "Aveiro",
      "Braga",
      "Bragan\u00e7a",
      "Castelo Branco",
      "Coimbra",
      "\u00c9vora",
      "Porto",
      "Viana do Castelo"
    ],
    "negativeContentExamples": [
      "lisboa",
      "LISBOA",
      "Viana Do Castelo",
      "Setubal",
      "Porto, Portugal",
      "Coimbra-",
      "Castelo-Branco",
      "Braga 1"
    ],
    "positiveHeaderExamples": [
      "Distrito",
      "District",
      "Portuguese District",
      "Administrative District",
      "PT District",
      "District Name"
    ],
    "negativeHeaderExamples": [
      "Country",
      "Region",
      "City",
      "Province",
      "County",
      "Municipality",
      "District Code"
    ],
    "explanation": "This semantic type identifies Portuguese district names, represented as properly capitalized textual values with Portuguese diacritics and standard spacing, and no abbreviations or punctuation. It is suited for columns storing the district name of an address, region tagging, or geographic categorization within Portugal.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:23.195324"
  },
  {
    "resultType": "generated",
    "semanticType": "title",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9]{2,}\\b\\s+\\b[A-Za-z0-9]{2,}\\b\\s+\\b[A-Za-z0-9]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9080,
    "headerPatterns": [
      {
        "regExp": "(?i).*(project|order|ticket).*(description|notes|comments).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Project Description"
        ],
        "negativeExamples": [
          "Order Date"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|client).*(notes|comments).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Customer Notes"
        ],
        "negativeExamples": [
          "Client ID"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(desc|note).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer requested expedited shipping.",
      "Please deliver to the back entrance.",
      "Issue resolved after system reboot.",
      "Follow up scheduled for next Tuesday.",
      "Payment received in full on 05/12.",
      "This item requires special handling.",
      "Add a note for the warehouse team."
    ],
    "negativeContentExamples": [
      "High priority",
      "Pending review",
      "OK",
      "N/A",
      "Note #123",
      "2025-08-01",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Project Description",
      "Customer Notes",
      "Issue Comments",
      "Text",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "Status",
      "Quantity",
      "Code",
      "Phone"
    ],
    "explanation": "This semantic type captures free-form narrative fields such as descriptions, notes, comments, and other unstructured text. It is intentionally broad and relies heavily on header cues plus a minimal multi-word content heuristic to avoid overfitting.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:24.204252"
  },
  {
    "resultType": "generated",
    "semanticType": "population",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9.,;:'\\\"%&()@/\\- ]+[ ]+[A-Za-z0-9][A-Za-z0-9.,;:'\\\"%&()@/\\- ]+\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9270,
    "headerPatterns": [
      {
        "regExp": "(?i).*item.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Item Description"
        ],
        "negativeExamples": [
          "Item ID"
        ]
      },
      {
        "regExp": "(?i).*additional.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Additional Comments"
        ],
        "negativeExamples": [
          "Additional Cost"
        ]
      },
      {
        "regExp": "(?i).*(user|customer|internal).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "User Notes"
        ],
        "negativeExamples": [
          "User Name"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Desc"
        ],
        "negativeExamples": [
          "Product Code"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Remarks"
        ],
        "negativeExamples": [
          "Remittance"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Updated on 2021-08-15 after QA review.",
      "Notes: requires follow-up by team A.",
      "Customer reported intermittent failures during login.",
      "Handle edge-cases for null/empty input.",
      "Price adjusted by 5% due to promotion.",
      "See attached file for details (v2.3).",
      "This field captures narrative comments and explanations.",
      "Temporary workaround applied pending final fix."
    ],
    "negativeContentExamples": [
      "12345",
      "OK",
      "A-12345",
      "2021-07-01",
      "ID_9876",
      "N/A",
      "True",
      "Error:404"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Item Description",
      "User Notes",
      "Additional Comments",
      "Free Text",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Order Number",
      "Status Code",
      "Email",
      "Username"
    ],
    "explanation": "This semantic type targets free-text narrative fields commonly used for descriptions, notes, and comments. Detection relies heavily on header terminology while requiring content that typically contains multiple words with letters, digits, and punctuation. It is intentionally broad and assigned a high threshold and lower precedence to avoid conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:24.916093"
  },
  {
    "resultType": "generated",
    "semanticType": "id",
    "description": "A generic identifier token composed of letters and numbers with optional internal separators like underscores or hyphens. Tokens are typically 6\u201340 characters, avoid spaces and punctuation, and do not start or end with a separator.",
    "pluginType": "regex",
    "regexPattern": "(?<![A-Za-z0-9_-])[A-Za-z0-9][A-Za-z0-9_-]{4,38}[A-Za-z0-9](?![A-Za-z0-9_-])",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9050,
    "headerPatterns": [
      {
        "regExp": "(?i).*unique.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "Name"
        ]
      },
      {
        "regExp": "(?i).*(record|user|customer).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer ID"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Identifier"
        ],
        "negativeExamples": [
          "Description"
        ]
      },
      {
        "regExp": "(?i).*(primary|global).*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Global Identifier"
        ],
        "negativeExamples": [
          "Status"
        ]
      },
      {
        "regExp": "(?i).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "A1B2C3",
      "usr_12345",
      "9Z7Y6X",
      "INV-2023-09",
      "recID_0001",
      "X5-Alpha_19",
      "123ABC456",
      "KJ29_SD-84"
    ],
    "negativeContentExamples": [
      "-ABC123",
      "ABC123-",
      "__ID123",
      "ID 12345",
      "AB.CD-123",
      "A1-2",
      "ABC\u2014123",
      "ID#12345"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "Record ID",
      "User Identifier",
      "Primary ID",
      "Customer ID",
      "Global Identifier"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "Email",
      "Status",
      "Category",
      "Amount",
      "Code"
    ],
    "explanation": "This semantic type targets generic identifiers that function as stable keys or references across systems. It captures common ID tokens used for records, users, orders, and similar entities where the value is a compact, separator-safe string without spaces or punctuation other than underscores or hyphens. The pattern is intentionally constrained by allowed characters, interior separators, and length to reduce accidental matches with free text while remaining flexible across domains.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:24.941848"
  },
  {
    "resultType": "generated",
    "semanticType": "note",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9 ,.;:'\"()\\/-!?%&]{1,}[ ]+[A-Za-z][A-Za-z0-9 ,.;:'\"()\\/-!?%&]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9090,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|record|case|ticket).*(note|notes|comment|comments|description|desc).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "id_notes"
        ]
      },
      {
        "regExp": "(?i).*(internal|public|staff|agent).*(note|notes|comment|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_comments"
        ],
        "negativeExamples": [
          "comments_summary"
        ]
      },
      {
        "regExp": "(?i).*(remark|remarks|cmt|cmts|desc|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "designation"
        ]
      },
      {
        "regExp": "(?i).*(comment|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "commit_date"
        ]
      },
      {
        "regExp": "(?i).*note.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "notice"
        ]
      }
    ],
    "positiveContentExamples": [
      "Follow up with client next week.",
      "Damaged on arrival; issued refund.",
      "Call before 5 pm regarding delivery change.",
      "Customer requested gift wrap and no invoice.",
      "Left voicemail; awaiting response.",
      "Payment pending due to bank holiday.",
      "Please escalate to Tier 2 support.",
      "Shipment delayed by weather conditions."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "2024-06-01",
      "REF12345",
      "ID: 12345",
      "$19.99",
      "A-123-BC",
      "support@example.com"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "customer_notes",
      "internal_comments",
      "order_description",
      "remarks",
      "case_notes"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "email",
      "status_code",
      "total_amount",
      "birth_date",
      "product_name"
    ],
    "explanation": "This semantic type identifies free-form textual fields typically used for narrative notes, descriptions, comments, or remarks. Detection prioritizes column headers that explicitly reference notes, comments, descriptions, or remarks; content validation ensures multi-word textual entries rather than codes or identifiers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:25.171753"
  },
  {
    "resultType": "generated",
    "semanticType": "state",
    "description": "A text field containing US state names that follow standard English linguistic conventions with proper capitalization and spacing. The format represents official state designations as used in US government documentation and legal systems. Values are the full state names (e.g., \"California\", \"New York\"), not abbreviations or codes, and exclude territories and the District of Columbia.",
    "pluginType": "regex",
    "regexPattern": "\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9140,
    "headerPatterns": [
      {
        "regExp": "(?i).*us.*state.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*state.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*state.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Full Name"
        ],
        "negativeExamples": [
          "Country Name"
        ]
      },
      {
        "regExp": "(?i).*us.*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State"
        ],
        "negativeExamples": [
          "Status"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New York",
      "North Carolina",
      "South Dakota",
      "Rhode Island",
      "New Mexico",
      "West Virginia",
      "Massachusetts"
    ],
    "negativeContentExamples": [
      "new york",
      "NewYork",
      "Californi",
      "N. Carolina",
      "Puerto Rico",
      "District of Columbia",
      "North Dakota Territory",
      "Rhode  Island"
    ],
    "positiveHeaderExamples": [
      "State",
      "State Name",
      "US State",
      "US State Name",
      "State Full Name",
      "Billing State",
      "Shipping State Name"
    ],
    "negativeHeaderExamples": [
      "State Code",
      "Country",
      "County",
      "Province",
      "Region",
      "State Abbreviation",
      "Status",
      "Street"
    ],
    "explanation": "This semantic type identifies cells containing the full, properly capitalized names of the 50 US states. It is useful for address normalization, geographic segmentation, and validation where the complete state name is required instead of abbreviations or codes.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:25.419935"
  },
  {
    "resultType": "generated",
    "semanticType": "owner",
    "description": "A text field containing a complete personal name composed of exactly two tokens: a first name and a last name separated by a single space. Each token may contain letters, apostrophes, and hyphens, but no digits, titles, suffixes, or additional middle names.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]* [A-Za-z][A-Za-z'-]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9260,
    "headerPatterns": [
      {
        "regExp": "(?i).*(account|property|record).*owner.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Account Owner Name"
        ],
        "negativeExamples": [
          "Account Owner ID"
        ]
      },
      {
        "regExp": "(?i).*owner.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Owner Name"
        ],
        "negativeExamples": [
          "Owner ID"
        ]
      },
      {
        "regExp": "(?i).*(account|property|record).*owner.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Record Owner"
        ],
        "negativeExamples": [
          "Record Manager"
        ]
      },
      {
        "regExp": "(?i).*(ownr|owner_nm|ownr_nm|ownernm).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ownr_nm"
        ],
        "negativeExamples": [
          "ownr_id"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Full Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Mary-Jane OBrien",
      "D'Arcy Wretzky",
      "Anne-Marie O'Neil",
      "Peter O'Toole",
      "Jean-Luc Martin",
      "Sarah-Jane Lee",
      "Mark-Anthony Brown"
    ],
    "negativeContentExamples": [
      "John",
      "John  Smith",
      "Dr John Smith",
      "John Smith Jr",
      "John-Smith",
      "John Sm1th",
      "O'Connor",
      "Mary Jane Smith"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Owner Name",
      "Account Owner Name",
      "Property Owner",
      "Record Owner",
      "Account Owner"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Owner ID",
      "Account Owner ID",
      "Username",
      "Contact Email",
      "Manager Name"
    ],
    "explanation": "This semantic type detects two-token personal names intended to represent an 'owner', with exactly one space separating first and last names. It allows letters, internal apostrophes, and hyphens in each token and excludes titles, suffixes, numerals, or additional middle names. Typical use cases include columns storing the full name of an account, property, or record owner.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:25.512231"
  },
  {
    "resultType": "generated",
    "semanticType": "code",
    "description": "A unique string following a pattern that typically combines letters and numbers in various formats to ensure distinctiveness. The pattern generally allows alphanumeric characters with optional separators like underscores or hyphens, matching patterns like ^[A-Z0-9_-]+$.",
    "pluginType": "regex",
    "regexPattern": "\\b[0-9A-Z]([0-9A-Z_-]*[0-9A-Z])?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9230,
    "headerPatterns": [
      {
        "regExp": "(?i).*unique.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "Unique Name"
        ]
      },
      {
        "regExp": "(?i).*record.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Record ID"
        ],
        "negativeExamples": [
          "Record Name"
        ]
      },
      {
        "regExp": "(?i).*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Identifier"
        ],
        "negativeExamples": [
          "Identity"
        ]
      },
      {
        "regExp": "(?i).*\\bid\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "Identifier"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Code"
        ],
        "negativeExamples": [
          "Status"
        ]
      }
    ],
    "positiveContentExamples": [
      "A12B",
      "USER_001",
      "INV-2024-07",
      "X9",
      "CODE_ABC123",
      "PRJ-ALPHA_09",
      "Z99Z99",
      "BATCH_2025-Q3"
    ],
    "negativeContentExamples": [
      "abc-123",
      "_ID123",
      "ABC-",
      "123 456",
      "ID#123",
      "ABC.123",
      "123/456",
      "-CODE1"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "Record ID",
      "User UID",
      "Customer Identifier",
      "Product Code",
      "Global ID"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "Status",
      "Amount",
      "Email",
      "Phone Number",
      "Address"
    ],
    "explanation": "This semantic type detects general-purpose identifiers composed of uppercase letters and digits with optional internal underscores or hyphens, avoiding spaces and special symbols. It is useful for classifying columns that store unique record or entity codes when specific domain constraints are not known.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:26.399619"
  },
  {
    "resultType": "generated",
    "semanticType": "comment",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'&\\-/\\.#,();:!?]+(\\s+[A-Za-z0-9][A-Za-z0-9'&\\-/\\.#,();:!?]+)+\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9200,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*comment.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(issue|ticket).*description.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "ticket_number"
        ]
      },
      {
        "regExp": "(?i).*(feedback|remark|remarks|narrative|annotation).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "feedback"
        ],
        "negativeExamples": [
          "feature_flag"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmt|cmts|note|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "node_id"
        ]
      },
      {
        "regExp": "(?i).*comment.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment"
        ],
        "negativeExamples": [
          "commit_hash"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review by Friday.",
      "See attached for details.",
      "Customer reported a leak in unit 4B.",
      "Updated settings resolved the issue.",
      "Not applicable; duplicate entry.",
      "Follow up scheduled next week.",
      "Delivery attempted 2x; left at reception.",
      "Works as expected, thanks!"
    ],
    "negativeContentExamples": [
      "OK",
      "12345",
      "2024-08-10",
      "$19.99",
      "INV-12345",
      "user@example.com",
      "http://example.com/docs",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Customer Comments",
      "Issue Description",
      "Feedback",
      "Remarks",
      "Narrative"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Order ID",
      "Ticket Number",
      "Amount",
      "Status",
      "Email"
    ],
    "explanation": "This semantic type targets free-form narrative fields commonly labeled as comments, notes, or descriptions. Detection relies primarily on header semantics supplemented by a content pattern indicative of multi-word free text, reducing collisions with identifiers, codes, dates, and single-token values.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:27.730775"
  },
  {
    "resultType": "generated",
    "semanticType": "country",
    "description": "A text string containing English letters and spaces representing proper country names in the English language. Values typically consist of one to eight capitalized words with optional lowercase connectors such as of, and, the.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]+(( (of|and|the) [A-Z][a-z]+)|( [A-Z][a-z]+)){0,6}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9130,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(country|nation)\\b.*\\b(name)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Country Name"
        ],
        "negativeExamples": [
          "Country Code"
        ]
      },
      {
        "regExp": "(?i).*\\b(country)\\b.*\\b(of|for)\\b.*\\b(residence|origin|citizenship)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Country of Residence"
        ],
        "negativeExamples": [
          "State"
        ]
      },
      {
        "regExp": "(?i).*\\b(billing|shipping|home|customer)\\b.*\\b(country)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Billing Country"
        ],
        "negativeExamples": [
          "Country Code"
        ]
      },
      {
        "regExp": "(?i).*\\b(ctry|cntry)\\b.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "cust_ctry"
        ],
        "negativeExamples": [
          "country_code"
        ]
      },
      {
        "regExp": "(?i).*country.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Country"
        ],
        "negativeExamples": [
          "City"
        ]
      }
    ],
    "positiveContentExamples": [
      "United States",
      "United Kingdom",
      "South Africa",
      "New Zealand",
      "The Netherlands",
      "Republic of Korea",
      "Papua New Guinea",
      "Bosnia and Herzegovina"
    ],
    "negativeContentExamples": [
      "USA",
      "U.S.A.",
      "United-States",
      "Bosnia & Herzegovina",
      "Cote d'Ivoire",
      "United States 2",
      "TheNetherlands",
      "New  Zealand"
    ],
    "positiveHeaderExamples": [
      "Country",
      "Country Name",
      "Nation",
      "Country of Residence",
      "Billing Country",
      "Shipping Country",
      "Customer Country",
      "Nation Name"
    ],
    "negativeHeaderExamples": [
      "Country Code",
      "State",
      "City",
      "Nationality",
      "County",
      "Region",
      "Province",
      "Country_ID"
    ],
    "explanation": "This semantic type targets full country names written with English letters and spaces, typically in title case, optionally including lowercase connectors like of, and, the. It is intended for columns storing country names rather than codes or abbreviations.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:27.754907"
  },
  {
    "resultType": "generated",
    "semanticType": "height",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b\\w{2,}\\s+\\w{2,}\\s+\\w{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9310,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|product|item).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*(text|field|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description_text"
        ],
        "negativeExamples": [
          "product_text"
        ]
      },
      {
        "regExp": "(?i).*(desc|remark|comment|note|memo).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "record_code"
        ]
      },
      {
        "regExp": "(?i).*(details|feedback|observations).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_feedback"
        ],
        "negativeExamples": [
          "user_id"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent login failures.",
      "Use for internal testing only; not for production.",
      "Package arrived damaged with torn outer box.",
      "Requires manager approval before deployment.",
      "Delayed due to weather conditions at origin.",
      "Please contact support if the issue persists.",
      "No known allergies reported by the patient.",
      "Includes installation guide and warranty card."
    ],
    "negativeContentExamples": [
      "OK",
      "Pending",
      "Approved 2023-05-01",
      "$19.99",
      "ID-12345",
      "2023-05-01",
      "A B",
      "Height: 180cm"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Customer Notes",
      "Additional Comments",
      "Remarks",
      "Feedback"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Amount",
      "Email",
      "Number",
      "Name"
    ],
    "explanation": "This semantic type targets free-form descriptive text fields commonly used for narrative content such as descriptions, notes, comments, and feedback. The content pattern prefers multi-word entries to reduce false positives from identifiers and codes, while header patterns prioritize typical naming conventions for descriptive fields. A high confidence threshold and priority are used to avoid conflicts with more specific structured types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:27.859231"
  },
  {
    "resultType": "generated",
    "semanticType": "start",
    "description": "A numeric field containing timestamp values that are 10-digit integers representing seconds since the Unix epoch (1970-01-01T00:00:00Z). These values provide second-level precision commonly used in Unix systems, APIs, and standard timestamp applications.",
    "pluginType": "regex",
    "regexPattern": "\\b[0-9]{10}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9380,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\bunix\\b.*\\b(timestamp|ts)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Epoch Time"
        ]
      },
      {
        "regExp": "(?i).*\\bepoch\\b.*\\b(seconds|secs|time|timestamp|ts)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Unix Timestamp"
        ]
      },
      {
        "regExp": "(?i).*\\bunix[_ ]?ts\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unix_ts"
        ],
        "negativeExamples": [
          "Timestamp"
        ]
      },
      {
        "regExp": "(?i).*\\bepoch[_ ]?sec(s)?\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "epoch_secs"
        ],
        "negativeExamples": [
          "Epoch Time"
        ]
      },
      {
        "regExp": "(?i).*\\btimestamp\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      }
    ],
    "positiveContentExamples": [
      "0000000000",
      "1000000000",
      "1234567890",
      "1451606400",
      "1609459200",
      "1672531200",
      "1735689600",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "1609459200.0",
      "-1609459200",
      "1,609,459,200",
      "160945920",
      "01609459200",
      "1609459200Z",
      "1609 459200"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "unix_ts",
      "ts_epoch",
      "epoch_secs",
      "timestamp_seconds",
      "unix_epoch_seconds"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Created At",
      "Event Time",
      "Epoch Millis",
      "ISO Date",
      "Datestamp"
    ],
    "explanation": "This semantic type detects 10-digit integer values representing Unix epoch timestamps in seconds. It is useful for identifying raw epoch-second fields in logs, telemetry, API payloads, and datasets where times are stored as numeric seconds rather than formatted datetimes. The header patterns emphasize Unix/epoch and seconds-based terminology, while the value pattern strictly enforces 10 numeric digits.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:28.657536"
  },
  {
    "resultType": "generated",
    "semanticType": "description",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 ,.;:'\"()\\-\\/&!?%#]{1,}[ ]+[A-Za-z0-9][A-Za-z0-9 ,.;:'\"()\\-\\/&!?%#]{3,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9010,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|service).*(description|desc).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(order|record|customer).*(comments|notes).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "order_comments"
        ],
        "negativeExamples": [
          "order_date"
        ]
      },
      {
        "regExp": "(?i).*(details|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "details"
        ],
        "negativeExamples": [
          "quantity"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmt|cmts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "code"
        ]
      },
      {
        "regExp": "(?i).*(summary|overview).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "summary"
        ],
        "negativeExamples": [
          "status"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "id"
        ]
      }
    ],
    "positiveContentExamples": [
      "Sturdy steel frame for outdoor use",
      "Color: red; size: medium",
      "High-quality, BPA-free plastic.",
      "Please handle with care",
      "Pack of 12, limited edition",
      "User-provided notes go here",
      "Includes 2-year warranty",
      "For internal use only"
    ],
    "negativeContentExamples": [
      "123456",
      "2024-07-15",
      "$19.99",
      "SKU-AB12",
      "OK",
      "08:30",
      "TRUE",
      "AB CD"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Item Notes",
      "Order Comments",
      "Details",
      "Summary"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Code",
      "Number",
      "Timestamp"
    ],
    "explanation": "This type identifies freeform descriptive text fields commonly used for narrative descriptions, notes, and comments. Content matching emphasizes multi-word natural language with spaces and common punctuation to avoid conflating codes, dates, or single-token identifiers. Header recognition follows a top-down strategy prioritizing domain-specific variants (e.g., product_description) down to the primitive term 'description'. High threshold and priority reduce conflicts due to the broad nature of descriptive text.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:28.745357"
  },
  {
    "resultType": "generated",
    "semanticType": "result",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'()/_+-]*\\s+[A-Za-z][A-Za-z0-9 ,.;:!?'\u000028\u0000 29()/_+-]*[A-Za-z0-9]",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 99,
    "priority": 9360,
    "headerPatterns": [
      {
        "regExp": "(?i).*(result|outcome).*(description|notes|comments|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "result_description"
        ],
        "negativeExamples": [
          "result_code"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*(details|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments_text"
        ],
        "negativeExamples": [
          "comment_count"
        ]
      },
      {
        "regExp": "(?i).*(additional|reviewer|internal).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "reviewer_comments"
        ],
        "negativeExamples": [
          "reviewer_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|notes|cmt|memo|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "discount"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "content"
        ]
      }
    ],
    "positiveContentExamples": [
      "Delivered on time and within budget; no outstanding issues.",
      "User reported intermittent errors when saving the form.",
      "Please review and approve by Friday.",
      "The results indicate a 12% increase quarter-over-quarter.",
      "Notes: Reboot resolved the connectivity problem.",
      "Customer requested a refund due to delayed shipment.",
      "Outcome: Passed all validation checks after patch v2.1.",
      "This item requires follow-up with the vendor next week."
    ],
    "negativeContentExamples": [
      "2024-07-01",
      "19.99",
      "ID-998877",
      "OK",
      "SKU_ABC123",
      "http://example.com",
      "Y/N",
      "Result:OK"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Details",
      "Additional Notes",
      "Reviewer Comments",
      "Summary",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Total",
      "Quantity",
      "SKU",
      "Result Code",
      "Status"
    ],
    "explanation": "This semantic type targets free-form narrative fields commonly used for descriptions, notes, and comments. It favors multi-word, human-readable text containing letters with optional numbers and punctuation, while avoiding short codes, identifiers, dates, or numeric-only values. Use it for columns where unstructured explanatory text is expected rather than structured identifiers or metrics.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:32.134805"
  },
  {
    "resultType": "generated",
    "semanticType": "rank",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'_\\-]{1,}\\b[ \\t,;:.!?]+\\b[A-Za-z0-9][A-Za-z0-9'_\\-]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9000,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|customer).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(internal|private).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "internal_id"
        ]
      },
      {
        "regExp": "(?i).*(user|agent|staff).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_comments"
        ],
        "negativeExamples": [
          "user_email"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|remark|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached report by EOD.",
      "Updated status: in progress; awaiting approval.",
      "User reported error code 502 during checkout.",
      "The quick brown fox jumps over 13 lazy dogs.",
      "Notes: see section 4.2 for details.",
      "Contact support if this persists.",
      "Accepted, schedule for next sprint.",
      "The issue was resolved after clearing the cache."
    ],
    "negativeContentExamples": [
      "123456",
      "AB-12345",
      "2024-08-11",
      "support@company.com",
      "N/A",
      "OK",
      "Pending",
      "ID7783"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Internal Notes",
      "User Comments",
      "Text",
      "Additional Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Order Number",
      "Customer Name",
      "Status",
      "Code",
      "Zip Code"
    ],
    "explanation": "This semantic type represents free-form narrative text commonly found in description, notes, or comments fields. Content is characterized by multiple words and optional punctuation, rather than strict codes or numeric formats. The value pattern requires at least two word-like tokens separated by space or punctuation to avoid misclassifying identifiers or codes. Header patterns prioritize domain-specific description/comment fields down to the primitive concept of generic text. The high threshold and low-priority ranking reduce conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:32.646455"
  },
  {
    "resultType": "generated",
    "semanticType": "parent",
    "description": "A text field containing complete names that follow the pattern ^[A-Za-z'-]+ [A-Za-z'-]+$ with first and last names separated by a single space. The format allows alphabetic characters, apostrophes, and hyphens in both name components but excludes numerical digits, titles, or multiple middle names.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]+(['-][A-Za-z]+)* [A-Za-z]+(['-][A-Za-z]+)*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9370,
    "headerPatterns": [
      {
        "regExp": "(?i).*parent.*name.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Parent Name"
        ],
        "negativeExamples": [
          "Parent Email"
        ]
      },
      {
        "regExp": "(?i).*guardian.*name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Guardian Name"
        ],
        "negativeExamples": [
          "Guardian Phone"
        ]
      },
      {
        "regExp": "(?i).*person.*name.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Person Name"
        ],
        "negativeExamples": [
          "Person ID"
        ]
      },
      {
        "regExp": "(?i).*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Full Name"
        ],
        "negativeExamples": [
          "Full Address"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Mary-Jane Clarke",
      "D'Angelo Rossi",
      "Jean-Luc Martin",
      "O'Brien Kelly",
      "Aisha Al-Hadi",
      "Liam O'Sullivan",
      "Chloe-Anne Turner"
    ],
    "negativeContentExamples": [
      "John  Smith",
      "Dr John Smith",
      "John Smith Jr.",
      "John",
      "John-Smith",
      "J0hn Smith",
      "Mary Jane Watson",
      "Smith, John"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Parent Name",
      "Guardian Name",
      "Primary Contact Name",
      "Emergency Contact Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Parent Email",
      "Guardian Phone",
      "Username",
      "Account Name",
      "Billing Contact"
    ],
    "explanation": "Identifies two-token person names comprising letters with optional internal hyphens or apostrophes, separated by a single space. Useful for columns storing full names without titles, suffixes, or middle names, such as parent or guardian names in school or intake forms.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:32.646815"
  },
  {
    "resultType": "generated",
    "semanticType": "min",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}\\b\\s+\\b[A-Za-z]{3,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9320,
    "headerPatterns": [
      {
        "regExp": "(?i).*(comment|comments|description|desc|notes|note|remark|remarks).*(text|body|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description_text"
        ],
        "negativeExamples": [
          "price_text"
        ]
      },
      {
        "regExp": "(?i).*(product|item|customer).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(long|free|additional|extended).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "extended_description"
        ],
        "negativeExamples": [
          "long_id"
        ]
      },
      {
        "regExp": "(?i).*(free[ _]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "text_format"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Package arrived in good condition, no visible damage.",
      "Customer requested expedited shipping for the replacement item.",
      "The device intermittently restarts when the battery is below 20%.",
      "Instructions: reboot the server and clear the cache before retrying.",
      "Please include a signed copy of the agreement with your return.",
      "Notes: color may vary slightly due to screen settings.",
      "This account was closed at the client's request in March.",
      "Additional comments: payment will be processed within 3\u20135 business days."
    ],
    "negativeContentExamples": [
      "ID12345",
      "2025-08-11",
      "A1B2C3",
      "john.doe@example.com",
      "OK",
      "$19.99",
      "Stage-2",
      "12345 Unit 7"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Customer Notes",
      "Review Comments",
      "Additional Remarks",
      "Item Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Zip Code",
      "Status",
      "Account Number",
      "SKU"
    ],
    "explanation": "This semantic type targets free-form, narrative-style text fields typically used for descriptions, comments, notes, and remarks. The value pattern requires at least two alphabetic words (3+ characters each) separated by whitespace, which helps differentiate rich text from codes, single tokens, dates, or numeric-only entries. Header patterns prioritize combined terms like description/comments with text/body/details, followed by entity-specific and adjective variants, and finally the primitive 'text' term for broad matching. High threshold and priority are set to avoid conflicts with more specific structured types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:33.567942"
  },
  {
    "resultType": "generated",
    "semanticType": "year",
    "description": "A text field containing year ranges using two four-digit years separated by a hyphen or slash, such as 1999-2000 or 2010/2010. The format represents temporal spans with a consistent separator and no surrounding text or spaces.",
    "pluginType": "regex",
    "regexPattern": "\\b\\d{4}[-/]\\d{4}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 96,
    "priority": 9150,
    "headerPatterns": [
      {
        "regExp": "(?i).*fiscal.*year.*range.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Fiscal Year Range"
        ],
        "negativeExamples": [
          "Fiscal Year"
        ]
      },
      {
        "regExp": "(?i).*year.*range.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Year Range"
        ],
        "negativeExamples": [
          "Year"
        ]
      },
      {
        "regExp": "(?i).*date.*range.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Date Range"
        ],
        "negativeExamples": [
          "Single Date"
        ]
      },
      {
        "regExp": "(?i).*(yrs|yr)[-_ ]*(rng|range).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "yrs_rng"
        ],
        "negativeExamples": [
          "yr"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Date"
        ],
        "negativeExamples": [
          "Month"
        ]
      }
    ],
    "positiveContentExamples": [
      "1999-2000",
      "2010/2010",
      "1985-1989",
      "2001/2002",
      "2020-2024",
      "1900/1901",
      "2015-2016",
      "1990/1999"
    ],
    "negativeContentExamples": [
      "1999 - 2000",
      "1999_2000",
      "199/2000",
      "1999/200",
      "FY1999-2000",
      "1999\u20132000",
      "2010-2010Q1",
      "201a/201b"
    ],
    "positiveHeaderExamples": [
      "Year Range",
      "Years",
      "Date Range",
      "Fiscal Year Range",
      "Reporting Years",
      "Coverage Years",
      "Academic Year Range",
      "License Date Range"
    ],
    "negativeHeaderExamples": [
      "Year",
      "Month",
      "Single Date",
      "Start Year",
      "Reporting Period",
      "Event Date",
      "Year Code",
      "Quarter"
    ],
    "explanation": "This semantic type identifies strings that represent a range of years using two four-digit numbers separated by either a hyphen or a slash, without spaces or additional characters. It is useful for fields denoting coverage periods, fiscal spans, or academic years expressed as YYYY-YYYY or YYYY/YYYY.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:35.130713"
  },
  {
    "resultType": "generated",
    "semanticType": "city",
    "description": "A text string containing letters, spaces, and occasional punctuation marks representing proper nouns for municipal locations.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff]*\\.?([ \\-'][A-Z][A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u00ff]*\\.?){0,4}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9190,
    "headerPatterns": [
      {
        "regExp": "(?i).*(shipping|billing|mailing|home|office).*city.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "shipping_city"
        ],
        "negativeExamples": [
          "shipping_country"
        ]
      },
      {
        "regExp": "(?i).*(city|town).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "city_name"
        ],
        "negativeExamples": [
          "country_name"
        ]
      },
      {
        "regExp": "(?i).*(municipality|village|town|city).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "municipality"
        ],
        "negativeExamples": [
          "province"
        ]
      },
      {
        "regExp": "(?i).*(address|addr).*city.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "addr_city"
        ],
        "negativeExamples": [
          "addr_zip"
        ]
      },
      {
        "regExp": "(?i).*location.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Location"
        ],
        "negativeExamples": [
          "Latitude"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 88,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "New York",
      "S\u00e3o Paulo",
      "St. Louis",
      "Qu\u00e9bec City",
      "Ho Chi Minh City",
      "O'Fallon",
      "D'Iberville",
      "Los \u00c1ngeles"
    ],
    "negativeContentExamples": [
      "New York, NY",
      "City of London",
      "Paris 75001",
      "St.Louis",
      "San Jose/Santa Clara",
      "Seattle, Washington",
      "New York City #1",
      "Fort-de-France"
    ],
    "positiveHeaderExamples": [
      "City",
      "Town",
      "Location",
      "Municipality",
      "Shipping City",
      "City Name",
      "Address City"
    ],
    "negativeHeaderExamples": [
      "Country",
      "State",
      "ZIP Code",
      "Province",
      "Region",
      "Address Line",
      "Latitude"
    ],
    "explanation": "This semantic type identifies values that appear to be proper names of municipal places (cities, towns, villages). The pattern allows multiple capitalized tokens separated by spaces, apostrophes, or hyphens, and supports common abbreviations with trailing periods (e.g., St.). It is intended for generic city/town fields in addresses or locations and is conservative about including only alphabetic tokens with limited punctuation.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:38.175911"
  },
  {
    "resultType": "generated",
    "semanticType": "notes",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9]{2,}\\b[ \\t]+\\b[A-Za-z0-9]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9330,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_name"
        ]
      },
      {
        "regExp": "(?i).*issue.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "issue_id"
        ]
      },
      {
        "regExp": "(?i).*order.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_comments"
        ],
        "negativeExamples": [
          "order_count"
        ]
      },
      {
        "regExp": "(?i).*desc.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*comment.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "general_comment"
        ],
        "negativeExamples": [
          "user_id"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver to the side door; leave package if no answer.",
      "Customer reported intermittent errors after update 2.3.1.",
      "Follow up next week; call before 10 AM.",
      "N/A \u2013 see ticket #45219 for full context.",
      "Invoice disputed due to duplicate charge on 2024-09-14.",
      "Works as expected. No further action required.",
      "Primary contact prefers email over phone.",
      "Returned item: packaging damaged, unit intact."
    ],
    "negativeContentExamples": [
      "OK",
      "Done",
      "N/A",
      "2024-09-14",
      "12345",
      "Note:",
      "Y",
      "\u2014"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Customer Notes",
      "Order Comments",
      "Issue Description",
      "Product Desc",
      "General Comment"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Invoice Number",
      "Customer Name",
      "Status Code"
    ],
    "explanation": "This semantic type detects free-form narrative or comment-style text commonly found in notes, descriptions, and comments fields. The value pattern requires at least two word tokens separated by whitespace, which helps distinguish narrative text from single-word labels, IDs, dates, or codes. A high confidence threshold and low-priority ordering reduce conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:39.778158"
  },
  {
    "resultType": "generated",
    "semanticType": "location",
    "description": "A comma-separated latitude and longitude pair with optional leading sign and fractional component. The latitude is one or two digits, the longitude is one to three digits (commonly with an optional leading 1), each optionally followed by a decimal fraction: -?\\d{1,2}(\\.\\d+)?,\\s*-?1?\\d{1,2}(\\.\\d+)?.",
    "pluginType": "regex",
    "regexPattern": "\\b-?\\d{1,2}(\\.\\d+)?,\\s*-?1?\\d{1,2}(\\.\\d+)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9110,
    "headerPatterns": [
      {
        "regExp": "(?i).*gps.*coordinate.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "GPS Coordinates"
        ],
        "negativeExamples": [
          "Longitude"
        ]
      },
      {
        "regExp": "(?i).*(latitude.*longitude|lat.*long).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Lat Long"
        ],
        "negativeExamples": [
          "Address"
        ]
      },
      {
        "regExp": "(?i).*(coordinate.*pair|pair.*coordinate).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Coordinate Pair"
        ],
        "negativeExamples": [
          "City"
        ]
      },
      {
        "regExp": "(?i).*(geo|map).*coordinate.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Map Coordinates"
        ],
        "negativeExamples": [
          "Zip Code"
        ]
      },
      {
        "regExp": "(?i).*coordinate.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Coordinates"
        ],
        "negativeExamples": [
          "Location Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "37.7749,-122.4194",
      "-33.8688,151.2093",
      "51.5074,-0.1278",
      "40.7128,-74.0060",
      "-12.0464,-77.0428",
      "0.0000,0.0000",
      "9.8,10",
      "-7,120.5"
    ],
    "negativeContentExamples": [
      "100.0,-122.4194",
      "37.7749 -122.4194",
      "-33.8688;151.2093",
      "51.5074,-0.1278W",
      "N40.7128, W74.0060",
      "-12.0464 / -77.0428",
      "89.999,-180.000A",
      "37.7749,-0122.4194"
    ],
    "positiveHeaderExamples": [
      "Coordinates",
      "Lat Long",
      "GPS Coordinates",
      "Latitude Longitude",
      "Lat_Long",
      "Geo Coordinates",
      "Map Coordinates",
      "LatLong"
    ],
    "negativeHeaderExamples": [
      "Latitude",
      "Longitude",
      "Address",
      "City",
      "Zip Code",
      "Country",
      "Location Name",
      "GPS Time"
    ],
    "explanation": "Identifies values that are latitude, longitude coordinate pairs separated by a comma, with optional leading sign and decimals. Useful for mapping, geospatial joins, and location-based analytics where both latitude and longitude are stored in a single field.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:42.228297"
  },
  {
    "resultType": "generated",
    "semanticType": "domain",
    "description": "A text field containing URLs that follow RFC 3986 standards with protocol schemes, domain names, and optional paths or parameters. The format represents complete web addresses using standard URI syntax for resource identification and access across internet and network systems.",
    "pluginType": "regex",
    "regexPattern": "\\b(https|http|ftp)://([A-Za-z0-9-]+\\.)+[A-Za-z]{2,63}(:[0-9]{2,5})?(/[A-Za-z0-9._~!$&'()*+,;=:@%/-]*)?(\\?[A-Za-z0-9._~!$&'()*+,;=:@%/?-]*)?(#[A-Za-z0-9._~!$&'()*+,;=:@%/?-]*)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9340,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|account|client).*(website|web[ _]?address|url).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_website_url"
        ],
        "negativeExamples": [
          "email_address"
        ]
      },
      {
        "regExp": "(?i).*(website|web[ _]?address|homepage).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Website"
        ],
        "negativeExamples": [
          "domain_name"
        ]
      },
      {
        "regExp": "(?i).*(page|target|landing).*(url|link).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "landing_page_url"
        ],
        "negativeExamples": [
          "page_title"
        ]
      },
      {
        "regExp": "(?i).*(uri|url).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "URL"
        ],
        "negativeExamples": [
          "file_path"
        ]
      },
      {
        "regExp": "(?i).*url.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_url"
        ],
        "negativeExamples": [
          "server_address"
        ]
      }
    ],
    "positiveContentExamples": [
      "https://www.example.com",
      "http://example.org/path",
      "https://sub.domain.co.uk/page?id=123&ref=abc",
      "http://example.com:8080/api/v1/resource",
      "https://example.io/docs/index.html#section2",
      "ftp://files.example.net/downloads/archive.tar.gz",
      "https://blog.example.com/posts/2025/07/27?utm_source=newsletter",
      "http://media.example.tv/video.mp4"
    ],
    "negativeContentExamples": [
      "www.example.com",
      "https:/example.com",
      "https://example",
      "http://example .com",
      "file:///var/www/index.html",
      "https://example..com",
      "https://exa_mple.com",
      "mailto:support@example.com"
    ],
    "positiveHeaderExamples": [
      "URL",
      "Website",
      "Web Address",
      "Homepage URL",
      "Product Page URL",
      "Target Link",
      "Landing Page"
    ],
    "negativeHeaderExamples": [
      "Domain Name",
      "Email Address",
      "File Path",
      "Hostname",
      "Page Title",
      "Server Address"
    ],
    "explanation": "This semantic type identifies full web URLs that include a scheme (http, https, or ftp), a valid domain with at least one dot and alphabetic TLD, and optional port, path, query, and fragment components. It is suitable for columns storing website links such as landing pages, product URLs, or downloadable resources. It does not cover bare domain names, email addresses, or local file paths.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:43.193074"
  },
  {
    "resultType": "generated",
    "semanticType": "order",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'()-]{2,}\\b[ ]+\\b[A-Za-z][A-Za-z0-9'()-]{2,}\\b([ ,.;:!?][A-Za-z0-9'()\\-]+){0,10}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9490,
    "headerPatterns": [
      {
        "regExp": "(?i).*order.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmt|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "id"
        ]
      },
      {
        "regExp": "(?i).*(free[ _-]?text|long[ _-]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "text_id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver to the side entrance after 5 pm.",
      "Customer reported a loose handle on arrival.",
      "Use gift wrap and include a handwritten note.",
      "Item was missing screws; requesting replacements.",
      "Leave package with concierge if recipient is unavailable.",
      "Installation instructions included in attached manual.",
      "Shipment delayed due to weather; notify client."
    ],
    "negativeContentExamples": [
      "1234567890",
      "$49.99",
      "2024-09-01",
      "ID: 12345",
      "AB-123-XY",
      "OK",
      "Q3 2024",
      "SKU-000123"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "order_description",
      "free_text",
      "remarks",
      "long_text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "item_code",
      "quantity",
      "order_id",
      "ship_date"
    ],
    "explanation": "This semantic type captures unstructured, narrative-style free-text content commonly used for descriptions, notes, remarks, and comments. It is recognized primarily by headers indicating descriptive text and by content that contains multiple words and natural punctuation, rather than strict codes, dates, or numeric identifiers. Due to its broad nature, a higher confidence threshold and priority are used to reduce conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:45.958005"
  },
  {
    "resultType": "generated",
    "semanticType": "field",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[0-9A-Za-z][0-9A-Za-z'()\\-]{1,}( [0-9A-Za-z][0-9A-Za-z'()\\-]{1,})+[ 0-9A-Za-z,.;:!?'\"()\\-/_\\[\\]]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9100,
    "headerPatterns": [
      {
        "regExp": "(?i).*(free|unstructured).*text.*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(detailed|internal|customer).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Internal Notes"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes|remarks|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|rem|remark|cmt|cmts|note).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Remarks"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please provide your availability for next week.",
      "This item shows minor wear on the edges, see photos.",
      "Customer reported intermittent connectivity issues.",
      "Payment will be processed after approval by finance.",
      "Use caution: fragile components inside the package.",
      "Steps to reproduce: open the app, login, and tap Save.",
      "Notes: shipment delayed due to weather conditions.",
      "Additional context: values were normalized before import."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "123456",
      "2024-07-15",
      "A_B",
      "#1",
      "Yes",
      "SKU-12345"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Free Text Description",
      "Internal Notes",
      "Detailed Description",
      "Text",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Amount",
      "Quantity",
      "SKU",
      "Invoice Number"
    ],
    "explanation": "This semantic type identifies unstructured, free-form text fields typically used for narrative descriptions, comments, notes, and explanatory context. It is intentionally broad and relies on multi-word content with allowed punctuation to distinguish it from structured identifiers or codes. High threshold and low priority are used to minimize conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:45.958518"
  },
  {
    "resultType": "generated",
    "semanticType": "family",
    "description": "A text field containing family names that typically follow proper name formatting conventions and use alphabetic characters with possible apostrophes, hyphens, or spaces for compound surnames. The format allows international characters and diacritical marks but excludes numerical digits, titles, or given name components.",
    "pluginType": "regex",
    "regexPattern": "\\b\\p{L}{1,}([\u2019'\\- ]\\p{L}{1,}){0,3}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9170,
    "headerPatterns": [
      {
        "regExp": "(?i).*(last[\\s_]*name|family[\\s_]*name|surname).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Family Name"
        ],
        "negativeExamples": [
          "Middle Name"
        ]
      },
      {
        "regExp": "(?i).*(applicant|customer|user|contact).*(last[\\s_]*name|surname|family[\\s_]*name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Last Name"
        ],
        "negativeExamples": [
          "Customer First Name"
        ]
      },
      {
        "regExp": "(?i).*(lname|l[\\s_]*name|sur[\\s_]*name|surn).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "LName"
        ],
        "negativeExamples": [
          "FName"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Age"
        ]
      }
    ],
    "positiveContentExamples": [
      "Smith",
      "O'Neill",
      "O\u2019Connor",
      "Garc\u00eda",
      "de la Cruz",
      "van der Meer",
      "Anne-Marie",
      "M\u00fcller"
    ],
    "negativeContentExamples": [
      "Mr. Smith",
      "Garc\u00eda, Juan",
      "Smith Jr.",
      "Smith-",
      "-Smith",
      "Smith & Wesson",
      "Nguyen2",
      "O'Neil (father)"
    ],
    "positiveHeaderExamples": [
      "Last Name",
      "Surname",
      "Family Name",
      "LName",
      "Last_Name",
      "Customer Last Name",
      "Applicant Surname",
      "User Family Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Full Name",
      "Middle Name",
      "Given Name",
      "Preferred Name",
      "Username",
      "Company Name",
      "Address"
    ],
    "explanation": "This semantic type targets surnames/family names consisting only of letters with optional separators (apostrophes, hyphens, spaces), supporting international alphabets and diacritics. It avoids matches containing digits or extraneous punctuation often associated with titles or suffixes. Use this when a column specifically stores last/family names, typically guided by surname-oriented headers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:45.958669"
  },
  {
    "resultType": "generated",
    "semanticType": "name",
    "description": "A text field containing complete names that follow the pattern of exactly two name components separated by a single space. Each component allows alphabetic characters, apostrophes, and hyphens, and excludes numerical digits, titles, or multiple middle names.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]* [A-Za-z][A-Za-z'-]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9020,
    "headerPatterns": [
      {
        "regExp": "(?i).*(person|customer|employee|contact|passenger).*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Full Name"
        ],
        "negativeExamples": [
          "Full Name"
        ]
      },
      {
        "regExp": "(?i).*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Full Name"
        ],
        "negativeExamples": [
          "Last Name"
        ]
      },
      {
        "regExp": "(?i).*(person|customer|employee|contact|passenger).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Person Name"
        ],
        "negativeExamples": [
          "Company Name"
        ]
      },
      {
        "regExp": "(?i).*(cust|emp|pers|psngr).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Cust Name"
        ],
        "negativeExamples": [
          "Customer Name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Doe",
      "Anne-Marie O'Neill",
      "D'Arcy Wretzky",
      "Jean-Luc Picard",
      "Mary Jane",
      "O'Connor Smith",
      "Smith-Jones O'Brien",
      "Mc'Donald O'Grady"
    ],
    "negativeContentExamples": [
      "John",
      "John A Doe",
      "Mr John Doe",
      "John  Doe",
      "John-Doe",
      "John Doe Jr",
      "John Doe3",
      "John & Doe"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Customer Full Name",
      "Employee Name",
      "Contact Name",
      "Passenger Name",
      "Cust Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Middle Name",
      "Username",
      "Company Name",
      "Given Name",
      "Surname"
    ],
    "explanation": "This semantic type targets two-part personal full names with a single space separator, allowing letters along with apostrophes and hyphens. It is designed to identify complete first-and-last name fields while excluding titles, suffixes, initials, or middle names.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:46.203993"
  },
  {
    "resultType": "generated",
    "semanticType": "class",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'(),;:?!%&/\\\\.\\s-]{2,}\\s+[A-Za-z0-9'(),;:?!%&/\\\\.\\s-]*[A-Za-z][A-Za-z0-9'(),;:?!%&/\\\\.\\s-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9280,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|customer|product|issue|ticket).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Order Description"
        ],
        "negativeExamples": [
          "Order Date"
        ]
      },
      {
        "regExp": "(?i).*(order|customer|product|issue|ticket).*(details|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Remarks"
        ],
        "negativeExamples": [
          "Customer ID"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments|details|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(descr|desc|cmt|cmts|note).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "prod_id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent connectivity after update.",
      "Please see attached documents for full breakdown.",
      "Issue persists when running the nightly job on Windows 11.",
      "Deliveries expected between 08:00 and 10:30 during peak season.",
      "Use caution: values may be null if the service times out.",
      "This account was migrated from legacy system in 2019.",
      "Payment received; reconcile with invoice 78342-B.",
      "Replace the filter, then restart; performance should improve."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "Pending",
      "2024-08-01",
      "1234567890",
      "A1B2C3",
      "42.50",
      "ID12345"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Details",
      "Remarks",
      "Order Description",
      "Customer Notes",
      "Issue Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Code",
      "Email",
      "Phone"
    ],
    "explanation": "This type targets free-form narrative fields commonly used for descriptions, notes, comments, and other explanatory text. The regex favors multi-word content containing letters and optional punctuation to distinguish narrative text from single-token identifiers, codes, or numeric/date values.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:48.927213"
  },
  {
    "resultType": "generated",
    "semanticType": "author",
    "description": "A text field containing complete names comprised of exactly two tokens: a first name and a last name separated by a single space. Each token must start and end with a letter and may include internal apostrophes or hyphens (letters, apostrophes, and hyphens only), with no titles, suffixes, numerals, or extra middle names.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]*[A-Za-z] [A-Za-z][A-Za-z'-]*[A-Za-z]\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9520,
    "headerPatterns": [
      {
        "regExp": "(?i).*author.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Author Full Name"
        ],
        "negativeExamples": [
          "Author Email"
        ]
      },
      {
        "regExp": "(?i).*book.*author.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Book Author Name"
        ],
        "negativeExamples": [
          "Book Title"
        ]
      },
      {
        "regExp": "(?i).*primary.*author.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Primary Author"
        ],
        "negativeExamples": [
          "Secondary Reviewer"
        ]
      },
      {
        "regExp": "(?i).*auth.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "auth_name"
        ],
        "negativeExamples": [
          "author_id"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Mary-Jane O'Connor",
      "Jean-Luc Picard",
      "Liam O'Brien",
      "Anne-Marie Clarke",
      "D'Arcy Whelan",
      "Robert-James McDonald",
      "Sarah O'Hara"
    ],
    "negativeContentExamples": [
      "John A. Smith",
      "Dr John Smith",
      "John  Smith",
      "JohnSmith",
      "John Smith Jr",
      "John Smith-Smythe Jones",
      "John Smith3",
      "J Smith"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Author Name",
      "Primary Author",
      "Book Author",
      "Author Full Name",
      "Byline Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Author Email",
      "Author ID",
      "Book Title",
      "Username",
      "Reviewer Name"
    ],
    "explanation": "This semantic type targets person names specifically formatted as exactly two tokens (first and last) separated by a single space, allowing internal apostrophes or hyphens within each token. It excludes titles, suffixes, initials, multiple middle names, extra spaces, digits, and special characters beyond apostrophes or hyphens. Typical use cases include identifying author full names in bibliographic or publishing datasets where a consistent two-token full name is expected.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:54.835735"
  },
  {
    "resultType": "generated",
    "semanticType": "status",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 ,.;:'\\\"()/_-]{2,}\\s+[A-Za-z0-9][A-Za-z0-9 ,.;:'\\\"()/_-]{2,}\\s+[A-Za-z0-9][A-Za-z0-9 ,.;:'\\\"()/_-]{1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9300,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|customer|internal).*(comments|notes|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmts|rmks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_desc"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "ID"
        ]
      }
    ],
    "positiveContentExamples": [
      "Awaiting customer response regarding replacement options.",
      "Issue resolved after rebooting the server.",
      "Payment received on 2024-07-15; order will ship tomorrow.",
      "Please review the attached report and confirm.",
      "Delayed due to weather; rescheduled for next week.",
      "Working as expected in staging environment.",
      "Needs manager approval before final release.",
      "User reported intermittent errors during login."
    ],
    "negativeContentExamples": [
      "Pending",
      "OK",
      "2024-07-15",
      "On hold",
      "Complete.",
      "REF-12345",
      "yes",
      "Done!"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Internal Notes",
      "Customer Comments",
      "Issue Description",
      "Free Text",
      "Additional Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Order Code",
      "Email",
      "Quantity",
      "Phone",
      "Zip"
    ],
    "explanation": "This semantic type targets free-form narrative text fields commonly used for descriptions, comments, and notes. The value pattern requires multi-word content and allows a wide range of punctuation to reflect natural language entries. High threshold and priority reduce conflicts with more specific types while recognizing broadly descriptive text fields.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:55.232311"
  },
  {
    "resultType": "generated",
    "semanticType": "length",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 '\\\"\\.,;:!\\?\\(\\)/#&%\\+\\-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9 '\\\"\\.,;:!\\?\\(\\)/#&%\\+\\-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9540,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|record).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "order_date"
        ]
      },
      {
        "regExp": "(?i).*(record|entry|message).*(description|notes|comments|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "entry_comments"
        ],
        "negativeExamples": [
          "message_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|notes|cmt|cmts|comment|remark|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "prod_code"
        ]
      },
      {
        "regExp": "(?i).*(details|summary|explanation|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_details"
        ],
        "negativeExamples": [
          "issue_number"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment_text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please handle with care; fragile contents.",
      "Delivered on 2023-05-10; leave at front desk.",
      "The customer requested a callback after 5pm.",
      "Contains 3 items: screws, bolts, and washers.",
      "Payment pending - see invoice #A123.",
      "Updated by admin (urgent issue).",
      "Notes: verify address, then confirm shipment."
    ],
    "negativeContentExamples": [
      "Pending",
      "123456",
      "A1B2C3",
      "2024-07-15",
      "ID-90871",
      "N/A",
      "OK"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Details",
      "Summary",
      "Remarks",
      "Comment Text",
      "Issue Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Total",
      "SKU",
      "Phone",
      "Order Number"
    ],
    "explanation": "This semantic type targets free-form textual fields that typically contain multi-word narratives such as descriptions, notes, or comments. The value pattern intentionally requires at least two tokens (separated by whitespace) and allows common punctuation, reducing false positives on short identifiers, dates, or codes. High threshold and low priority ensure it does not override more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:48:59.119378"
  },
  {
    "resultType": "generated",
    "semanticType": "part",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'()\\-\\/]*([ ,;:\\/]+[A-Za-z0-9][A-Za-z0-9'()\\-\\/]*)+\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9210,
    "headerPatterns": [
      {
        "regExp": "(?i).*(description|desc|comment|comments|notes|note)[ _-]*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment_text"
        ],
        "negativeExamples": [
          "comment_count"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed)[ _-]*(description|desc).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_description"
        ],
        "negativeExamples": [
          "long_id"
        ]
      },
      {
        "regExp": "(?i).*(comments|comment|description|desc|notes|note|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "email_address"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmnts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "prod_code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Handle with care during shipping.",
      "Customer requested delivery after 5 PM.",
      "Item shows slight wear; fully functional.",
      "Refer to attached manual for installation steps.",
      "Replacement part pending approval from QA.",
      "Use non-abrasive cleaner only.",
      "OK to ship once payment clears.",
      "This component is compatible with model X200."
    ],
    "negativeContentExamples": [
      "Pending",
      "123456",
      "AB-1234",
      "2019-12-31",
      "john@example.com",
      "N/A",
      "123 456",
      "$12.99"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Comment Text",
      "Detailed Description",
      "Free Text",
      "Additional Notes",
      "Long Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Code",
      "User Name",
      "Email"
    ],
    "explanation": "This semantic type targets free-form, multi-word text commonly found in description, comment, and notes fields. The regex favors entries with at least two tokens and accommodates letters, numbers, and common punctuation, while avoiding overly permissive matches such as single tokens, pure numbers, or typical identifiers. It is intentionally broad, so it uses a high confidence threshold and lower priority to reduce conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:01.703711"
  },
  {
    "resultType": "generated",
    "semanticType": "position",
    "description": "A text field containing professional titles that typically follow standard occupational naming conventions and may include hierarchical indicators or specialization terms. The format allows alphabetic characters, spaces, and common separators such as spaces, hyphens, commas, slashes, ampersands, and periods, and generally appears without numerical codes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}([ .,/&-]+[A-Za-z]{2,}){0,6}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9290,
    "headerPatterns": [
      {
        "regExp": "(?i).*job.*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "job_title"
        ],
        "negativeExamples": [
          "job_id"
        ]
      },
      {
        "regExp": "(?i).*employee.*position.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "employee_position"
        ],
        "negativeExamples": [
          "employee_id"
        ]
      },
      {
        "regExp": "(?i).*occupation.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "occupation"
        ],
        "negativeExamples": [
          "location"
        ]
      },
      {
        "regExp": "(?i).*position.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "position"
        ],
        "negativeExamples": [
          "role"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "position_name"
        ],
        "negativeExamples": [
          "position"
        ]
      }
    ],
    "positiveContentExamples": [
      "Software Engineer",
      "Senior Manager",
      "Chief Financial Officer",
      "VP Operations",
      "Registered Nurse",
      "Data Scientist",
      "Head of Marketing",
      "Director, Sales"
    ],
    "negativeContentExamples": [
      "Engineer 2",
      "Sr. Manager 1",
      "VP-Operations-3",
      "C++ Developer",
      "Manager (HR)",
      "Title: Manager",
      "Developer_Lead",
      "engineer@example.com"
    ],
    "positiveHeaderExamples": [
      "Job Title",
      "Position",
      "Occupation",
      "Employee Position",
      "Staff Title",
      "Job Role",
      "Position Name"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Company",
      "Salary",
      "Employee ID",
      "Company Code",
      "Department",
      "Office Location"
    ],
    "explanation": "This semantic type targets job or professional titles such as Software Engineer, Senior Manager, or Director, Sales. It permits alphabetic tokens and common professional separators, while excluding numerical codes or symbols typical of identifiers. Use it to classify columns describing roles or positions held by individuals in an organization.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:03.775351"
  },
  {
    "resultType": "generated",
    "semanticType": "month",
    "description": "A numeric field representing months as integers between 1 and 12, using standard calendar numbering where January equals 1 and December equals 12. Values must be plain integers with no leading zeros or additional formatting.",
    "pluginType": "regex",
    "regexPattern": "\\b(1[0-2]|[1-9])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9720,
    "headerPatterns": [
      {
        "regExp": "(?i).*numeric.*month.*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Numeric Month Number"
        ],
        "negativeExamples": [
          "Day Number"
        ]
      },
      {
        "regExp": "(?i).*month[_ ]?number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Month Number"
        ],
        "negativeExamples": [
          "Month Name"
        ]
      },
      {
        "regExp": "(?i).*numeric.*month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Numeric Month"
        ],
        "negativeExamples": [
          "Year"
        ]
      },
      {
        "regExp": "(?i).*(month|mo)[_ ]?(num|no|nbr).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "mo_num"
        ],
        "negativeExamples": [
          "day_num"
        ]
      },
      {
        "regExp": "(?i).*month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Month"
        ],
        "negativeExamples": [
          "Year"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "2",
      "3",
      "7",
      "10",
      "11",
      "12"
    ],
    "negativeContentExamples": [
      "0",
      "13",
      "01",
      "1.0",
      "12.5",
      "1/12",
      "-1",
      "00"
    ],
    "positiveHeaderExamples": [
      "Month",
      "Month Number",
      "Numeric Month",
      "MonthNo",
      "mo_num",
      "Month Integer",
      "Month (1-12)"
    ],
    "negativeHeaderExamples": [
      "Month Name",
      "Day",
      "Year",
      "Week",
      "Quarter",
      "Date",
      "Billing Period"
    ],
    "explanation": "This type identifies integer month values in the range 1\u201312 without leading zeros or additional formatting. It is useful for datasets storing month as a compact numeric attribute rather than a date or month name string.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:04.537441"
  },
  {
    "resultType": "generated",
    "semanticType": "rating",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\\\"-]*([ ]+[A-Za-z][A-Za-z0-9'\\\"-]*){2,}[A-Za-z0-9 .,!?:;()'\\\"/-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9480,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|user|product).*(comments|reviews|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(issue|case|ticket).*(notes|remarks|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_notes"
        ],
        "negativeExamples": [
          "ticket_number"
        ]
      },
      {
        "regExp": "(?i).*(feedback|comments|notes|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_feedback"
        ],
        "negativeExamples": [
          "issue_id"
        ]
      },
      {
        "regExp": "(?i).*(review|remark|summary).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "review_text"
        ],
        "negativeExamples": [
          "review_date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "id"
        ]
      }
    ],
    "positiveContentExamples": [
      "Great product, works as expected.",
      "Fast shipping and excellent service.",
      "Could be better; the interface is confusing.",
      "Highly recommended for beginners.",
      "Not satisfied with the battery life.",
      "Affordable price, decent quality overall.",
      "Exceeded my expectations in every way.",
      "Arrived damaged, but customer support helped."
    ],
    "negativeContentExamples": [
      "OK",
      "Yes",
      "5/5",
      "2024-08-10",
      "SKU-12345",
      "N/A",
      "Very good",
      "ID: 12345"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Customer Comments",
      "Product Description",
      "Internal Notes",
      "Review Text",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Email",
      "Quantity",
      "Status Code",
      "Customer ID"
    ],
    "explanation": "This semantic type targets free-form narrative text such as descriptions, comments, notes, and reviews. The value pattern emphasizes multi-word alphabetic content (three or more words) and allows common punctuation to distinguish it from IDs, codes, dates, or short labels. Identification is primarily driven by header names commonly used for narrative fields, with a high threshold and high priority value to avoid conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:05.954269"
  },
  {
    "resultType": "generated",
    "semanticType": "area",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[a-z][a-z'&()-]{1,}\\s+[a-z0-9][a-z0-9'&()-]{1,}[^\\r\\n]{8,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9450,
    "headerPatterns": [
      {
        "regExp": "(?i).*product.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*order.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_notes"
        ],
        "negativeExamples": [
          "order_number"
        ]
      },
      {
        "regExp": "(?i).*customer.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_count"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|cmt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "ID"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver to the rear entrance after 5pm.",
      "The item arrived with minor scratches on the lid.",
      "Customer reported intermittent connectivity issues.",
      "See notes: replacement scheduled for next Tuesday.",
      "Packaging was damaged; contents appear intact.",
      "Refer to the attached diagram for installation.",
      "Leave parcel with the concierge at front desk.",
      "Requires manager approval before release."
    ],
    "negativeContentExamples": [
      "N/A",
      "12345",
      "2024-08-11",
      "ID-9982",
      "$19.99",
      "John Doe",
      "OK",
      "Building A"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "product_description",
      "order_notes",
      "customer_comments",
      "Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "order_number",
      "product_id",
      "customer_count",
      "code"
    ],
    "explanation": "This semantic type represents free-form narrative or descriptive text fields commonly used for descriptions, notes, and comments. Detection relies primarily on header cues and the presence of multi-word, sentence-like content rather than fixed formats, ensuring it does not over-match structured identifiers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:09.697005"
  },
  {
    "resultType": "generated",
    "semanticType": "number",
    "description": "A unique identifier string composed of alphanumeric characters with optional internal separators using underscores or hyphens. It should not contain spaces or other punctuation and typically appears in forms like A12BC, USER_001, or ACCNT-2023_04.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[a-z0-9]+([_-][a-z0-9]+)*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9630,
    "headerPatterns": [
      {
        "regExp": "(?i).*unique.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "Unique Name"
        ]
      },
      {
        "regExp": "(?i).*(record|user|item).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Record ID"
        ],
        "negativeExamples": [
          "Record Name"
        ]
      },
      {
        "regExp": "(?i).*primary.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Primary ID"
        ],
        "negativeExamples": [
          "Primary Name"
        ]
      },
      {
        "regExp": "(?i).*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Identifier"
        ],
        "negativeExamples": [
          "Identity"
        ]
      },
      {
        "regExp": "(?i).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "A12BC",
      "USER_001",
      "9Z7X-12",
      "ACCNT-2023_04",
      "X1Y2Z3",
      "ID_ABC-123",
      "00A-00B",
      "Q4_2025"
    ],
    "negativeContentExamples": [
      "A12 BC",
      "USER#001",
      "-ABC123",
      "ABC123-",
      "A__B",
      "12..34",
      "id:123",
      "X Y_Z"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "Primary ID",
      "Record ID",
      "User Identifier",
      "Item ID",
      "Master ID"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "Code",
      "Count",
      "Status",
      "Identity",
      "Reference Number"
    ],
    "explanation": "This semantic type detects generic identifiers composed of letters and digits with optional internal underscores or hyphens. It is useful for columns representing IDs such as user_id, record-id, or other unique keys that avoid spaces and non-alphanumeric punctuation. The header patterns favor explicit ID terminology to differentiate from names, descriptions, and dates, while the value pattern enforces compact alphanumeric tokens with controlled separators.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:09.856302"
  },
  {
    "resultType": "generated",
    "semanticType": "department",
    "description": "A text field containing US state names written with proper English capitalization and spacing (e.g., New York, Rhode Island). Matches only the 50 official US state names and rejects abbreviations, territories, or mis-capitalized forms.",
    "pluginType": "regex",
    "regexPattern": "\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9660,
    "headerPatterns": [
      {
        "regExp": "(?i).*(united[ _-]*states|us).*state[ _-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*state[ _-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Name"
        ],
        "negativeExamples": [
          "Country Name"
        ]
      },
      {
        "regExp": "(?i).*st[ _-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "St Name"
        ],
        "negativeExamples": [
          "Street Name"
        ]
      },
      {
        "regExp": "(?i).*(united[ _-]*states|us)[ _-]*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State"
        ],
        "negativeExamples": [
          "County"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Number"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New York",
      "North Carolina",
      "Rhode Island",
      "Massachusetts",
      "Texas",
      "Washington",
      "West Virginia"
    ],
    "negativeContentExamples": [
      "california",
      "CALIFORNIA",
      "NewYork",
      "New  York",
      "District of Columbia",
      "Puerto Rico",
      "New York City",
      "North  Carolina"
    ],
    "positiveHeaderExamples": [
      "State",
      "State Name",
      "US State",
      "United States State",
      "State Full Name",
      "State (US)",
      "StateName"
    ],
    "negativeHeaderExamples": [
      "State Code",
      "Country",
      "County",
      "Province",
      "Region",
      "State Abbreviation",
      "Country Name",
      "Postal Code"
    ],
    "explanation": "This semantic type identifies full US state names using a strict enumerated regex that matches exactly the 50 official state names with correct capitalization and spacing. It is useful for validating canonical state name fields in addresses, demographics, and jurisdictional data, while excluding abbreviations (e.g., CA), territories, and improperly formatted entries.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:13.196792"
  },
  {
    "resultType": "generated",
    "semanticType": "series",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9 ,.;:!?()/_\\-]{2,} [A-Za-z0-9 ,.;:!?()/_\\-]{1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9770,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|issue|product).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Order ID"
        ]
      },
      {
        "regExp": "(?i).*(customer|order|issue|product).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Notes"
        ],
        "negativeExamples": [
          "Product Code"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "short_desc"
        ],
        "negativeExamples": [
          "discount_code"
        ]
      },
      {
        "regExp": "(?i).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Status"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent outages after the firmware update.",
      "Please see the attached document for the full procedure and notes.",
      "Payment received on 2025-06-10; processing will complete within 2 days.",
      "The unit failed during stress test at 85\u00b0C; replacement scheduled.",
      "Use caution when lifting; packaging contains fragile components.",
      "Initial setup completed successfully; awaiting final approval.",
      "This description explains the observed variance in results."
    ],
    "negativeContentExamples": [
      "ID12345",
      "2025-06-10",
      "3.14159",
      "A-01-9921",
      "v2.1.0",
      "OK",
      "N/A"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Customer Notes",
      "Additional Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Status",
      "Quantity",
      "Code",
      "Email"
    ],
    "explanation": "This semantic type captures free-form narrative text often used for descriptions, notes, or comments. The content pattern requires at least one alphabetic character and at least one space to avoid matching identifiers, dates, or single-token codes. Header patterns prioritize specific business context terms before falling back to primitive core terms like description.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:13.774250"
  },
  {
    "resultType": "generated",
    "semanticType": "version",
    "description": "A unique string following a pattern that typically combines letters and numbers in various formats to ensure distinctiveness. The pattern generally allows alphanumeric characters with optional separators like underscores or hyphens, matching patterns like ^[A-Z0-9_-]+$.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z0-9_-]{2,40}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9600,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(app|application|software|schema|api|db|dataset)[ _-]?version\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "app_version"
        ],
        "negativeExamples": [
          "app_id"
        ]
      },
      {
        "regExp": "(?i).*\\b(release|build)[ _-]?version\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "build_version"
        ],
        "negativeExamples": [
          "build_number"
        ]
      },
      {
        "regExp": "(?i).*\\bversion[ _-]?(number|num|no|id)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "version_number"
        ],
        "negativeExamples": [
          "customer_number"
        ]
      },
      {
        "regExp": "(?i).*\\b(ver|rev)\\b([ _-]?(no|num|id))?\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ver_id"
        ],
        "negativeExamples": [
          "server_name"
        ]
      },
      {
        "regExp": "(?i).*version.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "version"
        ],
        "negativeExamples": [
          "revision_date"
        ]
      }
    ],
    "positiveContentExamples": [
      "V1",
      "V2_0",
      "VERSION1",
      "BUILD-2024",
      "REL_1_0",
      "R3-B7",
      "ID_ABC-123",
      "X9Y_7"
    ],
    "negativeContentExamples": [
      "v1",
      "V1.0",
      "VERSION 1",
      "V-1.0",
      "Alpha_1",
      "1_2_3!",
      "V\u00c41",
      "V1/2"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "version",
      "app_version",
      "build_version",
      "version_number",
      "schema_version"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "account_id",
      "build_number",
      "revision_date",
      "code",
      "release_date"
    ],
    "explanation": "This semantic type identifies uppercase alphanumeric identifiers that may include underscores or hyphens, commonly used as version strings (e.g., software or schema version fields). It avoids matching values containing lowercase letters, spaces, dots, or other punctuation to reduce ambiguity with other identifier formats.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:17.701936"
  },
  {
    "resultType": "generated",
    "semanticType": "topic",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z]{2,}[ ][A-Za-z0-9][A-Za-z0-9'/-]{2,}([ ][A-Za-z0-9][A-Za-z0-9'/-]{2,}){0,6}[ ]?[.,;:!?]?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9460,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|invoice|record).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "order_date"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|account).*(comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(issue|ticket|case).*(notes|description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_notes"
        ],
        "negativeExamples": [
          "ticket_status"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|rmks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      }
    ],
    "positiveContentExamples": [
      "Shipping delays due to weather",
      "Customer requested expedited delivery",
      "Note: requires manager approval",
      "This item is discontinued.",
      "See attached for details",
      "Issue resolved; ticket closed",
      "Updated per client feedback",
      "Please contact support if problems persist"
    ],
    "negativeContentExamples": [
      "12345",
      "2024-06-01",
      "ID-9876",
      "$19.99",
      "OK",
      "N/A",
      "Order #123",
      "Page 12"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Record Description",
      "Customer Comments",
      "Order Notes",
      "Remarks",
      "Details"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Status",
      "Quantity",
      "Postal Code",
      "Email",
      "SKU"
    ],
    "explanation": "This semantic type identifies free-form narrative text such as descriptions, notes, comments, and details. It is intended for fields where content length and structure vary widely, often containing multiple words, sentences, and punctuation. Header-based signals like description, notes, and comments drive recognition, while the content regex biases toward multi-word text to avoid misclassifying codes, dates, or numeric identifiers. Use this type to capture unstructured explanatory fields in datasets.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:17.702311"
  },
  {
    "resultType": "generated",
    "semanticType": "abstract",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'-]{1,}\\b[ ]+\\b[A-Za-z0-9][A-Za-z0-9'-]{1,}\\b[ ]+\\b[A-Za-z0-9][A-Za-z0-9'-]{1,}\\b[ ]+\\b[A-Za-z0-9][A-Za-z0-9'-]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9840,
    "headerPatterns": [
      {
        "regExp": "(?i).*(project|record|case|item|document).*(description|abstract|summary).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_description"
        ],
        "negativeExamples": [
          "project_id"
        ]
      },
      {
        "regExp": "(?i).*(detailed|long|free|full).*(description|text|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "full_text_description"
        ],
        "negativeExamples": [
          "full_price"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes|remarks|narrative|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "sku"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|rmks|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "This report explains the quarterly results in detail.",
      "Customer requested a refund due to delayed shipment.",
      "The abstract summarizes the methodology and findings.",
      "Notes include action items, risks, and open questions.",
      "Provide a concise description for future reference.",
      "The following section outlines implementation considerations.",
      "Comments capture stakeholder feedback during testing."
    ],
    "negativeContentExamples": [
      "Quick summary pending.",
      "Needs review ASAP",
      "Pending approval",
      "See attachment",
      "Fix later",
      "Updated 2024-05-01",
      "Lorem ipsum dolor"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Abstract",
      "Summary",
      "Remarks",
      "Narrative",
      "Details"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "Address",
      "SKU",
      "Status",
      "Count"
    ],
    "explanation": "This semantic type targets free-form narrative text fields commonly used for descriptions, notes, and comments. The content pattern favors multi-word text to reduce false positives from short labels, codes, and identifiers, while header patterns prioritize common naming conventions like description, notes, and comments.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:21.798028"
  },
  {
    "resultType": "generated",
    "semanticType": "end",
    "description": "A numeric field containing timestamp values that follow the pattern of exactly 10 digits representing seconds since Unix epoch as 10-digit integers. The format provides second precision timing commonly used in Unix systems, APIs, and standard timestamp applications.",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9]\\d{9}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9690,
    "headerPatterns": [
      {
        "regExp": "(?i).*unix.*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Formatted Date"
        ]
      },
      {
        "regExp": "(?i).*epoch.*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Time"
        ]
      },
      {
        "regExp": "(?i).*epoch.*seconds.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Seconds"
        ],
        "negativeExamples": [
          "Epoch Milliseconds"
        ]
      },
      {
        "regExp": "(?i).*(unix|epoch).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Datetime"
        ]
      }
    ],
    "positiveContentExamples": [
      "1234567890",
      "1609459200",
      "1451606400",
      "1704067200",
      "2000000000",
      "1095379200",
      "1672531200",
      "1893456000"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "170406720",
      "1,609,459,200",
      "1609459200.0",
      "01609459200",
      "16094592O0",
      "1609-459-200",
      "-1609459200"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Epoch Seconds",
      "Unix TS",
      "Epoch",
      "ts_unix",
      "timestamp_sec"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Datetime",
      "Created At",
      "ISO Timestamp",
      "Timestamp ms",
      "Epoch Milliseconds"
    ],
    "explanation": "This semantic type identifies 10-digit numeric Unix epoch values in seconds, commonly used in logs, telemetry, and API payloads to represent time at second precision. It uses a strict 10-digit numeric pattern with word boundaries to avoid matching longer millisecond values or formatted timestamps.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:24.357395"
  },
  {
    "resultType": "generated",
    "semanticType": "duration",
    "description": "A free-form text field intended for narrative descriptions, notes, and comments. Values may include any combination of letters, numbers, punctuation, and whitespace, often spanning multiple words or sentences.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'.,;:()\"/-]*\\s+[A-Za-z0-9][A-Za-z0-9'.,;:()\"/-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9550,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|ticket|project).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(detailed|long|free|additional).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_notes"
        ],
        "negativeExamples": [
          "additional_charges"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*(text|detail|field).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments_text"
        ],
        "negativeExamples": [
          "status_text"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|cmts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Payment received on Friday, awaiting confirmation.",
      "Customer reported intermittent errors during login.",
      "Please review the attached file and provide feedback.",
      "Order canceled due to duplicate submission.",
      "Requires manager approval before release.",
      "Notes: replaced battery; unit working as expected.",
      "Follow-up scheduled for next week.",
      "Delivery delayed because of weather conditions."
    ],
    "negativeContentExamples": [
      "12345",
      "2024-05-01",
      "19.99",
      "AB-12345",
      "Yes",
      "OK",
      "user@example.com",
      "USD"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Additional Notes",
      "Internal Comments",
      "Comments Text",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status",
      "Email",
      "Code",
      "Number"
    ],
    "explanation": "This semantic type captures free-form narrative fields such as descriptions, notes, and comments. It is useful for identifying columns that contain unstructured text intended for human-readable context rather than structured identifiers or codes. The detection emphasizes multi-word text content and typical header terms like description, notes, and comments, while avoiding numeric-only, code-like, or date-like values.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:29.505727"
  },
  {
    "resultType": "generated",
    "semanticType": "party",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b\\S+\\s+\\S+",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9890,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|customer|case|issue|ticket).*(description|comment|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_issue_description"
        ],
        "negativeExamples": [
          "invoice_number"
        ]
      },
      {
        "regExp": "(?i).*(product|record|entry|detail).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_detail_notes"
        ],
        "negativeExamples": [
          "ship_date"
        ]
      },
      {
        "regExp": "(?i).*(remarks|remark|cmt|cmts|desc).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "account_id"
        ]
      },
      {
        "regExp": "(?i).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "total_amount"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "notes"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver by end of day.",
      "Customer reported intermittent failures.",
      "Notes: requires manager approval",
      "Return authorized on 2024-09-15",
      "Pending review by QA team",
      "High priority; escalate if delayed",
      "Contact support for replacement",
      "Updated per vendor guidance"
    ],
    "negativeContentExamples": [
      "None",
      "N/A",
      "12345",
      "OK",
      "Yes",
      "Unknown",
      "2024-10-01",
      "Draft-v2"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Order Description",
      "Customer Notes",
      "Issue Comments",
      "Remarks",
      "Desc"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Account Number",
      "Email",
      "Country Code",
      "Quantity",
      "Status"
    ],
    "explanation": "This semantic type identifies free-text narrative fields such as descriptions, notes, and comments. The content pattern requires at least two tokens separated by whitespace, which favors multi-word narrative entries over single-token identifiers. Header patterns progress from context-rich phrases to primitive terms to robustly detect description-like columns while avoiding conflicts with structured identifier or numeric fields. A high threshold and priority reduce ambiguity with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:29.541553"
  },
  {
    "resultType": "generated",
    "semanticType": "score",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9,.;:!?'\"]%/\\-]*[ ]+[A-Za-z0-9][A-Za-z0-9,.;:!?'\"]%/\\-]*[ ]+[A-Za-z0-9][A-Za-z0-9,.;:!?'\"]%/\\-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9790,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|user).*(comments|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(product|item|order).*(description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "order_date"
        ]
      },
      {
        "regExp": "(?i).*(internal|private|admin).*(notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "admin_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|note|remark|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc_text"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached report.",
      "User reported an intermittent login issue.",
      "Payment received on 2023-05-14; closing ticket.",
      "Requires manager approval before shipment.",
      "Duplicate entry found, merged with record 4521.",
      "Customer requested a refund due to delay.",
      "All tests passed in staging environment.",
      "Temporary workaround applied until patch is released."
    ],
    "negativeContentExamples": [
      "OK",
      "Needs review",
      "Excellent product!",
      "12345",
      "N/A",
      "www.example.com",
      "Pending",
      "2023-04-01"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "User Comments",
      "Internal Notes",
      "Detailed Description",
      "Product Description",
      "Customer Feedback"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "Quantity",
      "Code",
      "Phone",
      "Zip"
    ],
    "explanation": "This type targets free-form narrative fields such as descriptions, notes, and comments. It uses header cues and content characteristics favoring multi-word textual passages to differentiate from single-token identifiers, codes, or strictly formatted fields.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:30.809431"
  },
  {
    "resultType": "generated",
    "semanticType": "abbreviation",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b\\s+\\b[A-Za-z0-9]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9570,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|issue).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Price Notes"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments|remarks|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmt|cmts|rmk|rmks|detail).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Item Desc"
        ],
        "negativeExamples": [
          "ID Code"
        ]
      },
      {
        "regExp": "(?i).*(additional|general).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Additional Notes"
        ],
        "negativeExamples": [
          "General Ledger"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comment Text"
        ],
        "negativeExamples": [
          "Index"
        ]
      }
    ],
    "positiveContentExamples": [
      "This product exceeded expectations.",
      "Handle with care: fragile glass components.",
      "Customer requested expedited shipping by Friday.",
      "Notes: Reinstall drivers, then reboot.",
      "Payment received on 2024-05-12; reconciliation pending.",
      "Multiple issues reported\u2014see ticket #4921.",
      "Use 10mm bolts; do not overtighten.",
      "Works as intended; minor scuffs on casing."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "12345",
      "TBD",
      "USA",
      "2024-05-12",
      "SKU-12345",
      "Y/N"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Order Notes",
      "User Comments",
      "Additional Details",
      "Comment Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Amount",
      "Email",
      "Phone",
      "Zip Code"
    ],
    "explanation": "This type targets free-form narrative or comment-like fields by requiring at least two tokens separated by whitespace, which helps distinguish it from single-word codes or identifiers. Use it to identify columns that store descriptions, notes, and general textual comments rather than structured identifiers or numeric values.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:31.087038"
  },
  {
    "resultType": "generated",
    "semanticType": "percentage",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9]*([ ,.'\";:!?()-]+[A-Za-z0-9]+){2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9860,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|customer|account|ticket).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(detailed|internal|public|additional).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_description"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|cmts|remark|rmk|txt|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_desc"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(notes|comments|remarks|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent connectivity over the weekend.",
      "Please see attached summary and follow up by Thursday.",
      "Shipment delayed due to weather; rescheduled for 10/12.",
      "User requested password reset and confirmed identity via phone.",
      "The device emits a faint clicking noise during startup.",
      "Payment received; awaiting confirmation from finance.",
      "Add a note to contact the vendor before installation.",
      "This field captures any additional information provided by staff."
    ],
    "negativeContentExamples": [
      "Hello world",
      "OK",
      "See above",
      "2024-06-01",
      "12345",
      "N/A",
      "john@example.com",
      "OK - pending"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Customer Notes",
      "Internal Comments",
      "Additional Text",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Amount",
      "Email",
      "Status"
    ],
    "explanation": "This semantic type identifies free-form descriptive text fields typically used for notes, comments, or narrative details. Content is recognized by the presence of multiple word tokens and natural-language separators, while headers are matched via common description-related terms and abbreviations. The high threshold and priority help prevent over-matching and defer to more specific types when present.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:38.796738"
  },
  {
    "resultType": "generated",
    "semanticType": "format",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\"/&()\\-,:;.!?]{4,}[ ]+[A-Za-z0-9][A-Za-z0-9'\"/&()\\-,:;.!? ]*[A-Za-z0-9]\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9850,
    "headerPatterns": [
      {
        "regExp": "(?i).*description.*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description_text"
        ],
        "negativeExamples": [
          "description"
        ]
      },
      {
        "regExp": "(?i).*comment.*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment_text"
        ],
        "negativeExamples": [
          "comment_id"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|cmts|remark|remarks|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver to the side entrance after 5 pm.",
      "Customer requested a call before delivery.",
      "Using the red cable; do not swap the connectors.",
      "Notes: account is inactive pending verification.",
      "Please replace toner and reboot the printer.",
      "Details included below; review carefully.",
      "Failure occurs intermittently when load > 70%.",
      "Warranty applies only if product is registered."
    ],
    "negativeContentExamples": [
      "OK thanks",
      "Pending",
      "A-12345",
      "N/A",
      "2024/01/05",
      "desc_text",
      "note:12345",
      "Ship via UPS"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Notes",
      "Free Text",
      "Customer Comments",
      "Additional Description",
      "Long Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Status",
      "Quantity",
      "Zip Code",
      "Customer ID"
    ],
    "explanation": "This semantic type targets free-form narrative fields such as descriptions, notes, and comments. It is intentionally broad and primarily driven by header cues, with a conservative content pattern requiring multi-word text containing letters and allowable punctuation to minimize collisions with codes, IDs, and dates. High threshold and priority reduce interference with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:41.667993"
  },
  {
    "resultType": "generated",
    "semanticType": "company",
    "description": "A text string containing letters, spaces, and punctuation marks representing proper corporate names with legal entity suffixes.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[a-z0-9][a-z0-9&'\u2019.\\,\\-() ]{1,80}(\\s|,)+(inc|incorporated|corp|corporation|co|company|llc|l\\.l\\.c|llp|l\\.l\\.p|lp|l\\.p|ltd|limited|plc|gmbh|s\\.a|s\\.a\\.s|s\\.p\\.a|n\\.v|sarl|bv|ag|pty|pty ltd)\\.?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9740,
    "headerPatterns": [
      {
        "regExp": "(?i).*(company|business).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Company Name"
        ],
        "negativeExamples": [
          "Stock Symbol"
        ]
      },
      {
        "regExp": "(?i).*(legal.*entity.*name|registered.*company).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Legal Entity Name"
        ],
        "negativeExamples": [
          "Employee Count"
        ]
      },
      {
        "regExp": "(?i).*(organization|organisation|corporation).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Organization"
        ],
        "negativeExamples": [
          "Industry"
        ]
      },
      {
        "regExp": "(?i).*\\b(corp|inc|ltd|llc|co)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Corp Name"
        ],
        "negativeExamples": [
          "Ticker"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Acme Corporation",
      "Global Widgets, Inc.",
      "Sunrise Foods LLC",
      "Contoso Ltd.",
      "Omega Dynamics, L.L.C.",
      "Blue River Holdings, LLP",
      "TechNova GmbH",
      "Iberia Capital S.A."
    ],
    "negativeContentExamples": [
      "Acme Holdings",
      "Global Widgets Incorporation",
      "Sunrise Foods L.L",
      "Contoso L.T.D",
      "TechNova GMB",
      "Orion Energy P.L.C",
      "Iberia Capital S-A",
      "Blue River L.L.PS"
    ],
    "positiveHeaderExamples": [
      "Company Name",
      "Organization",
      "Corporation",
      "Business Name",
      "Legal Entity Name",
      "Registered Company",
      "Corp Name",
      "Name"
    ],
    "negativeHeaderExamples": [
      "Stock Symbol",
      "Industry",
      "Employee Count",
      "Ticker",
      "Department",
      "Contact Name",
      "Order Number",
      "Code"
    ],
    "explanation": "This type identifies corporate/legal entity names that include a recognized legal suffix (e.g., Inc, LLC, Ltd, Corp, GmbH). It allows typical punctuation found in company names and expects the presence of a legal designator to reduce confusion with person or product names. Suitable for columns containing registered company names, vendor names, or client organizations with legal suffixes.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:42.688442"
  },
  {
    "resultType": "generated",
    "semanticType": "genus",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\\/-]{1,}\\b[ \\t,.!?;:()-]+\\b[A-Za-z0-9][A-Za-z0-9'\\/-]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9670,
    "headerPatterns": [
      {
        "regExp": "(?i).*(long|detailed|free|additional).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(general|additional|support).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_notes"
        ],
        "negativeExamples": [
          "support_ticket"
        ]
      },
      {
        "regExp": "(?i).*(user|agent|reviewer).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_comments"
        ],
        "negativeExamples": [
          "user_status"
        ]
      },
      {
        "regExp": "(?i).*(remarks|observations|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "order_summary"
        ]
      },
      {
        "regExp": "(?i).*(desc|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Updated layout for Q3 release.",
      "Payment received on 2024-11-05; awaiting shipment.",
      "User reported intermittent timeout during upload.",
      "Replace gasket and retest under load.",
      "See attached document for calibration steps.",
      "Notes: verify SKU mapping before import.",
      "This field includes commas, numbers (123), and symbols - ok.",
      "Contacted via email; follow-up scheduled next week."
    ],
    "negativeContentExamples": [
      "N/A",
      "12345",
      "pending",
      "OK",
      "yes",
      "2024-11-05",
      "done",
      "A B"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "long_description",
      "additional_notes",
      "user_comments",
      "remarks",
      "details_text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Quantity",
      "Status",
      "Country",
      "ZipCode"
    ],
    "explanation": "This semantic type targets free-form narrative text fields commonly used for descriptions, notes, and comments. The value pattern requires at least two word tokens separated by whitespace or punctuation, reducing false positives from single-word labels, codes, or IDs. Header cues prioritize explicit descriptors such as description, notes, comments, and synonyms. It is intended for columns that store explanatory or narrative content rather than structured identifiers or numeric measures.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:43.507091"
  },
  {
    "resultType": "generated",
    "semanticType": "definition",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\"/()\\-&%:,.;?!]{0,}( [A-Za-z0-9][A-Za-z0-9'\"/()\\-&%:,.;?!]{1,}){2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9590,
    "headerPatterns": [
      {
        "regExp": "(?i).*long.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Long Description"
        ],
        "negativeExamples": [
          "Long ID"
        ]
      },
      {
        "regExp": "(?i).*(item|product|record).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Record Number"
        ]
      },
      {
        "regExp": "(?i).*(free|additional).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Additional Notes"
        ],
        "negativeExamples": [
          "Free Shipping"
        ]
      },
      {
        "regExp": "(?i).*(descr|desc|cmts|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "descr"
        ],
        "negativeExamples": [
          "dept_code"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Comment Count"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "A detailed overview of the product features and usage.",
      "Used to record additional context for audit purposes.",
      "Customer reported intermittent failures during startup.",
      "Includes step-by-step instructions for installation.",
      "Notes regarding packaging, handling, and storage.",
      "Explanation of terms used throughout the document.",
      "Reasons provided by the applicant for late submission.",
      "Summary of observed behavior under stress testing."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "12345",
      "A-19",
      "2023-07-28",
      "INV-000123",
      "Pending review",
      "john.doe@example.com"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Long Description",
      "Product Description",
      "Additional Notes",
      "User Comments",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Status",
      "Quantity",
      "Code",
      "Record Number",
      "Comment Count"
    ],
    "explanation": "This semantic type identifies free-form, human-readable narrative fields such as descriptions, notes, and comments. It is intended to detect columns where the primary content is unstructured explanatory text rather than structured codes, dates, or numeric identifiers.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:45.760345"
  },
  {
    "resultType": "generated",
    "semanticType": "period",
    "description": "A text field containing quarter identifiers that follow the pattern Q[1-4], consisting of the letter Q followed by a digit from 1 to 4. The format represents standard business and financial quarter notation where Q1\u2013Q4 correspond to the four three-month periods of a year.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "Q1",
      "Q2",
      "Q3",
      "Q4"
    ],
    "backout": "^Q[1-4]$",
    "confidenceThreshold": 98,
    "priority": 9820,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\byear\\b.*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Year Quarter"
        ],
        "negativeExamples": [
          "Full Year"
        ]
      },
      {
        "regExp": "(?i).*\\bquarterly\\b.*\\bperiod\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Quarterly Period"
        ],
        "negativeExamples": [
          "Quarterly Bonus"
        ]
      },
      {
        "regExp": "(?i).*\\bfiscal\\b.*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Fiscal Quarter"
        ],
        "negativeExamples": [
          "Fiscal Month"
        ]
      },
      {
        "regExp": "(?i).*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Quarter"
        ],
        "negativeExamples": [
          "Month"
        ]
      },
      {
        "regExp": "(?i).*\\bqtr\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Qtr"
        ],
        "negativeExamples": [
          "Qty"
        ]
      },
      {
        "regExp": "(?i).*\\bperiod\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Period"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Q1",
      "Q2",
      "Q3",
      "Q4",
      "Q1",
      "Q4"
    ],
    "negativeContentExamples": [
      "Q5",
      "Q0",
      "1Q",
      "Q 1",
      "Q-1",
      "Quarter 1",
      "FYQ1",
      "Q1 2023"
    ],
    "positiveHeaderExamples": [
      "Quarter",
      "Year Quarter",
      "Quarterly Period",
      "Fiscal Quarter",
      "Qtr",
      "Period",
      "Current Quarter"
    ],
    "negativeHeaderExamples": [
      "Half Year",
      "Month",
      "Full Year",
      "Quarterback",
      "Qty",
      "Date",
      "Week",
      "Month Number"
    ],
    "explanation": "This semantic type identifies quarter abbreviations Q1 to Q4 used in business and financial datasets. It is implemented as a finite list to ensure strict matching and prevent false positives, with a backout pattern capturing the domain shape for recovery.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:46.168876"
  },
  {
    "resultType": "generated",
    "semanticType": "project",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}[A-Za-z0-9 ,.;:'\"()\\-/?!%&@#]*\\s+[A-Za-z][A-Za-z0-9 ,.;:'\"()\\-/?!%&@#]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9560,
    "headerPatterns": [
      {
        "regExp": "(?i).*(project|task|issue).*(description|details|summary|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_description"
        ],
        "negativeExamples": [
          "project_id"
        ]
      },
      {
        "regExp": "(?i).*(record|item|work).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "record_notes"
        ],
        "negativeExamples": [
          "record_date"
        ]
      },
      {
        "regExp": "(?i).*(desc|comment|remarks|rem|note|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "code"
        ]
      },
      {
        "regExp": "(?i).*(free|long).*(text|form).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "price_amount"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Initial project setup and environment configuration completed.",
      "Client requested updates to the milestone dates and scope.",
      "Pending review: add error handling for edge cases.",
      "This module aggregates metrics from multiple data sources.",
      "Notes: requires coordination with the QA team next sprint.",
      "See attached diagram for architecture; revise if needed.",
      "Blocked by vendor API downtime; retry scheduled at 18:00.",
      "Please document assumptions before deployment."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "9.99",
      "2024-01-31",
      "ID-9981",
      "john.doe@example.com",
      "A B",
      "ID 12345"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Project Description",
      "Record Notes",
      "Summary",
      "Free Text",
      "Narrative"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "Status",
      "Code",
      "Quantity",
      "Amount"
    ],
    "explanation": "This semantic type identifies free-form narrative fields commonly used for descriptions, notes, comments, or summaries. It targets multi-word text containing letters, spaces, and optional punctuation, distinguishing it from single-token identifiers, codes, or numeric/date values. Use it to detect columns intended for human-readable explanatory text rather than structured data.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:46.419791"
  },
  {
    "resultType": "generated",
    "semanticType": "created",
    "description": "A numeric field containing timestamp values that follow the pattern of exactly 10 consecutive digits representing seconds since the Unix epoch. The format provides second-precision timing commonly used in Unix systems, APIs, and standard timestamp applications.",
    "pluginType": "regex",
    "regexPattern": "\\b[0-9]{10}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9710,
    "headerPatterns": [
      {
        "regExp": "(?i).*(unix|epoch).*(timestamp|time).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*unix.*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      },
      {
        "regExp": "(?i).*epoch.*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Formatted Date"
        ]
      },
      {
        "regExp": "(?i).*epoch.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      }
    ],
    "positiveContentExamples": [
      "946684800",
      "978307200",
      "1234567890",
      "1500000000",
      "1609459200",
      "1672531199",
      "1700000000",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "123456789",
      "01609459200",
      "1609459200.0",
      "T1609459200",
      "1609-459200",
      "21474836470",
      "16094592O0"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Created Timestamp",
      "Record Unix Time",
      "Event Epoch",
      "Unix Epoch Timestamp",
      "Transaction Timestamp"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Created Date",
      "ISO Date",
      "Local Time",
      "Datetime",
      "Human Readable Time"
    ],
    "explanation": "This semantic type identifies 10-digit integer values representing seconds since the Unix epoch (1970-01-01T00:00:00Z). It is useful for detecting raw second-precision timestamps in logs, API payloads, and system event data where timestamps are stored as integers rather than formatted dates.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:47.498443"
  },
  {
    "resultType": "generated",
    "semanticType": "day",
    "description": "A numeric field containing day values representing valid calendar days 1\u201331. Values are integers with no leading zeros and denote the day component of a month.\nWhen combined with month/year context, additional validation can ensure month-specific limits; this type itself focuses solely on the 1\u201331 range.",
    "pluginType": "regex",
    "regexPattern": "\\b(3[01]|[12][0-9]|[1-9])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9620,
    "headerPatterns": [
      {
        "regExp": "(?i).*day[ _-]*of[ _-]*month[ _-]*(number|num|no).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Day of Month Number"
        ],
        "negativeExamples": [
          "Day of Week Number"
        ]
      },
      {
        "regExp": "(?i).*(date|calendar)[ _-]*day[ _-]*(number|num|no).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Calendar Day Num"
        ],
        "negativeExamples": [
          "Calendar Month Num"
        ]
      },
      {
        "regExp": "(?i).*day[ _-]*of[ _-]*month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Day of Month"
        ],
        "negativeExamples": [
          "Day Name"
        ]
      },
      {
        "regExp": "(?i).*(day[ _-]*(no|num)|dom).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Day No"
        ],
        "negativeExamples": [
          "Month Num"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Date Number"
        ],
        "negativeExamples": [
          "Date Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "2",
      "7",
      "9",
      "10",
      "15",
      "21",
      "31"
    ],
    "negativeContentExamples": [
      "0",
      "32",
      "33",
      "99",
      "01",
      "09",
      "00",
      "40"
    ],
    "positiveHeaderExamples": [
      "Day",
      "Day of Month",
      "Date Number",
      "Day Num",
      "Day No",
      "DOM",
      "Calendar Day",
      "Day Index"
    ],
    "negativeHeaderExamples": [
      "Month",
      "Year",
      "Day Name",
      "Day of Week",
      "Weekday",
      "Date Code",
      "Invoice ID",
      "Quarter"
    ],
    "explanation": "This semantic type identifies numeric day-of-month values where valid entries are integers from 1 to 31 without leading zeros. It is useful when parsing or validating date components stored in separate fields, performing range checks, or normalizing date structures for analytics and transformations.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:47.818853"
  },
  {
    "resultType": "generated",
    "semanticType": "tag",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9,.'\"/()\\-]{2,}\\s+[A-Za-z0-9][A-Za-z0-9,.'\"/()\\-]{2,}\\s+[A-Za-z0-9][A-Za-z0-9,.'\"/()\\-]{2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9830,
    "headerPatterns": [
      {
        "regExp": "(?i).*(description|comment|notes?).*text.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "comment_text"
        ],
        "negativeExamples": [
          "comment_count"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed|free|additional).*description.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "additional_description"
        ],
        "negativeExamples": [
          "description_code"
        ]
      },
      {
        "regExp": "(?i).*(customer|internal|public).*comments?.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(description|comments?|notes?|remarks?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmnt|rmk).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent connection issues.",
      "Please deliver packages to the rear entrance.",
      "This item requires special handling due to fragility.",
      "Returned because packaging was damaged in transit.",
      "Use for internal testing only; do not distribute.",
      "Contains setup instructions and a quick start guide.",
      "Applicable for promotional campaigns in urban areas.",
      "User noted frequent delays during peak hours."
    ],
    "negativeContentExamples": [
      "OK thanks",
      "See attached",
      "N/A",
      "Pending",
      "2024-10-09",
      "ID-12345",
      "A quick",
      "OK to ship"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "comment_text",
      "LongDescription",
      "Customer_Comments",
      "Internal_Notes",
      "remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status",
      "PostalCode",
      "Phone",
      "InvoiceNumber"
    ],
    "explanation": "This semantic type targets free-form descriptive fields such as descriptions, comments, notes, and remarks. It is intentionally broad and relies primarily on header cues combined with a value pattern that favors multi-word narrative text over short codes, identifiers, or single-word statuses.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:47.819108"
  },
  {
    "resultType": "generated",
    "semanticType": "age",
    "description": "A numeric field containing age values that follow the pattern of 1\u20133 digits representing years since birth as whole numbers. Typical values range from 0 to approximately 120 years, using integer values only without decimal places or additional units.",
    "pluginType": "regex",
    "regexPattern": "\\b(120|1[01][0-9]|[1-9]?[0-9])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9500,
    "headerPatterns": [
      {
        "regExp": "(?i).*(person|employee|customer).*age.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Person Age"
        ],
        "negativeExamples": [
          "Birth Year"
        ]
      },
      {
        "regExp": "(?i).*years.*old.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Years Old"
        ],
        "negativeExamples": [
          "Date of Birth"
        ]
      },
      {
        "regExp": "(?i).*(yrs|yr|yo).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Age yrs"
        ],
        "negativeExamples": [
          "Year"
        ]
      },
      {
        "regExp": "(?i).*age.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Age"
        ],
        "negativeExamples": [
          "Name"
        ]
      },
      {
        "regExp": "(?i).*(number|num).*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Age Number"
        ],
        "negativeExamples": [
          "Customer Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "1",
      "7",
      "18",
      "35",
      "64",
      "99",
      "120"
    ],
    "negativeContentExamples": [
      "121",
      "-1",
      "001",
      "09",
      "999",
      "1e2",
      "age30",
      "30age"
    ],
    "positiveHeaderExamples": [
      "Age",
      "Person Age",
      "Years Old",
      "Age Years",
      "Employee Age",
      "Age (Years)",
      "Customer Age",
      "Age yrs"
    ],
    "negativeHeaderExamples": [
      "Birth Year",
      "Date of Birth",
      "Name",
      "Years Employed",
      "Experience Years",
      "Customer Number",
      "Year",
      "DOB"
    ],
    "explanation": "This semantic type detects integer ages in years, focusing on 0\u2013120 with no decimals, units, or additional text. It is useful for demographic or personal attributes where the value is a whole number of completed years.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:48.099106"
  },
  {
    "resultType": "generated",
    "semanticType": "season",
    "description": "A text field containing quarter identifiers in the form Q1, Q2, Q3, or Q4, where the letter Q is followed by a single digit from 1 to 4. This represents standard business and financial quarter notation.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "Q1",
      "Q2",
      "Q3",
      "Q4"
    ],
    "backout": "^Q[1-4]$",
    "confidenceThreshold": 98,
    "priority": 9700,
    "headerPatterns": [
      {
        "regExp": "(?i).*year.*quarter.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Year Quarter"
        ],
        "negativeExamples": [
          "Year Half"
        ]
      },
      {
        "regExp": "(?i).*fiscal.*quarter.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Fiscal Quarter"
        ],
        "negativeExamples": [
          "Fiscal Month"
        ]
      },
      {
        "regExp": "(?i).*quarterly.*period.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Quarterly Period"
        ],
        "negativeExamples": [
          "Quarterly Sales"
        ]
      },
      {
        "regExp": "(?i).*qtr.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Qtr"
        ],
        "negativeExamples": [
          "Qty"
        ]
      },
      {
        "regExp": "(?i).*quarter.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Quarter"
        ],
        "negativeExamples": [
          "Month"
        ]
      }
    ],
    "positiveContentExamples": [
      "Q1",
      "Q2",
      "Q3",
      "Q4",
      "Q1",
      "Q3"
    ],
    "negativeContentExamples": [
      "Q0",
      "Q5",
      "1Q",
      "Q 1",
      "q1",
      "QQ1",
      "Q-1",
      "Quarter1"
    ],
    "positiveHeaderExamples": [
      "Quarter",
      "Year Quarter",
      "Quarterly Period",
      "Fiscal Quarter",
      "Reporting Quarter",
      "Qtr",
      "Yr Qtr"
    ],
    "negativeHeaderExamples": [
      "Half Year",
      "Month",
      "Full Year",
      "Semester",
      "Trimester",
      "Monthly Period",
      "Year"
    ],
    "explanation": "This semantic type identifies quarter tokens used in reporting and analytics, strictly limited to Q1\u2013Q4. It is useful for parsing period dimensions in financial and operational datasets where quarters are recorded as compact tokens.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:49.030486"
  },
  {
    "resultType": "generated",
    "semanticType": "currency",
    "description": "A text field containing currency names that follow standard English financial terminology and proper capitalization. The format consists of alphabetic characters representing established monetary units as commonly used in international commerce and finance.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Z][a-z]+( [A-Z][a-z]+){0,3} )?(Ariary|Balboa|Baht|Birr|Bolivar|Colon|Cordoba|Dalasi|Denar|Dinar|Dirham|Dollar|Dong|Dram|Escudo|Euro|Forint|Franc|Gourde|Guarani|Hryvnia|Kina|Kip|Kroon|Krone|Kroner|Krona|Kronur|Kwanza|Kwacha|Kyat|Lari|Lek|Lempira|Leone|Lev|Leu|Lilangeni|Lira|Loti|Manat|Metical|Naira|Nakfa|Ngultrum|Ouguiya|Pataca|Peso|Pound|Pula|Quetzal|Rand|Real|Rial|Riyal|Ringgit|Ruble|Rouble|Rufiyaa|Rupee|Shekel|Shilling|Sol|Som|Somoni|Taka|Tala|Tenge|Tugrik|Tugrug|Vatu|Won|Yen|Yuan|Zloty)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9780,
    "headerPatterns": [
      {
        "regExp": "(?i).*currency.*name.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Currency Name"
        ],
        "negativeExamples": [
          "Currency Code"
        ]
      },
      {
        "regExp": "(?i).*(payment|transaction).*currency.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Payment Currency"
        ],
        "negativeExamples": [
          "Exchange Rate"
        ]
      },
      {
        "regExp": "(?i).*(curr|mon).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "Money"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Currency Name"
        ],
        "negativeExamples": [
          "Currency Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Euro",
      "Japanese Yen",
      "British Pound",
      "Indian Rupee",
      "Canadian Dollar",
      "Swiss Franc",
      "Brazilian Real",
      "South African Rand"
    ],
    "negativeContentExamples": [
      "USD",
      "euros",
      "United States Dollar 2023",
      "HK Dollar",
      "Pound Sterling",
      "Swiss-Franc",
      "Brazilian Reals",
      "Japanese Yen."
    ],
    "positiveHeaderExamples": [
      "Currency",
      "Currency Name",
      "Money",
      "Payment Currency",
      "Transaction Currency",
      "Base Currency Name",
      "Local Currency",
      "Reporting Currency Name"
    ],
    "negativeHeaderExamples": [
      "Currency Code",
      "Exchange Rate",
      "Country",
      "Amount",
      "Price",
      "Monetary Value",
      "FX Rate",
      "Country Name"
    ],
    "explanation": "This semantic type identifies spelled-out currency names with proper capitalization, typically ending with a recognized monetary unit such as Dollar, Euro, Yen, Pound, Rupee, or similar. It is designed to distinguish full currency names from codes or numeric amounts and to support classification of financial fields that store the textual denomination of money.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:57.058350"
  },
  {
    "resultType": "generated",
    "semanticType": "elevation",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\"/()\\-]*\\s+[A-Za-z0-9][A-Za-z0-9'\"/()\\-]*\\s+[A-Za-z0-9][A-Za-z0-9'\"/().,\\-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9800,
    "headerPatterns": [
      {
        "regExp": "(?i).*(full|detailed|extended).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "full_description"
        ],
        "negativeExamples": [
          "description"
        ]
      },
      {
        "regExp": "(?i).*(project|customer|order|user).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(free|additional|misc).*(text|details|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|cmt|rmk).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver to the rear entrance after 5pm.",
      "Customer reported intermittent issues with login.",
      "Payment received; processing will complete tomorrow.",
      "On hold pending approval from finance.",
      "The package was damaged during transit.",
      "Use blue ink for signatures only.",
      "Meeting rescheduled due to inclement weather.",
      "Returns must include the original receipt for refund."
    ],
    "negativeContentExamples": [
      "Note: urgent",
      "N/A",
      "TBD",
      "2024-07-15",
      "ID-12345",
      "Approved",
      "See notes",
      "Price: 9.99"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Long Description",
      "Internal Comments",
      "User Notes",
      "Additional Text",
      "Project Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Order ID",
      "Birth Date",
      "Unit Price",
      "Customer Code",
      "Quantity"
    ],
    "explanation": "This semantic type targets free-form narrative fields commonly used for descriptions, notes, and comments. The content pattern expects at least three word-like tokens to differentiate narrative text from short codes, dates, or terse labels. Header patterns prioritize explicit description/comment terminology and common abbreviations, with a final primitive match on the generic 'text'. The high threshold and priority help avoid collisions with more specific structured types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:58.346567"
  },
  {
    "resultType": "generated",
    "semanticType": "depth",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'(),\\/-]{2,}\\s+[A-Za-z0-9][A-Za-z0-9'(),\\/-]{2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9810,
    "headerPatterns": [
      {
        "regExp": "(?i).*(detailed|long).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Description"
        ],
        "negativeExamples": [
          "Item Description"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|client|internal).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Notes"
        ],
        "negativeExamples": [
          "Customer ID"
        ]
      },
      {
        "regExp": "(?i).*(details|summary|overview).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Issue Summary"
        ],
        "negativeExamples": [
          "Issue Type"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmts|cmt|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Desc"
        ],
        "negativeExamples": [
          "Discount Rate"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Comments"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached specifications and provide feedback.",
      "Customer reported intermittent failures during checkout flow.",
      "Use this field to capture any additional context or comments.",
      "Error 404 observed at 12:45; logs attached for analysis.",
      "Package arrived damaged; requesting replacement and refund.",
      "System performance improved after cache warm-up on restart.",
      "Clarifies requirements for mobile app notifications and badges.",
      "Steps to reproduce: open the app, navigate to settings, and toggle sync."
    ],
    "negativeContentExamples": [
      "Pending",
      "N/A",
      "OK - done",
      "2024-01-05",
      "SKU_1001",
      "ID-12345",
      "X Y",
      "Done."
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Customer Notes",
      "User Comments",
      "Item Description",
      "Issue Summary"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Code",
      "Status",
      "Email",
      "Order Number"
    ],
    "explanation": "This semantic type captures free-form descriptive text intended for narrative content such as descriptions, notes, and comments. It is geared toward fields where users provide explanatory or contextual information rather than structured codes, numbers, or dates.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:49:59.410867"
  },
  {
    "resultType": "generated",
    "semanticType": "alias",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9]{1,}\\b[\\s,.;:!?\\-\u2013\u2014]+\\b[A-Za-z][A-Za-z0-9]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9580,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|customer|ticket|issue).*(description|comments?|notes?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(internal|external|public|admin).*(notes?|comments?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "external_id"
        ]
      },
      {
        "regExp": "(?i).*\\b(desc|descr|description)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "product_name"
        ]
      },
      {
        "regExp": "(?i).*\\b(cmt|cmts|comment|comments)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_cmts"
        ],
        "negativeExamples": [
          "commit_hash"
        ]
      },
      {
        "regExp": "(?i).*(description|comments?|notes?|remark|remarks|text|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "User reported intermittent timeouts during checkout.",
      "Requires follow-up call on 2025-07-14.",
      "Replacement part #A-17 installed; performance normal.",
      "Payment posted; awaiting bank confirmation.",
      "See attached docs\u2014review pending.",
      "No issues observed during QA.",
      "Duplicate entry removed (see ticket 4832).",
      "Follow up ASAP with vendor."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "123456",
      "A-1",
      "2025-07-14",
      "TRUE",
      "SKU-00123",
      "error"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Internal Notes",
      "Customer Comments",
      "Product Description",
      "Additional Remarks",
      "Public Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status Code",
      "Zip",
      "SKU",
      "Phone Number"
    ],
    "explanation": "This semantic type targets free-form textual fields commonly used for descriptions, comments, notes, and similar narrative content. The content regex requires at least two word tokens beginning with letters and separated by whitespace or punctuation, which helps distinguish descriptive text from single tokens, pure codes, or numeric-only values. Header patterns prioritize specific domain-prefixed labels, then common variations and abbreviations, down to primitive core terms like description, comments, notes, or text.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:01.401055"
  },
  {
    "resultType": "generated",
    "semanticType": "creator",
    "description": "A text field containing complete names that follow two tokens separated by a single space, each token composed of alphabetic characters with optional internal apostrophes or hyphens. The format excludes numerical digits, titles, suffixes, and additional middle names.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Za-z]|[A-Za-z][A-Za-z'-]*[A-Za-z]) ([A-Za-z]|[A-Za-z][A-Za-z'-]*[A-Za-z])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9760,
    "headerPatterns": [
      {
        "regExp": "(?i).*creator.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Creator Name"
        ],
        "negativeExamples": [
          "First Name"
        ]
      },
      {
        "regExp": "(?i).*author.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Author Name"
        ],
        "negativeExamples": [
          "Last Name"
        ]
      },
      {
        "regExp": "(?i).*person.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Person Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      },
      {
        "regExp": "(?i).*full.?name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "FullName"
        ],
        "negativeExamples": [
          "Username"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Account ID"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Mary-Jane O'Neil",
      "James O'Connor",
      "Anne-Marie Clark",
      "D'Arcy O'Leary",
      "Jean-Luc Martin",
      "Li Wei",
      "Peter O'Hara"
    ],
    "negativeContentExamples": [
      "John A Smith",
      "John  Smith",
      "John-Smith",
      "Dr John Smith",
      "J. Smith",
      "\u00c9mile Zola",
      "Mary O'Neill2",
      "O'Neil"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Creator Name",
      "Author Name",
      "FullName",
      "Customer Full Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Username",
      "Account Name",
      "Given Name",
      "Surname"
    ],
    "explanation": "This semantic type captures two-part personal names where the first and last components contain only letters, with optional internal apostrophes or hyphens, separated by exactly one space. It excludes records with titles, suffixes, middle names, or characters outside A\u2013Z, apostrophe, and hyphen.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:11.770807"
  },
  {
    "resultType": "generated",
    "semanticType": "route",
    "description": "A text field containing complete English street names that follow standard formatting patterns combining the base name with appropriate type suffixes. The format represents standard English street naming conventions used in postal addressing and navigation systems.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(([NSEW]|NE|NW|SE|SW)\\s)?([A-Za-z0-9]+(['-][A-Za-z0-9]+)*(\\s[A-Za-z0-9]+(['-][A-Za-z0-9]+)*){0,3})\\s(Street|St|Road|Rd|Avenue|Ave|Boulevard|Blvd|Drive|Dr|Lane|Ln|Court|Ct|Way|Terrace|Ter|Place|Pl|Parkway|Pkwy|Highway|Hwy|Circle|Cir|Trail|Trl)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9680,
    "headerPatterns": [
      {
        "regExp": "(?i).*(street|road|route|avenue|boulevard|drive|lane|court|parkway|highway).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street Name"
        ],
        "negativeExamples": [
          "House Number"
        ]
      },
      {
        "regExp": "(?i).*route.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Route Name"
        ],
        "negativeExamples": [
          "City"
        ]
      },
      {
        "regExp": "(?i).*(street|road|avenue|boulevard|drive|lane|court|parkway|highway).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street"
        ],
        "negativeExamples": [
          "ZIP Code"
        ]
      },
      {
        "regExp": "(?i).*\\b(st|rd|ave|blvd|dr|ln|ct|pkwy|hwy)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Rd"
        ],
        "negativeExamples": [
          "Address"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Road Name"
        ],
        "negativeExamples": [
          "House Number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Main Street",
      "Oak Rd",
      "Elm Avenue",
      "N 3rd St",
      "Old Mill Road",
      "Highland Blvd",
      "W Pine Lane",
      "River Terrace"
    ],
    "negativeContentExamples": [
      "123 Main",
      "Avenue of Oaks",
      "MainStreet",
      "4th",
      "PO Box 123",
      "Intersection",
      "Building Name",
      "Customer Address"
    ],
    "positiveHeaderExamples": [
      "Street Name",
      "Road Name",
      "Street",
      "Route Name",
      "Avenue Name",
      "Boulevard Name",
      "Road",
      "Street/Road"
    ],
    "negativeHeaderExamples": [
      "House Number",
      "City",
      "ZIP Code",
      "Street Number",
      "Address",
      "Postal Code",
      "Building Name",
      "Country"
    ],
    "explanation": "This type detects complete English street names composed of an optional leading direction (e.g., N, SE), one to four base name tokens, and a recognized street type suffix (e.g., Street, St, Road, Rd, Avenue, Ave, Boulevard, Blvd, Drive, Dr, Lane, Ln, Court, Ct, Way, Terrace, Ter, Place, Pl, Parkway, Pkwy, Highway, Hwy, Circle, Cir, Trail, Trl). It is intended for identifying route-level fields that represent the named thoroughfare component of an address without house numbers or unit details.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:12.202841"
  },
  {
    "resultType": "generated",
    "semanticType": "width",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9,.;:'\"!?()/\\-]* [A-Za-z0-9 ,.;:'\"!?()/\\-]{6,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9870,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|customer|user|item|review).*\\b(description|notes|comments|text)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*\\b(additional|detailed|general)\\b.*\\b(notes?|comments?)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_notes"
        ],
        "negativeExamples": [
          "additional_fee"
        ]
      },
      {
        "regExp": "(?i).*\\b(remark|remarks|narrative|summary)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "executive_summary"
        ],
        "negativeExamples": [
          "invoice_total"
        ]
      },
      {
        "regExp": "(?i).*\\b(desc|cmts|cmt|note)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "node"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Prescription"
        ]
      }
    ],
    "positiveContentExamples": [
      "Handle with care; fragile items.",
      "Customer requested gift wrap.",
      "Additional details provided below.",
      "Use T-25 screws and tighten evenly.",
      "If lost, return to front desk.",
      "Requires supervisor approval before shipment.",
      "Note: packaging may vary by batch.",
      "Installation completed on schedule."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "A-12",
      "SKU-AB12",
      "12345",
      "07/24",
      "john.doe@example.com",
      "See above"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "product_description",
      "customer_notes",
      "review_comments",
      "additional_text",
      "general_remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "status_code",
      "quantity",
      "email",
      "zip_code",
      "invoice_number"
    ],
    "explanation": "This semantic type targets free-form descriptive fields used for narratives, comments, and explanatory text. Content generally includes multiple words and punctuation rather than compact identifiers or codes. Detection relies primarily on semantic header cues such as description, notes, and comments, combined with a permissive text-oriented value shape while avoiding overly broad matches to emails, codes, or single tokens.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:12.365835"
  },
  {
    "resultType": "generated",
    "semanticType": "event",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\\\"()/-]{2,}\\s+[A-Za-z0-9][A-Za-z0-9 ,.;:!?\\\"'()/-]{5,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9880,
    "headerPatterns": [
      {
        "regExp": "(?i).*(event|incident|activity).*(description|details|summary).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Event Description"
        ],
        "negativeExamples": [
          "Event Date"
        ]
      },
      {
        "regExp": "(?i).*(event|incident|activity).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Incident Notes"
        ],
        "negativeExamples": [
          "Activity Code"
        ]
      },
      {
        "regExp": "(?i).*(description|details|summary).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Summary"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "System outage during maintenance window on 2024-07-15; services were intermittently unavailable.",
      "User reported error 504 when submitting the form; retry succeeded after 2 minutes.",
      "Conference keynote moved to Hall B due to capacity constraints.",
      "Payment processed successfully; receipt emailed to participant.",
      "Multiple retries observed; increasing backoff resolved the issue.",
      "Added clarification: tickets include lunch and Wi-Fi access.",
      "Deployment notes: rolled back to v1.2.3 after latency spike.",
      "Reminder: check-in opens at 08:30 and sessions start at 09:00."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "EVT-1023",
      "12345",
      "All good",
      "See note",
      "2024-07-15",
      "EVT 12"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Event Description",
      "Incident Notes",
      "Activity Comments",
      "Details",
      "Summary"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Status",
      "Code",
      "Event Date",
      "Amount",
      "Quantity"
    ],
    "explanation": "This semantic type targets freeform narrative text commonly used for event descriptions, notes, and comments. The value pattern prefers multi-token text with spaces and allows common punctuation, distinguishing it from terse identifiers, dates, or codes. Header patterns prioritize explicit event-related descriptors first, then broader description/notes terms, and finally the core primitive term 'description'.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:16.958058"
  },
  {
    "resultType": "generated",
    "semanticType": "max",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'()\\-.,!?;:]{1,}([ \\t]+[A-Za-z0-9][A-Za-z0-9'()\\-.,!?;:]{1,}){3,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9730,
    "headerPatterns": [
      {
        "regExp": "(?i).*(detailed|long).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_description"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*(internal|private).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "note_id"
        ]
      },
      {
        "regExp": "(?i).*(record|item).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "record_comments"
        ],
        "negativeExamples": [
          "user_comment"
        ]
      },
      {
        "regExp": "(?i).*(desc|remark|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_feedback"
        ],
        "negativeExamples": [
          "email_address"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "This feature allows flexible text entry for any use.",
      "Please provide detailed notes, including steps and results.",
      "Issue observed on 2024-09-15, see logs for details.",
      "User reported intermittent failures during upload.",
      "Mark as 'duplicate' if the explanation matches (see ticket).",
      "Costs include materials, labor, and taxes.",
      "Line 42 threw an exception: index out of range."
    ],
    "negativeContentExamples": [
      "Notes",
      "Test comment",
      "See attached file",
      "ABC-123-XYZ",
      "Updated,approved,scheduled",
      "Needs follow-up ASAP",
      "2024-01-01"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Internal Notes",
      "User Feedback",
      "Additional Text",
      "Record Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Status",
      "Customer Name",
      "Email",
      "SKU"
    ],
    "explanation": "This semantic type targets free-form narrative or explanatory text fields typically used for descriptions, notes, and comments. The content pattern favors multi-word entries (four or more tokens) to reduce collisions with short labels, IDs, or simple codes, while accommodating common punctuation and mixed characters found in real-world prose.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:20.720581"
  },
  {
    "resultType": "generated",
    "semanticType": "species",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9,.'()/-]{1,}\\s+[A-Za-z][A-Za-z0-9,.'()/-]{1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9640,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|record).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Product ID"
        ]
      },
      {
        "regExp": "(?i).*(user|customer|author).*comments?",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "User Comments"
        ],
        "negativeExamples": [
          "User ID"
        ]
      },
      {
        "regExp": "(?i).*(internal|review|general).*notes?",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Internal Notes"
        ],
        "negativeExamples": [
          "Internal Code"
        ]
      },
      {
        "regExp": "(?i).*(remarks?|details|free[_ ]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Remarks"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Requires follow-up after installation",
      "Customer reported intermittent failures during startup",
      "Compatible with v2.3 devices; see notes below",
      "Includes a 12-month warranty (limited)",
      "Not available in red; special order required",
      "Replacement part installed on 2024-07-15",
      "See attached report for calibration results",
      "High priority issue: investigate power draw"
    ],
    "negativeContentExamples": [
      "1234567890",
      "2024-04-03",
      "ID 98765",
      "SKU-9981-FF",
      "Unknown",
      "A12345",
      "ok 123",
      "x y"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "User Comments",
      "Internal Notes",
      "Remarks",
      "Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Quantity",
      "Email",
      "Status",
      "Invoice Number"
    ],
    "explanation": "This semantic type targets free-form descriptive text fields commonly labeled as description, notes, comments, remarks, or text. The value pattern prefers human-readable content by requiring at least two words that begin with letters, accommodating typical punctuation and digits within words while avoiding IDs, codes, or purely numeric strings. The high threshold and priority help prevent conflicts with more specific types.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:22.732844"
  },
  {
    "resultType": "generated",
    "semanticType": "road",
    "description": "A text field containing complete English street names that follow standard formatting patterns combining the base name with appropriate type suffixes. The format represents standard English street naming conventions used in postal addressing and navigation systems.",
    "pluginType": "regex",
    "regexPattern": "\\b((N|S|E|W|NE|NW|SE|SW)\\s+)?([A-Za-z0-9]*[A-Za-z][A-Za-z0-9'-]*)(\\s+[A-Za-z0-9]*[A-Za-z][A-Za-z0-9'-]*){0,3}\\s+(Street|St|Road|Rd|Avenue|Ave|Boulevard|Blvd|Lane|Ln|Drive|Dr|Court|Ct|Place|Pl|Terrace|Ter|Way|Parkway|Pkwy|Square|Sq|Highway|Hwy|Circle|Cir|Trail|Trl|Alley|Aly)(\\s+(N|S|E|W|NE|NW|SE|SW))?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9470,
    "headerPatterns": [
      {
        "regExp": "(?i).*(full|complete).*(street|road|avenue|boulevard|drive|lane|court).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Full Street Name"
        ],
        "negativeExamples": [
          "Street Number"
        ]
      },
      {
        "regExp": "(?i).*(street|road|avenue|boulevard|drive|lane|court).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Road Name"
        ],
        "negativeExamples": [
          "City Name"
        ]
      },
      {
        "regExp": "(?i).*\\b(st|rd|ave|blvd|dr|ln|ct)\\b.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Ave Name"
        ],
        "negativeExamples": [
          "State Name"
        ]
      },
      {
        "regExp": "(?i).*\\b(street|road|avenue|blvd|drive|lane|court)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street"
        ],
        "negativeExamples": [
          "ZIP Code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street Name"
        ],
        "negativeExamples": [
          "House Number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Main Street",
      "Elm St",
      "High Road",
      "Oak Avenue",
      "SE Market St",
      "Pine-Crest Blvd",
      "N 1st Avenue",
      "Cedar Grove Lane"
    ],
    "negativeContentExamples": [
      "123 Main Street",
      "Main Street Apt 5",
      "Street",
      "Oak Ave.",
      "West 3 Avenue",
      "Main Road North",
      "MarketStreet",
      "Avenue of the Americas"
    ],
    "positiveHeaderExamples": [
      "Street Name",
      "Road Name",
      "Street",
      "Full Street Name",
      "StreetName",
      "Ave Name",
      "Primary Road Name"
    ],
    "negativeHeaderExamples": [
      "House Number",
      "City",
      "ZIP Code",
      "Street Number",
      "Country",
      "Address Line 1",
      "Road Type"
    ],
    "explanation": "This semantic type targets complete English street names comprised of a base name and a recognized road type suffix (e.g., Street, Rd, Ave, Blvd), optionally including directional prefixes or suffixes using compass abbreviations (N, NE, etc.). It excludes house numbers and trailing unit designators to focus strictly on the street name itself.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:50:56.106542"
  },
  {
    "resultType": "generated",
    "semanticType": "price",
    "description": "A text field containing unrestricted content that may include any combination of letters, numbers, punctuation, and whitespace. The format allows complete freedom in content structure and length, accommodating narrative descriptions, comments, and explanatory text as needed.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9,.'\";:()/_-]{1,}[ ]+[A-Za-z0-9][A-Za-z0-9,.'\";:()/_-]{1,}[A-Za-z0-9 ,.'\";:()/_-]{6,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9510,
    "headerPatterns": [
      {
        "regExp": "(?i).*(detailed|long|free)[ _-]*(description|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(item|product|record|transaction)[ _-]*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Item_Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(user|customer|order)[ _-]*(comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "User Comments"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(remarks|desc|comment|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Long_Desc"
        ],
        "negativeExamples": [
          "Quantity"
        ]
      },
      {
        "regExp": "(?i).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Status"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Issue observed during login, please investigate.",
      "Customer requested expedited shipping on 05/14.",
      "Payment received in full; receipt emailed to user.",
      "Includes charger, manual, and original box.",
      "Notes: replace filter after 500 hours of use.",
      "This item is non-refundable per the return policy.",
      "Account closed due to inactivity over 12 months.",
      "User reported intermittent errors during checkout."
    ],
    "negativeContentExamples": [
      "N/A",
      "OK",
      "2024-05-14",
      "A-12345",
      "Complete",
      "Hello world",
      "Price: $12.99",
      "See above"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Item_Description",
      "Record Notes",
      "User Comments",
      "Long_Desc"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status",
      "SKU",
      "Code",
      "Email"
    ],
    "explanation": "This semantic type captures free-form descriptive text commonly found in columns like Description, Notes, or Comments. It relies primarily on header semantics with a conservative content pattern requiring multi-word, longer text to avoid collisions with codes, dates, and short labels. Use this type to identify narrative or explanatory fields rather than structured identifiers or numeric values.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:51:25.834875"
  },
  {
    "resultType": "generated",
    "semanticType": "role",
    "description": "A text field containing professional titles that typically follow standard occupational naming conventions and may include hierarchical indicators or specialization terms. The format allows alphabetic characters, spaces, common professional abbreviations, and may follow patterns like title case formatting without numerical codes.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Z]{2,5}\\.?|[A-Z][a-z]+\\.)([ /,&-](of|and|for|to|the|in))?([ /,&-]([A-Z]{2,5}\\.?|[A-Z][a-z]+\\.)){0,7}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9610,
    "headerPatterns": [
      {
        "regExp": "(?i).*job.*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Job Title"
        ],
        "negativeExamples": [
          "Job Level"
        ]
      },
      {
        "regExp": "(?i).*(employee|staff).*(title|role).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Employee Role"
        ],
        "negativeExamples": [
          "Staff Count"
        ]
      },
      {
        "regExp": "(?i).*(position|occupation).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Position"
        ],
        "negativeExamples": [
          "Department"
        ]
      },
      {
        "regExp": "(?i).*\\b(pos|occ)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "POS"
        ],
        "negativeExamples": [
          "Post Code"
        ]
      },
      {
        "regExp": "(?i).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Title"
        ],
        "negativeExamples": [
          "Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Software Engineer",
      "Senior Product Manager",
      "Chief Financial Officer",
      "VP Sales",
      "Director, Human Resources",
      "Head of Operations",
      "QA Engineer",
      "Marketing Specialist"
    ],
    "negativeContentExamples": [
      "Engineer 3",
      "123 Manager",
      "Nurse (Pediatrics)",
      "Team Lead - Level 1",
      "intern",
      "Title: Software Engineer",
      "Manager/Sales2",
      "CTO & Co-Founder 2"
    ],
    "positiveHeaderExamples": [
      "Job Title",
      "Position",
      "Occupation",
      "Role",
      "Employee Title",
      "Staff Role",
      "Job Position"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Company",
      "Salary",
      "Department",
      "Employee ID",
      "Start Date",
      "Job Level"
    ],
    "explanation": "This semantic type identifies professional or occupational titles, including hierarchical qualifiers and common abbreviations, without numeric codes. It targets values like 'Software Engineer', 'VP Sales', and 'Director, Human Resources' while excluding fields containing numbers or unrelated annotations.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:51:54.683866"
  },
  {
    "resultType": "generated",
    "semanticType": "reference",
    "description": "A unique string that combines uppercase letters and digits, optionally separated by underscores or hyphens, used to identify a record or object. It consists of alphanumeric segments and must contain at least one letter and one digit.",
    "pluginType": "regex",
    "regexPattern": "\\b(?=[A-Z0-9_-]*[A-Z])(?=[A-Z0-9_-]*[0-9])[A-Z0-9]+([_-][A-Z0-9]+)*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9650,
    "headerPatterns": [
      {
        "regExp": "(?i).*(reference).*(id|identifier|code).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Reference ID"
        ],
        "negativeExamples": [
          "Invoice Date"
        ]
      },
      {
        "regExp": "(?i).*(unique).*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "Name"
        ]
      },
      {
        "regExp": "(?i).*reference.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Reference Code"
        ],
        "negativeExamples": [
          "Description"
        ]
      },
      {
        "regExp": "(?i).*(identifier|id).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "Customer Name"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Code"
        ],
        "negativeExamples": [
          "Status"
        ]
      }
    ],
    "positiveContentExamples": [
      "REF-2023-0001",
      "INV_12345",
      "A1B2C3",
      "X9_7Z",
      "ORDER-AB12",
      "CUST_99X",
      "R3F-7A",
      "ID_4ZQ8"
    ],
    "negativeContentExamples": [
      "REFERENCE",
      "123456",
      "REF/2023-01",
      "REF-2023-",
      "-REF-123",
      "REF 2023 001",
      "ABCD",
      "0000-0000"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "Reference ID",
      "Reference Code",
      "Ref",
      "Primary Identifier",
      "Order Reference"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "Status",
      "Title",
      "Amount",
      "Phone Number",
      "Notes"
    ],
    "explanation": "This type targets generic reference/identifier strings used as unique keys, allowing uppercase alphanumerics and separators (_) or (-). The regex requires at least one letter and one digit to prevent accidental matches with plain words or pure numbers, and header patterns prioritize explicit reference/ID naming while including a primitive 'code' fallback.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:52:05.570583"
  },
  {
    "resultType": "generated",
    "semanticType": "publisher",
    "description": "A text string representing a corporate or organizational publisher name that includes a legal entity suffix (e.g., Inc., LLC, Ltd., GmbH). It allows letters, spaces, and common punctuation typically found in formal company names.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[a-z][a-z0-9&\\.,'\u2019\\- ]{1,80}(,)?\\s+(inc|inc\\.|incorporated|llc|l\\.l\\.c|ltd|limited|plc|corp|corporation|company|co|gmbh|ag|bv|nv|sa|s\\.a|sas|s\\.a\\.s|srl|s\\.r\\.l|pty|pty ltd|kk|k\\.k|oy|ab|oyj|as)\\b\\.?",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9750,
    "headerPatterns": [
      {
        "regExp": "(?i).*(publisher|imprint).*(company|corporation|corp|org|organization|name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "publisher company name"
        ],
        "negativeExamples": [
          "publisher address"
        ]
      },
      {
        "regExp": "(?i).*(press|publishing).*(name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "press name"
        ],
        "negativeExamples": [
          "press code"
        ]
      },
      {
        "regExp": "(?i).*(company|corporation|corp|organization|org).*(name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "company name"
        ],
        "negativeExamples": [
          "company code"
        ]
      },
      {
        "regExp": "(?i).*(corp|co|org).*(name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "corp name"
        ],
        "negativeExamples": [
          "org id"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "North River Press Inc.",
      "Bright Leaf Media LLC",
      "Silver Oak Publishing Ltd.",
      "Blue Harbor Books Co.",
      "Summit Ridge Press Corporation",
      "Elm Street Editions GmbH",
      "Redwood House Publications, Inc.",
      "Stonebridge Media Group AG"
    ],
    "negativeContentExamples": [
      "North River Press (LLC)",
      "Bright Leaf Media",
      "Blue Harbor Books Partnership",
      "Elm Street Editions Sdn Bhd",
      "Stonebridge Media Group GbR",
      "Oakhill Publishing L.L.P.",
      "12345 LLC",
      "NorthRiverPressLLC"
    ],
    "positiveHeaderExamples": [
      "Company Name",
      "Organization",
      "Corporation",
      "Publisher",
      "Publisher Company Name",
      "Press Name",
      "Imprint Name"
    ],
    "negativeHeaderExamples": [
      "Stock Symbol",
      "Industry",
      "Employee Count",
      "Ticker",
      "SIC Code",
      "Revenue",
      "Headquarters Address",
      "VAT Number"
    ],
    "explanation": "This semantic type targets organization or publisher names that include an explicit legal entity suffix, improving precision over generic company-name detection. It is suitable for identifying columns containing formal corporate publisher names in bibliographic, catalog, or rights-management data.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:52:06.502706"
  },
  {
    "resultType": "generated",
    "semanticType": "prefix",
    "description": "A text field containing English honorific titles that typically follow established patterns for formal address including periods where appropriate. The format represents traditional and professional titles used in formal correspondence, official documents, and respectful communication contexts.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "MR.",
      "MRS.",
      "MS.",
      "MISS",
      "MX.",
      "DR.",
      "PROF.",
      "REV.",
      "HON.",
      "SIR",
      "DAME",
      "LADY",
      "LORD",
      "FR.",
      "SR.",
      "CAPT.",
      "COL.",
      "MAJ.",
      "GEN.",
      "LT.",
      "SGT.",
      "MADAM",
      "MASTER"
    ],
    "backout": "^[A-Z]{2,7}\\.?$",
    "confidenceThreshold": 96,
    "priority": 9530,
    "headerPatterns": [
      {
        "regExp": "(?i).*(name|person).*prefix.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name_prefix"
        ],
        "negativeExamples": [
          "first_name"
        ]
      },
      {
        "regExp": "(?i).*honorific.*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "honorific_title"
        ],
        "negativeExamples": [
          "job_title"
        ]
      },
      {
        "regExp": "(?i).*(prefix|honorific).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Prefix"
        ],
        "negativeExamples": [
          "Suffix"
        ]
      },
      {
        "regExp": "(?i).*(prfx|ttl|hon).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ttl"
        ],
        "negativeExamples": [
          "addr"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "address"
        ]
      }
    ],
    "positiveContentExamples": [
      "MR.",
      "MRS.",
      "MS.",
      "MISS",
      "MX.",
      "DR.",
      "PROF.",
      "REV."
    ],
    "negativeContentExamples": [
      "MR",
      "MRS",
      "MS",
      "MX",
      "DR",
      "SIR.",
      "PROF",
      "MADAME"
    ],
    "positiveHeaderExamples": [
      "Title",
      "Honorific",
      "Prefix",
      "Name Prefix",
      "Person Title",
      "Honorific Title",
      "Courtesy Title"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Full Name",
      "Job Title",
      "Suffix",
      "Middle Name",
      "Given Name",
      "Preferred Name"
    ],
    "explanation": "This semantic type identifies common English honorifics used as name prefixes in datasets, such as MR., MRS., MS., DR., and similar forms. It is implemented as a finite list to ensure high precision around conventional, formal address tokens and their punctuation.",
    "description_pattern": "P4",
    "generated_at": "2025-08-10T18:54:02.369087"
  }
]