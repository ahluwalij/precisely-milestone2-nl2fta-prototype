[
  {
    "resultType": "generated",
    "semanticType": "time",
    "description": "A numeric timestamp representing whole seconds since January 1, 1970 UTC (Unix/Posix epoch). Values are non-negative integers typically 9\u201310 digits long (allowing 0), distinguishing them from millisecond or microsecond epochs.",
    "pluginType": "regex",
    "regexPattern": "\\b(0|[1-9][0-9]{8,9})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 96,
    "priority": 9040,
    "headerPatterns": [
      {
        "regExp": "(?i).*(unix|posix).*(timestamp|time).*(sec|seconds).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unix_timestamp_sec"
        ],
        "negativeExamples": [
          "timestamp_ms"
        ]
      },
      {
        "regExp": "(?i).*(epoch).*(seconds|secs).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "epoch_seconds"
        ],
        "negativeExamples": [
          "duration_seconds"
        ]
      },
      {
        "regExp": "(?i).*(epoch|epoc).*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "epoc_time"
        ],
        "negativeExamples": [
          "event_time"
        ]
      },
      {
        "regExp": "(?i).*(unix|posix).*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unix_time"
        ],
        "negativeExamples": [
          "average_time"
        ]
      },
      {
        "regExp": "(?i).*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "time"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "315532800",
      "631152000",
      "915148800",
      "1234567890",
      "1609459200",
      "1700000000",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1672531200000",
      "-1609459200",
      "1609459200.0",
      "0123456789",
      "12345678",
      "99999999999",
      "1609a59200",
      "+1609459200"
    ],
    "positiveHeaderExamples": [
      "unix_time",
      "epoch_seconds",
      "event_epoch_time",
      "posix_time",
      "timestamp_unix",
      "unix_timestamp_sec",
      "created_epoch",
      "unix_epoch"
    ],
    "negativeHeaderExamples": [
      "transaction_time",
      "timestamp_ms",
      "date",
      "duration_seconds",
      "timezone",
      "offset_seconds",
      "user_id",
      "epoch_nanos"
    ],
    "explanation": "This semantic type identifies Unix epoch timestamps stored as whole seconds. It is suitable for detecting columns that represent time as integer seconds since 1970-01-01 UTC. The pattern intentionally excludes millisecond/microsecond/nanosecond epochs, decimals, signed values, and strings with non-digit characters to reduce ambiguity with other numeric identifiers.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:26.966240"
  },
  {
    "resultType": "generated",
    "semanticType": "status",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z]{2,}[a-zA-Z0-9'()\\-]*\\s+[a-zA-Z]{2,}[a-zA-Z0-9'()\\-]*(\\s+[a-zA-Z0-9'(),\\-]{2,})*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9300,
    "headerPatterns": [
      {
        "regExp": "(?i).*status.*(comment|comments|note|notes|description|details).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "order_status_notes"
        ],
        "negativeExamples": [
          "order_status_code"
        ]
      },
      {
        "regExp": "(?i).*(comment|comments|note|notes|description|details).*status.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "incident_description_status"
        ],
        "negativeExamples": [
          "incident_description_summary"
        ]
      },
      {
        "regExp": "(?i).*status_?(message|text|update).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "status_message"
        ],
        "negativeExamples": [
          "error_message"
        ]
      },
      {
        "regExp": "(?i).*(ticket|case|order|issue).*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_status"
        ],
        "negativeExamples": [
          "ticket_id"
        ]
      },
      {
        "regExp": "(?i).*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "status"
        ],
        "negativeExamples": [
          "state"
        ]
      }
    ],
    "positiveContentExamples": [
      "In progress",
      "Pending review by team",
      "Awaiting customer response",
      "On hold due to budget",
      "Ready for deployment",
      "Completed successfully",
      "Needs approval from manager",
      "Issue under investigation"
    ],
    "negativeContentExamples": [
      "PENDING",
      "Open",
      "In-Progress",
      "N/A",
      "12345",
      "2023-06-01",
      "user@example.com",
      "http://example.com"
    ],
    "positiveHeaderExamples": [
      "order_status_notes",
      "status_message",
      "case_status_details",
      "status_update",
      "issue_status_comment",
      "status_text",
      "ticket_status",
      "status_description"
    ],
    "negativeHeaderExamples": [
      "status_code",
      "state",
      "ticket_id",
      "order_status_code",
      "status_date",
      "account_status_id",
      "status_flag",
      "error_message"
    ],
    "explanation": "This semantic type identifies free-text narrative fields commonly used for statuses, comments, notes, and descriptive updates associated with records. It expects multi-word text containing alphabetic words and optional punctuation, distinguishing it from codes, identifiers, or dates. Typical use cases include workflow status notes, customer service updates, and operational comments.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:29.405795"
  },
  {
    "resultType": "generated",
    "semanticType": "start",
    "description": "A numeric timestamp representing seconds elapsed since January 1, 1970 UTC, widely used in Unix systems and programming languages.",
    "pluginType": "regex",
    "regexPattern": "\\b(1[0-9]{9}|2[0-9]{9})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 96,
    "priority": 9380,
    "headerPatterns": [
      {
        "regExp": "(?i).*start.*(epoch|unix).*(sec|second|seconds).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "start_epoch_seconds"
        ],
        "negativeExamples": [
          "start_date"
        ]
      },
      {
        "regExp": "(?i).*start.*(epoch|unix).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "start_unix_time"
        ],
        "negativeExamples": [
          "unix_end_time"
        ]
      },
      {
        "regExp": "(?i).*(start|begin).*(timestamp|ts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "start_timestamp"
        ],
        "negativeExamples": [
          "end_timestamp"
        ]
      },
      {
        "regExp": "(?i).*(start|begin).*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "start_time"
        ],
        "negativeExamples": [
          "end_time"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "date"
        ],
        "negativeExamples": [
          "time"
        ]
      }
    ],
    "positiveContentExamples": [
      "1609459200",
      "1700000000",
      "1696118400",
      "2000000000",
      "1850000000",
      "2147483647",
      "1735689600",
      "1893456000"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "1609459200.0",
      "-1609459200",
      "0123456789",
      "99999999999",
      "12345678",
      "1700000000Z",
      "1,609,459,200"
    ],
    "positiveHeaderExamples": [
      "start",
      "start_epoch_seconds",
      "start_unix_time",
      "start_timestamp",
      "start_time",
      "epoch_start",
      "start_ts",
      "unix_start"
    ],
    "negativeHeaderExamples": [
      "end_time",
      "end_timestamp",
      "start_date",
      "created_at",
      "transaction_id",
      "duration_seconds",
      "timezone",
      "epoch_millis"
    ],
    "explanation": "This semantic type targets fields containing Unix epoch timestamps in seconds, typically represented as 10-digit integers for dates from 2001 through far-future years. It is useful for detecting raw second-based timestamps that need conversion to human-readable dates or time zones.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:29.522727"
  },
  {
    "resultType": "generated",
    "semanticType": "state",
    "description": "The full name of one of the fifty states or the federal district of the United States, representing the complete official designation of US administrative divisions. Values are the spelled\u2011out names (e.g., \"California\", \"District of Columbia\") and exclude abbreviations and US territories.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(ALABAMA|ALASKA|ARIZONA|ARKANSAS|CALIFORNIA|COLORADO|CONNECTICUT|DELAWARE|FLORIDA|GEORGIA|HAWAII|IDAHO|ILLINOIS|INDIANA|IOWA|KANSAS|KENTUCKY|LOUISIANA|MAINE|MARYLAND|MASSACHUSETTS|MICHIGAN|MINNESOTA|MISSISSIPPI|MISSOURI|MONTANA|NEBRASKA|NEVADA|NEW HAMPSHIRE|NEW JERSEY|NEW MEXICO|NEW YORK|NORTH CAROLINA|NORTH DAKOTA|OHIO|OKLAHOMA|OREGON|PENNSYLVANIA|RHODE ISLAND|SOUTH CAROLINA|SOUTH DAKOTA|TENNESSEE|TEXAS|UTAH|VERMONT|VIRGINIA|WASHINGTON|WEST VIRGINIA|WISCONSIN|WYOMING|DISTRICT OF COLUMBIA)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9140,
    "headerPatterns": [
      {
        "regExp": "(?i).*(full|complete).*(us|united states).*(state|district).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "full_us_state_name"
        ],
        "negativeExamples": [
          "us_state_name"
        ]
      },
      {
        "regExp": "(?i).*(us|united states).*(state|district).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "us_state_name"
        ],
        "negativeExamples": [
          "state_code"
        ]
      },
      {
        "regExp": "(?i).*(state|district).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "state_or_district_name"
        ],
        "negativeExamples": [
          "province_name"
        ]
      },
      {
        "regExp": "(?i).*(us|united states).*(state|district).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "united_states_state"
        ],
        "negativeExamples": [
          "us_state_code"
        ]
      },
      {
        "regExp": "(?i).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "state"
        ],
        "negativeExamples": [
          "country_name"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New Mexico",
      "District of Columbia",
      "Rhode Island",
      "North Dakota",
      "Hawaii",
      "Georgia",
      "Massachusetts"
    ],
    "negativeContentExamples": [
      "CA",
      "Washington, D.C.",
      "NewYork",
      "Puerto Rico",
      "District Columbia",
      "Massachussetts",
      "Columbia District",
      "United States"
    ],
    "positiveHeaderExamples": [
      "us_state_name",
      "state_full_name",
      "full_us_state_name",
      "state_or_district_name",
      "united_states_state",
      "state_name",
      "us_state",
      "billing_state_name"
    ],
    "negativeHeaderExamples": [
      "state_code",
      "province_name",
      "us_state_abbr",
      "country",
      "region",
      "status",
      "state_id",
      "territory_name"
    ],
    "explanation": "This semantic type recognizes the spelled-out names of US states and the federal district, enabling accurate classification of columns containing full state names (e.g., \"New York\", \"Texas\", \"District of Columbia\"). It is useful for standardizing location attributes, enriching geospatial joins, and validating that a field contains complete US state names rather than abbreviations or codes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:33.602977"
  },
  {
    "resultType": "generated",
    "semanticType": "name",
    "description": "A complete personal name combining first and last names in the conventional Western format with a space separator.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}(['-][A-Za-z]{2,})?\\s+[A-Za-z]{2,}(['-][A-Za-z]{2,})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9020,
    "headerPatterns": [
      {
        "regExp": "(?i).*person.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "person_full_name"
        ],
        "negativeExamples": [
          "person_id"
        ]
      },
      {
        "regExp": "(?i).*(full_name|fullname).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "full_name"
        ],
        "negativeExamples": [
          "filename"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|applicant).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_name"
        ],
        "negativeExamples": [
          "customer_code"
        ]
      },
      {
        "regExp": "(?i).*(fname.*lname|given.*family.*name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "fname_lname"
        ],
        "negativeExamples": [
          "first_name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "username"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Doe",
      "Mary Smith",
      "Peter-James O'Connor",
      "Alice Johnson",
      "Jean-Paul Sartre",
      "Linda O'Brien",
      "Li Wang",
      "Carlos Santana"
    ],
    "negativeContentExamples": [
      "J Doe",
      "John A. Doe",
      "Doe, John",
      "M. Smith",
      "JohnDoe",
      "O'Brien",
      "Mary Smith-S"
    ],
    "positiveHeaderExamples": [
      "person_full_name",
      "full_name",
      "customer_name",
      "user_full_name",
      "applicant_name",
      "fname_lname",
      "given_family_name"
    ],
    "negativeHeaderExamples": [
      "filename",
      "first_name",
      "last_name",
      "username",
      "customer_id",
      "company_name",
      "account_number"
    ],
    "explanation": "Identifies cells that contain a single full personal name represented as exactly two words: a first name and a last name separated by a space, with optional hyphen or apostrophe within each part. Useful for customer master data, contact lists, and identity matching where a unified first\u2013last name field is present.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:35.300879"
  },
  {
    "resultType": "generated",
    "semanticType": "domain",
    "description": "A Uniform Resource Locator specifying the address and access method for resources on the internet or other networks following RFC 3986 standards.",
    "pluginType": "regex",
    "regexPattern": "\\b((http|https|ftp|ftps|ws|wss)://)(([A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)+)|((\\d{1,3}\\.){3}\\d{1,3}))(:[0-9]{2,5})?(/[A-Za-z0-9._~!$&'()*+,;=:@%/-]*)?(\\?[A-Za-z0-9._~!$&'()*+,;=:@%/?-]*)?(#[A-Za-z0-9._~!$&'()*+,;=:@%/?-]*)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 92,
    "priority": 9340,
    "headerPatterns": [
      {
        "regExp": "(?i).*(website|landing|redirect|target|source).*(url|uri).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "landing_page_url"
        ],
        "negativeExamples": [
          "landing_page_id"
        ]
      },
      {
        "regExp": "(?i).*(page|profile|image|resource).*(url|uri).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "profile_uri"
        ],
        "negativeExamples": [
          "profile_name"
        ]
      },
      {
        "regExp": "(?i).*\\b(img|pic|avatar|thumb|banner)\\b.*\\b(url|uri)\\b.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "img_url"
        ],
        "negativeExamples": [
          "img_count"
        ]
      },
      {
        "regExp": "(?i).*\\b(link|href)\\b.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "profile_link"
        ],
        "negativeExamples": [
          "domain_name"
        ]
      },
      {
        "regExp": "(?i).*\\b(url|uri)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "url"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "https://example.com",
      "http://www.example.org/index.html",
      "https://sub.domain.co.uk:443/path/to/resource?query=1#section",
      "ftp://ftp.example.net/files/archive.tar.gz",
      "https://192.168.1.10:8080/api/v1/items?sort=asc",
      "wss://socket.example.com/stream",
      "http://blog.example.com/posts?id=42&draft=false",
      "ftps://secure.example.com/downloads/file.zip"
    ],
    "negativeContentExamples": [
      "www.example.com",
      "example.com/path",
      "http:/example.com",
      "https//example.com",
      "http://exa mple.com",
      "mailto:user@example.com",
      "ws://example",
      "http://localhost"
    ],
    "positiveHeaderExamples": [
      "website_url",
      "landing_page_url",
      "profile_uri",
      "redirect_url",
      "image_url",
      "target_url",
      "source_link",
      "page_url"
    ],
    "negativeHeaderExamples": [
      "email_address",
      "ip_address",
      "domain_name",
      "file_path",
      "phone_number",
      "postal_code",
      "transaction_id",
      "country_code"
    ],
    "explanation": "This semantic type detects full web URLs with schemes such as http, https, ftp, ftps, ws, and wss, including authority (domain or IPv4), optional port, path, query, and fragment components. It is useful for identifying columns containing links to web pages, APIs, media resources, or WebSocket endpoints across diverse datasets.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:35.452681"
  },
  {
    "resultType": "generated",
    "semanticType": "population",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9'-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9'-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9'-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9'-]{1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9270,
    "headerPatterns": [
      {
        "regExp": "(?i).*(study|target|eligible).*population.*(description|details|text|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "study_population_description"
        ],
        "negativeExamples": [
          "study_population_count"
        ]
      },
      {
        "regExp": "(?i).*population.*(description|details|text|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "population_notes"
        ],
        "negativeExamples": [
          "population_total"
        ]
      },
      {
        "regExp": "(?i).*(cohort|sample).*population.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "sample_population"
        ],
        "negativeExamples": [
          "sample_size"
        ]
      },
      {
        "regExp": "(?i).*(popn|pop).*?(desc|notes|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "popn_desc"
        ],
        "negativeExamples": [
          "popn_num"
        ]
      },
      {
        "regExp": "(?i).*population.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "population"
        ],
        "negativeExamples": [
          "population_code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Adults aged 18-65 living in urban areas with at least two years of residency.",
      "Households with children under five residing within the service district.",
      "Patients diagnosed within the last year and currently receiving outpatient care.",
      "Employees in full-time roles across headquarters and regional offices.",
      "First-time buyers seeking entry-level properties in suburban markets.",
      "Residents who reported internet access and own a smartphone.",
      "Undergraduate students enrolled in STEM programs during the fall term."
    ],
    "negativeContentExamples": [
      "Population total: 1200",
      "Adults 18-65 in city",
      "Urban residents only",
      "Count of residents",
      "POPULATION: 45%",
      "Adults, seniors, teens",
      "Adults_over_18_city"
    ],
    "positiveHeaderExamples": [
      "population_description",
      "study_population",
      "target_population_text",
      "population_notes",
      "sample_population_details",
      "eligible_population_description",
      "popn_desc"
    ],
    "negativeHeaderExamples": [
      "population_count",
      "population_total",
      "population_estimate",
      "population_code",
      "population_id",
      "popn_num",
      "sample_size"
    ],
    "explanation": "This semantic type identifies narrative, multi-word free text that describes a population or cohort in a dataset, such as eligibility criteria, scope, or qualitative attributes. It is tuned for fields like population descriptions, notes, and details rather than numeric counts. The regex requires at least five space-separated word tokens to distinguish descriptive text from short labels or numeric summaries. Header patterns prioritize explicit variants like study_population_description before falling back to the primitive population term. Because this type is broad and can overlap with many text fields, it uses a high confidence threshold and lower priority to minimize conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:37.412717"
  },
  {
    "resultType": "generated",
    "semanticType": "class",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\u2019\\-]*\\b(\\s+\\b[A-Za-z0-9][A-Za-z0-9'\u2019\\-]*\\b){3,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9280,
    "headerPatterns": [
      {
        "regExp": "(?i).*(issue|ticket|order|case|error).*(description|details|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "issue_status"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|client|agent).*(comment|comments|notes|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(product|item|record|entry).*(description|desc|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*(remarks?|memo|narrative|free[ _]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "subject"
        ]
      }
    ],
    "positiveContentExamples": [
      "The customer reported intermittent login failures today.",
      "Please provide a detailed quote by Friday morning.",
      "This item shows minor wear consistent with age.",
      "Follow up with the vendor regarding the missing parts.",
      "Use this field to capture any additional context provided.",
      "Steps to reproduce the issue are documented below.",
      "Shipment was delayed due to severe weather conditions.",
      "Meeting notes summarize key decisions and action items."
    ],
    "negativeContentExamples": [
      "TBD",
      "On hold",
      "OK to ship",
      "123 Main Street",
      "2023-10-05 follow-up",
      "Approved",
      "Pending",
      "Error 404"
    ],
    "positiveHeaderExamples": [
      "issue_description",
      "customer_comments",
      "internal_notes",
      "product_description",
      "issue_details",
      "remark_text",
      "free_text",
      "narrative"
    ],
    "negativeHeaderExamples": [
      "product_code",
      "customer_id",
      "status",
      "created_date",
      "order_number",
      "error_code",
      "subject",
      "priority"
    ],
    "explanation": "This semantic type captures free-form narrative text such as descriptions, comments, and notes. The regex requires at least four word tokens with the first token starting with a letter, which helps distinguish longer narrative content from short labels, codes, dates, or identifiers. Header patterns cover common application domains and synonyms (description, comments, details, notes, narrative, free text) and end with a primitive \"text\" matcher to ensure broad coverage while maintaining a hierarchical specificity.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:38.428454"
  },
  {
    "resultType": "generated",
    "semanticType": "code",
    "description": "A unique identifier used to distinguish one entity from another within a system or dataset. Typically appears as an alphanumeric token with optional hyphens or underscores and no spaces.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[A-Z0-9]{2,10}([-_][A-Z0-9]{2,10}){0,3}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9230,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client|account).*[ _-]code.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "customer_code"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(product|item|order).*[ _-]code.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "product_code"
        ],
        "negativeExamples": [
          "product_name"
        ]
      },
      {
        "regExp": "(?i).*(cust|prod|acct|usr|dept).*[ _-]code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_code"
        ],
        "negativeExamples": [
          "prod_id"
        ]
      },
      {
        "regExp": "(?i).*(status|error|promo|dept).*[ _-]code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "error_code"
        ],
        "negativeExamples": [
          "error_message"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "code"
        ],
        "negativeExamples": [
          "identifier"
        ]
      }
    ],
    "positiveContentExamples": [
      "AB12",
      "PRD-001",
      "INV_2024",
      "X9Y8Z7",
      "ACC_01_02",
      "SEC-PLN-03",
      "QWER-1234",
      "ZX-99"
    ],
    "negativeContentExamples": [
      "A",
      "AB 12",
      "PRD--001",
      "INV/2024",
      "SEC-PLN-003-EXTRA-LONG",
      "ABCDEFGHIJK",
      "PRD_",
      "12345678901"
    ],
    "positiveHeaderExamples": [
      "customer_code",
      "product_code",
      "error_code",
      "status_code",
      "promo_code",
      "dept_code",
      "location_code",
      "code"
    ],
    "negativeHeaderExamples": [
      "customer_id",
      "product_name",
      "error_message",
      "status",
      "promo",
      "quantity",
      "identifier",
      "reference_number"
    ],
    "explanation": "This semantic type targets generic system or business codes that are short, alphanumeric, and may include hyphens or underscores as separators. It is intentionally broad to cover common application keys like product codes, status codes, and promo codes, while excluding values with spaces or unsupported symbols.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:38.479187"
  },
  {
    "resultType": "generated",
    "semanticType": "race",
    "description": "Full descriptive terms for racial or ethnic categories used in demographic analysis, census data, and diversity reporting in English language contexts.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(white|caucasian|black(\\s+or\\s+african\\s+american)?|african\\s+american|asian|east\\s+asian|south\\s+asian|southeast\\s+asian|american\\s+indian(\\s+or\\s+alaska\\s+native)?|alaska\\s+native|native\\s+hawaiian(\\s+or\\s+other\\s+pacific\\s+islander)?|pacific\\s+islander|native\\s+hawaiian\\s+and\\s+pacific\\s+islander|hispanic|latino|latina|latinx|middle\\s+eastern|north\\s+african|mena|two\\s+or\\s+more\\s+races|multi[-\\s]?racial|bi[-\\s]?racial|prefer\\s+not\\s+to\\s+say|decline\\s+to\\s+state|prefer\\s+not\\s+to\\s+disclose)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9220,
    "headerPatterns": [
      {
        "regExp": "(?i).*(self[-_ ]?identified|self[-_ ]?id).*race.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "self_identified_race"
        ],
        "negativeExamples": [
          "race_category"
        ]
      },
      {
        "regExp": "(?i).*(race.*ethnic|ethnic.*race).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "race_ethnicity"
        ],
        "negativeExamples": [
          "ethnicity"
        ]
      },
      {
        "regExp": "(?i).*(racial|race).*category.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "race_category"
        ],
        "negativeExamples": [
          "category"
        ]
      },
      {
        "regExp": "(?i).*(racial.*group|race.*group).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "racial_group"
        ],
        "negativeExamples": [
          "age_group"
        ]
      },
      {
        "regExp": "(?i).*race.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "race"
        ],
        "negativeExamples": [
          "gender"
        ]
      }
    ],
    "positiveContentExamples": [
      "White",
      "Black or African American",
      "African American",
      "Asian",
      "American Indian or Alaska Native",
      "Native Hawaiian or Other Pacific Islander",
      "Hispanic or Latino",
      "Two or more races"
    ],
    "negativeContentExamples": [
      "European",
      "Caribbean",
      "Not specified",
      "Unknown",
      "American",
      "Aboriginal",
      "Indo-European",
      "Two or more"
    ],
    "positiveHeaderExamples": [
      "race",
      "race_category",
      "racial_group",
      "race_ethnicity",
      "ethnicity_race",
      "self_identified_race",
      "racial_identity",
      "race_group"
    ],
    "negativeHeaderExamples": [
      "ethnicity",
      "gender",
      "nationality",
      "language",
      "age",
      "continent",
      "origin_country",
      "skin_tone"
    ],
    "explanation": "This semantic type identifies free-text values that denote racial or ethnic categories commonly used in demographic, survey, and census contexts. It focuses on full descriptive labels rather than codes or abbreviations, covering widely used single-race groups, combined forms, and standard disclosure choices used in forms and reporting. Typical use cases include classifying survey responses, HR demographics, clinical intake forms, and public reporting datasets.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:39.769776"
  },
  {
    "resultType": "generated",
    "semanticType": "note",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z]{2,}\\b[ ,.;:()\\-]+\\b[a-zA-Z]{2,}\\b[ ,.;:()\\-]+\\b[a-zA-Z]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9090,
    "headerPatterns": [
      {
        "regExp": "(?i).*(additional[ _-]*notes?|internal[ _-]*notes?|public[ _-]*notes?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_notes"
        ],
        "negativeExamples": [
          "additional_number"
        ]
      },
      {
        "regExp": "(?i).*free[ _-]*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_tier"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|record)[ _-]*(note|comment)s?.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_note"
        ],
        "negativeExamples": [
          "customer_code"
        ]
      },
      {
        "regExp": "(?i).*(description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "desc_len"
        ]
      },
      {
        "regExp": "(?i).*(comment|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "rewards"
        ]
      },
      {
        "regExp": "(?i).*note.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "note"
        ],
        "negativeExamples": [
          "notice"
        ]
      }
    ],
    "positiveContentExamples": [
      "Follow-up scheduled for next week.",
      "Customer requested a call back regarding invoice.",
      "Left voicemail; awaiting response.",
      "Package left at front desk by courier.",
      "Issue persists after patch installation.",
      "See attached file for full report.",
      "Notes: requires manager approval.",
      "Comment added after review meeting."
    ],
    "negativeContentExamples": [
      "Note-123",
      "Approved 12/05",
      "Status: open",
      "N/A",
      "A-B test",
      "Error: 404",
      "Pending",
      "TBD"
    ],
    "positiveHeaderExamples": [
      "notes",
      "additional_notes",
      "internal_notes",
      "free_text",
      "freeform_text",
      "comment",
      "description",
      "remarks"
    ],
    "negativeHeaderExamples": [
      "desc_len",
      "text_flag",
      "feedback_rating",
      "memo_ref",
      "message",
      "reason_code",
      "status",
      "summary_id"
    ],
    "explanation": "This type identifies narrative or freeform textual fields that typically contain multi-word sentences such as descriptions, comments, and notes. It is intended for columns where users write explanatory or contextual information rather than structured codes or identifiers. The pattern focuses on detecting at least three alphabetic word tokens, which helps distinguish narrative text from short flags, codes, or numeric-only entries.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:40.304104"
  },
  {
    "resultType": "generated",
    "semanticType": "treatment",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9,.;:()/%'\"\\-]{1,} [A-Za-z0-9][A-Za-z0-9,.;:()/%'\"\\-]{1,} [A-Za-z0-9][A-Za-z0-9,.;:()/%'\"\\- ]{2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9350,
    "headerPatterns": [
      {
        "regExp": "(?i).*treatment.*(notes|description|comments|remarks|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "treatment_notes"
        ],
        "negativeExamples": [
          "treatment_code"
        ]
      },
      {
        "regExp": "(?i).*treatment.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "treatment"
        ],
        "negativeExamples": [
          "procedure"
        ]
      },
      {
        "regExp": "(?i).*(description|desc|descr|notes|note|comments|cmts|remarks|rmks|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "status_code"
        ]
      },
      {
        "regExp": "(?i).*(free.*text|narrative.*text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "narrative_text"
        ],
        "negativeExamples": [
          "text_encoding"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Treatment initiated due to persistent symptoms.",
      "Continue current regimen and reassess in two weeks.",
      "Patient reports mild nausea after morning dose.",
      "Apply ointment twice daily as directed.",
      "Replace filter; performance improved after cleaning.",
      "No adverse events observed during trial period.",
      "Please update schedule per supervisor's feedback.",
      "Follow-up appointment requested for next Monday."
    ],
    "negativeContentExamples": [
      "Reviewed",
      "Fix later",
      "N/A",
      "2023-04-10",
      "A12-B34",
      "123 456 789",
      "Not_applicable",
      "OK"
    ],
    "positiveHeaderExamples": [
      "treatment_notes",
      "treatment_description",
      "treatment_comments",
      "narrative_text",
      "free_text",
      "remarks",
      "details",
      "observation_notes"
    ],
    "negativeHeaderExamples": [
      "treatment_code",
      "treatment_date",
      "treatment_id",
      "treatment_name",
      "dosage",
      "procedure_type",
      "status_code",
      "patient_id"
    ],
    "explanation": "This semantic type identifies free-form narrative text fields such as descriptions, comments, notes, and remarks. The regex requires at least three space-separated tokens beginning with a letter and allows common punctuation, helping distinguish narrative phrases from codes, dates, or identifiers. Header patterns progress from highly specific compound names (e.g., treatment_notes) to the primitive term text, ensuring robust detection without overfitting. High threshold and priority reduce conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:41.407709"
  },
  {
    "resultType": "generated",
    "semanticType": "description",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9]+[A-Za-z0-9 ,.;:()'\"/&%#+-]{15,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9010,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|ticket|issue|item).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|account).*comments?.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(remarks|notes|narrative|freeform).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks_text"
        ],
        "negativeExamples": [
          "text_language"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmnt|rmk|note).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "item_desc"
        ],
        "negativeExamples": [
          "item_code"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent outages during peak hours.",
      "Use for internal notes and follow-up actions after site visit.",
      "Damaged packaging; requested replacement and refund by email.",
      "Initial setup completed successfully; awaiting QA sign-off.",
      "User described error when uploading large CSV files.",
      "Additional instructions: ship in two boxes with fragile stickers.",
      "This item is discontinued; see alternate SKU in catalog.",
      "Short description: billing address updated on 2024-06-15."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "See details",
      "Item: ABC-123",
      "Pending",
      "Name: John Doe",
      "OK to ship",
      "See note"
    ],
    "positiveHeaderExamples": [
      "description",
      "item_description",
      "order_notes",
      "customer_comments",
      "remarks_text",
      "issue_narrative",
      "freeform_text",
      "product_description"
    ],
    "negativeHeaderExamples": [
      "product_id",
      "order_status",
      "issue_type",
      "detail_code",
      "summary_flag",
      "customer_feedback_score",
      "text_language",
      "name"
    ],
    "explanation": "This semantic type identifies long-form, free-text narrative fields such as descriptions, notes, comments, and remarks typically used to capture contextual information that does not conform to a strict code or numeric schema. It is intended to distinguish narrative content from identifiers, codes, or structured attributes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:42.975745"
  },
  {
    "resultType": "generated",
    "semanticType": "weight",
    "description": "Measured mass/weight values represented as a numeric quantity followed by a weight unit (e.g., kg, g, lb, oz), with optional thousands separators and decimal fractions. Typical formats include values like 12 kg, 2.5 lbs, 500mg, or 1,200 lb.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b([0-9]{1,3}(,[0-9]{3})*|[0-9]+)(\\.[0-9]{1,3})?\\s?(kg|kgs|g|mg|lb|lbs|oz|kilogram|kilograms|gram|grams|pound|pounds|ounce|ounces|ton|tons)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9120,
    "headerPatterns": [
      {
        "regExp": "(?i).*(net|gross|tare|shipping).*weight.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "net_weight_kg"
        ],
        "negativeExamples": [
          "net_width_mm"
        ]
      },
      {
        "regExp": "(?i).*(product|item|package|parcel|order).*weight.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "product_weight"
        ],
        "negativeExamples": [
          "product_height"
        ]
      },
      {
        "regExp": "(?i).*\\b(wt|wgt|kg|lbs)\\b.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "package_wt"
        ],
        "negativeExamples": [
          "pkg_count"
        ]
      },
      {
        "regExp": "(?i).*mass.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "order_mass"
        ],
        "negativeExamples": [
          "volume_liters"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 88,
        "mandatory": true,
        "positiveExamples": [
          "weight_number"
        ],
        "negativeExamples": [
          "status_code"
        ]
      }
    ],
    "positiveContentExamples": [
      "12 kg",
      "0.5 kg",
      "250 g",
      "500mg",
      "1,200 lb",
      "2.5 lbs",
      "8 oz",
      "3 kilograms"
    ],
    "negativeContentExamples": [
      "10",
      "10kg approx",
      "approx 10 kg",
      "-5 kg",
      "1.2e3 kg",
      "15 liters",
      "3 stone",
      "weight: 10 kg"
    ],
    "positiveHeaderExamples": [
      "net_weight_kg",
      "gross_weight",
      "shipping_weight",
      "product_weight",
      "package_wt",
      "item_wgt",
      "order_mass",
      "total_weight_lbs"
    ],
    "negativeHeaderExamples": [
      "net_width_mm",
      "gross_amount",
      "shipping_date",
      "product_height",
      "package_cnt",
      "item_qty",
      "order_total",
      "volume_liters"
    ],
    "explanation": "This semantic type identifies cells containing weight/mass measurements expressed as a number followed by a recognized weight unit, optionally with thousands separators and decimal fractions. It is useful for standardizing and validating physical measurement fields such as product, package, net, gross, or shipping weight across datasets.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:43.110286"
  },
  {
    "resultType": "generated",
    "semanticType": "category",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z][a-zA-Z']{2,}\\b([ ,.;:]+\\b[a-zA-Z][a-zA-Z']{2,}\\b){3,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9070,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|ticket|case).*(description|comment|comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(internal|user|agent).*(notes|remarks|comments).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "internal_id"
        ]
      },
      {
        "regExp": "(?i).*(feedback|narrative|details|story|summary).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "narrative_details"
        ],
        "negativeExamples": [
          "status_detail"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|rmks|note|txt).*",
        "confidence": 91,
        "mandatory": true,
        "positiveExamples": [
          "product_desc"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer requested refund due to damage.",
      "Please deliver to back entrance after 5 pm.",
      "Package arrived late and box was partially open.",
      "User reported intermittent login issues today.",
      "See attached report for additional details.",
      "Delay caused by weather-related road closure.",
      "Contacted support and left a voicemail.",
      "Notes: item replaced under warranty."
    ],
    "negativeContentExamples": [
      "Pending review",
      "High priority",
      "REF-12345",
      "2024-03-10 update",
      "OK to ship",
      "John Doe",
      "123 Main St",
      "Status: New"
    ],
    "positiveHeaderExamples": [
      "order_description",
      "customer_comments",
      "internal_notes",
      "case_remarks",
      "feedback_text",
      "narrative_details",
      "product_desc",
      "free_text_notes"
    ],
    "negativeHeaderExamples": [
      "order_id",
      "customer_name",
      "status_code",
      "product_category",
      "street_address",
      "email",
      "quantity",
      "created_date"
    ],
    "explanation": "This semantic type targets free-form narrative fields such as descriptions, comments, notes, and remarks. It is useful for identifying columns where users enter unstructured explanatory text rather than structured codes, numbers, or identifiers. The detection pattern favors entries with at least four alphabetic words, reducing collisions with short labels, codes, or single-term values.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:44.198509"
  },
  {
    "resultType": "generated",
    "semanticType": "parent",
    "description": "A complete personal name combining a first and last name in the conventional Western format with a single space separator. Supports internal hyphens and apostrophes within each token (e.g., Anne-Marie, O'Brien).",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]{1,30}([-'][A-Z][a-z]{1,30})?\\s[A-Z][a-z]{1,30}([-'][A-Z][a-z]{1,30})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9370,
    "headerPatterns": [
      {
        "regExp": "(?i).*parent.*full.*name.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "parent_full_name"
        ],
        "negativeExamples": [
          "parent_email"
        ]
      },
      {
        "regExp": "(?i).*(mother|father).*full.*name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "mother_full_name"
        ],
        "negativeExamples": [
          "child_full_name"
        ]
      },
      {
        "regExp": "(?i).*(parent|mother|father).*name.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "parent_name"
        ],
        "negativeExamples": [
          "guardian_name"
        ]
      },
      {
        "regExp": "(?i).*(p1|p2|prnt|mthr|fthr|mom|dad).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "dad_name"
        ],
        "negativeExamples": [
          "parent_id"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "email"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Maria Garcia",
      "O'Neil Johnson",
      "Anne-Marie Clarke",
      "Liam O'Brien",
      "Zoe Chen",
      "Victor Santos",
      "Mary-Jane O'Brien"
    ],
    "negativeContentExamples": [
      "john smith",
      "John A. Smith",
      "Smith, John",
      "John",
      "John  Smith",
      "JOHN SMITH",
      "John-Smith",
      "J Smith"
    ],
    "positiveHeaderExamples": [
      "parent_name",
      "parent_full_name",
      "father_name",
      "mother_full_name",
      "parent1_name",
      "parent2_full_name",
      "dad_name",
      "mthr_name"
    ],
    "negativeHeaderExamples": [
      "guardian_name",
      "child_name",
      "parent_id",
      "parent_email",
      "surname",
      "contact_name",
      "spouse_name",
      "student_full_name"
    ],
    "explanation": "This type identifies columns containing a complete parent name written as exactly two tokens: a capitalized given name followed by a capitalized surname, separated by a single space. Each token may include a single internal hyphen or apostrophe segment (e.g., Anne-Marie, O'Brien). Typical use cases include school, medical, or registration datasets where a parent or legal custodian's full name is collected in first\u2013last order.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:47.344795"
  },
  {
    "resultType": "generated",
    "semanticType": "notes",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}[A-Za-z0-9'(),./:;!&-]*\\s+[A-Za-z]{2,}[A-Za-z0-9'(),./:;!&-]*\\s+[A-Za-z]{2,}[A-Za-z0-9'(),./:;!&-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9330,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client|order|case|ticket).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_name"
        ]
      },
      {
        "regExp": "(?i).*(internal|agent|staff).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_comments"
        ],
        "negativeExamples": [
          "internal_id"
        ]
      },
      {
        "regExp": "(?i).*(free[-_ ]?text|freeform|long[-_ ]?text|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "text_encoding"
        ]
      },
      {
        "regExp": "(?i).*(comment|remarks|memo|observation|summary).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_remarks"
        ],
        "negativeExamples": [
          "case_status"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "notes"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Followed up with client regarding outstanding invoice",
      "Pending approval from finance team next week",
      "Item returned; awaiting replacement shipment",
      "See attached report for detailed breakdown",
      "User reported intermittent login issues",
      "Scheduled maintenance completed without incident",
      "Updated address based on customer email",
      "Requires manager review before publishing"
    ],
    "negativeContentExamples": [
      "TBD",
      "N/A",
      "123456",
      "OK",
      "Need approval",
      "Invoice 12345",
      "2021-08-15",
      "A1 B2 C3"
    ],
    "positiveHeaderExamples": [
      "customer_notes",
      "internal_comments",
      "case_remarks",
      "free_text",
      "long_text_description",
      "ticket_notes",
      "order_memo",
      "reviewer_observations"
    ],
    "negativeHeaderExamples": [
      "customer_name",
      "internal_id",
      "case_status",
      "ticket_number",
      "order_date",
      "issue_category",
      "text_encoding",
      "message_code"
    ],
    "explanation": "This semantic type targets narrative fields intended for human-readable notes, comments, descriptions, and other freeform text. It is useful for identifying columns that contain multi-word explanatory content rather than structured identifiers or codes. The detection emphasizes multi-word alphabetic content and common header terminology associated with notes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:47.410701"
  },
  {
    "resultType": "generated",
    "semanticType": "filename",
    "description": "The name of a computer file including its extension, used to identify and reference files within file systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9]+([A-Za-z0-9 _.-]*[A-Za-z0-9])?\\.[A-Za-z0-9]{2,8}(\\.[A-Za-z0-9]{2,8})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9390,
    "headerPatterns": [
      {
        "regExp": "(?i).*(attachment|document|export|upload|download)[ _-]*file[ _-]*name.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "attachment_file_name"
        ],
        "negativeExamples": [
          "attachment_size"
        ]
      },
      {
        "regExp": "(?i).*(original|source|target|output|input)[ _-]*file[ _-]*name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "original_filename"
        ],
        "negativeExamples": [
          "source_file_path"
        ]
      },
      {
        "regExp": "(?i).*(fname|filename|file_name|file-name).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "filename"
        ],
        "negativeExamples": [
          "file_type"
        ]
      },
      {
        "regExp": "(?i).*(file)[ _-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "document_file_name"
        ],
        "negativeExamples": [
          "file_path"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "file name"
        ],
        "negativeExamples": [
          "file"
        ]
      }
    ],
    "positiveContentExamples": [
      "report.pdf",
      "photo_2023-08-01.jpg",
      "archive.tar.gz",
      "README.md",
      "data-01.csv",
      "backup_2021_12_31.zip",
      "invoice-12345.PDF",
      "config.prod.json"
    ],
    "negativeContentExamples": [
      "readme",
      ".env",
      "photo_2023-08-01jpeg",
      "file.",
      "invoice-12345. pdf",
      "archive.tar..gz",
      "backup_2021_12_31",
      "report,pdf"
    ],
    "positiveHeaderExamples": [
      "file_name",
      "filename",
      "attachment_filename",
      "document_file_name",
      "original_file_name",
      "uploaded_filename",
      "export_file_name",
      "source_file_name"
    ],
    "negativeHeaderExamples": [
      "file_path",
      "file_type",
      "document_title",
      "attachment_size",
      "file_url",
      "username",
      "name_on_card",
      "content_type"
    ],
    "explanation": "This semantic type captures standalone file names that include an explicit extension, with optional multi-part extensions like tar.gz. It favors explicit separators and bounded character classes to avoid overly broad matches. Use this type for columns storing filenames of uploads, exports, attachments, or generated artifacts; it is intentionally broad but constrained and paired with high threshold and low priority to reduce conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:49.168368"
  },
  {
    "resultType": "generated",
    "semanticType": "owner",
    "description": "A complete personal name combining first and last names in the conventional Western format with a single space separator. The value is strictly two alphabetic tokens, each at least two letters, allowing internal hyphens or apostrophes within a token.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}([-'][A-Za-z]{2,})* [A-Za-z]{2,}([-'][A-Za-z]{2,})*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9260,
    "headerPatterns": [
      {
        "regExp": "(?i).*owner[_\\s-]*full[_\\s-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "owner full name"
        ],
        "negativeExamples": [
          "owner id"
        ]
      },
      {
        "regExp": "(?i).*owner[_\\s-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "owner_name"
        ],
        "negativeExamples": [
          "owner email"
        ]
      },
      {
        "regExp": "(?i).*(primary|account|property)[_\\s-]*owner[_\\s-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "property owner name"
        ],
        "negativeExamples": [
          "property owner id"
        ]
      },
      {
        "regExp": "(?i).*ownr[_\\s-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ownr name"
        ],
        "negativeExamples": [
          "ownr address"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "identifier"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Anne-Marie Clark",
      "Peter Johnson",
      "Alice Brown",
      "Robert Lee",
      "Karen OBrien",
      "David McDonald",
      "Thomas OMalley"
    ],
    "negativeContentExamples": [
      "Madonna",
      "John A Smith",
      "Smith, John",
      "J. Smith",
      "John_Smith",
      "John-Smith",
      "John  Smith",
      "John & Jane"
    ],
    "positiveHeaderExamples": [
      "owner full name",
      "owner_name",
      "property owner name",
      "primary owner full name",
      "account owner name",
      "asset owner name",
      "vehicle owner name",
      "owner legal name"
    ],
    "negativeHeaderExamples": [
      "owner",
      "owner id",
      "owner email",
      "customer name",
      "name on account",
      "owner address",
      "billing name",
      "document owner id"
    ],
    "explanation": "This semantic type targets columns containing an owner's full personal name expressed as two alphabetic tokens separated by a single space. It tolerates internal hyphens or apostrophes within each token but excludes middle names/initials, reversed order, delimiters, and multi-person entries. Typical use cases include property, asset, account, or vehicle ownership fields where the stored value is the owner's full name.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:51.338251"
  },
  {
    "resultType": "generated",
    "semanticType": "type",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]{2,}\\b[ \\t]+\\b[A-Za-z0-9][A-Za-z0-9'\";:,.()\\/&\\- ]{5,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9030,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*(description|comment|comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_name"
        ]
      },
      {
        "regExp": "(?i).*(comment|comments).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment_text"
        ],
        "negativeExamples": [
          "text_length"
        ]
      },
      {
        "regExp": "(?i).*free[ _-]?text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "text_free_flag"
        ]
      },
      {
        "regExp": "(?i).*(narrative|remarks|notes|details|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_comments"
        ],
        "negativeExamples": [
          "comment_id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "Issue resolved after restart",
      "Customer reported intermittent failure",
      "Leave a note for next shift",
      "Payment pending verification by bank",
      "Please see attached document for details",
      "The package was left at the front desk",
      "Unable to reproduce the issue locally",
      "Action required: update configuration and retry"
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "A12-345",
      "2024-05-01",
      "john@example.com",
      "12345",
      "INV-000123",
      "needs-review"
    ],
    "positiveHeaderExamples": [
      "customer_description",
      "issue_notes",
      "comment_text",
      "narrative",
      "remarks",
      "free_text",
      "details",
      "internal_comments"
    ],
    "negativeHeaderExamples": [
      "customer_name",
      "date_created",
      "status_code",
      "invoice_number",
      "email",
      "product_type",
      "priority_level",
      "comment_id"
    ],
    "explanation": "This semantic type captures freeform narrative text typically found in description, notes, remark, or comment fields. It is intended to differentiate multi-word narrative strings from structured identifiers, codes, or scalar values.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:52.003637"
  },
  {
    "resultType": "generated",
    "semanticType": "district",
    "description": "Portuguese district names representing the administrative divisions within Portugal's territorial organization system. These districts serve as primary territorial units for government administration and regional coordination throughout Portuguese mainland territory.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "AVEIRO",
      "BEJA",
      "BRAGA",
      "BRAGAN\u00c7A",
      "CASTELO BRANCO",
      "COIMBRA",
      "\u00c9VORA",
      "FARO",
      "GUARDA",
      "LEIRIA",
      "LISBOA",
      "PORTALEGRE",
      "PORTO",
      "SANTAR\u00c9M",
      "SET\u00daBAL",
      "VIANA DO CASTELO",
      "VILA REAL",
      "VISEU"
    ],
    "backout": "^[A-Z\u00c1\u00c2\u00c3\u00c0\u00c9\u00ca\u00cd\u00d3\u00d4\u00d5\u00da\u00c7]+( [A-Z\u00c1\u00c2\u00c3\u00c0\u00c9\u00ca\u00cd\u00d3\u00d4\u00d5\u00da\u00c7]+){0,2}$",
    "confidenceThreshold": 98,
    "priority": 9410,
    "headerPatterns": [
      {
        "regExp": "(?i).*(portuguese|portugal|pt)[ _-]*district.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "portuguese_district_name"
        ],
        "negativeExamples": [
          "district_code"
        ]
      },
      {
        "regExp": "(?i).*(administrative|admin|regional)[ _-]*district.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "administrative_district"
        ],
        "negativeExamples": [
          "regional_code"
        ]
      },
      {
        "regExp": "(?i).*district[ _-]*(name|label).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "district_name"
        ],
        "negativeExamples": [
          "district_code"
        ]
      },
      {
        "regExp": "(?i).*\\bdist\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "dist"
        ],
        "negativeExamples": [
          "distance"
        ]
      },
      {
        "regExp": "(?i).*district.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "district"
        ],
        "negativeExamples": [
          "province"
        ]
      }
    ],
    "positiveContentExamples": [
      "LISBOA",
      "PORTO",
      "BRAGA",
      "AVEIRO",
      "SET\u00daBAL",
      "\u00c9VORA",
      "BRAGAN\u00c7A",
      "VIANA DO CASTELO"
    ],
    "negativeContentExamples": [
      "MADEIRA",
      "A\u00c7ORES",
      "LISBON",
      "SETUBAL",
      "BRAGANCA",
      "VILA-REAL",
      "VIANA DO CASTELLO",
      "PORTO DISTRICT"
    ],
    "positiveHeaderExamples": [
      "portuguese_district",
      "pt_district",
      "district_name",
      "administrative_district",
      "regional_district",
      "district_label",
      "district_portugal",
      "dist"
    ],
    "negativeHeaderExamples": [
      "district_code",
      "province_name",
      "county",
      "state_province",
      "region_name",
      "distance",
      "postal_code",
      "municipality_name"
    ],
    "explanation": "This semantic type identifies names of the 18 administrative districts in mainland Portugal. It is best used for columns containing Portuguese district names for geographic normalization, validation, and regional analytics. It excludes autonomous regions (Madeira and the Azores) and lower-level units such as municipalities and parishes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:53.283523"
  },
  {
    "resultType": "generated",
    "semanticType": "region",
    "description": "The full name of one of the fifty states or the federal district of the United States, representing the complete official designation of US administrative divisions.",
    "pluginType": "regex",
    "regexPattern": "\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming|District of Columbia)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9400,
    "headerPatterns": [
      {
        "regExp": "(?i).*(us|united states).*(state|district).*(full).*(name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "us_state_full_name"
        ],
        "negativeExamples": [
          "state_code"
        ]
      },
      {
        "regExp": "(?i).*(state|state_province).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "billing_state_name"
        ],
        "negativeExamples": [
          "state_code"
        ]
      },
      {
        "regExp": "(?i).*region.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "region_full_name"
        ],
        "negativeExamples": [
          "region_code"
        ]
      },
      {
        "regExp": "(?i).*\\bst\\b.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "st_name"
        ],
        "negativeExamples": [
          "street_name"
        ]
      },
      {
        "regExp": "(?i).*district.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "district_of_columbia_name"
        ],
        "negativeExamples": [
          "district_code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New York",
      "District of Columbia",
      "Rhode Island",
      "North Dakota",
      "West Virginia",
      "New Mexico",
      "Massachusetts"
    ],
    "negativeContentExamples": [
      "CA",
      "NewYork",
      "Washington DC",
      "Puerto Rico",
      "United States",
      "District Columbia",
      "Rhode  Island",
      "New York City"
    ],
    "positiveHeaderExamples": [
      "us_state_full_name",
      "state_name",
      "state_or_dc_name",
      "region_full_name",
      "home_state",
      "billing_state_name",
      "customer_state_name",
      "mailing_state_name"
    ],
    "negativeHeaderExamples": [
      "country_name",
      "state_code",
      "province",
      "region_code",
      "state_abbr",
      "state_number",
      "territory_name",
      "street_name"
    ],
    "explanation": "This semantic type detects full US state names and the full designation of the federal district (District of Columbia) by matching against the canonical set of names. It is useful for columns storing normalized jurisdiction names for geocoding, aggregation, and address standardization workflows.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:53.693203"
  },
  {
    "resultType": "generated",
    "semanticType": "city",
    "description": "The name of an incorporated city, town, or urban municipality as recognized by local government authorities.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[a-z]+(?:[-'][a-z]+)*\\.?(?: [a-z]+(?:[-'][a-z]+)*\\.?){0,4}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9190,
    "headerPatterns": [
      {
        "regExp": "(?i).*(shipping|billing|mailing).*city.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "shipping_city"
        ],
        "negativeExamples": [
          "shipping_state"
        ]
      },
      {
        "regExp": "(?i).*(origin|destination).*city.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "origin_city"
        ],
        "negativeExamples": [
          "origin_country"
        ]
      },
      {
        "regExp": "(?i).*(customer|account|user).*city.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_city"
        ],
        "negativeExamples": [
          "customer_state"
        ]
      },
      {
        "regExp": "(?i).*(municipality|town).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "municipality_name"
        ],
        "negativeExamples": [
          "town_code"
        ]
      },
      {
        "regExp": "(?i).*city.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "city_name"
        ],
        "negativeExamples": [
          "city_code"
        ]
      },
      {
        "regExp": "(?i).*city.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "city"
        ],
        "negativeExamples": [
          "state"
        ]
      }
    ],
    "positiveContentExamples": [
      "New York",
      "Los Angeles",
      "San Francisco",
      "St. Louis",
      "Ho Chi Minh City",
      "Mexico City",
      "Quebec City",
      "Rio de Janeiro"
    ],
    "negativeContentExamples": [
      "New York, NY",
      "Paris 75001",
      "Berlin, DE",
      "10001",
      "12th District",
      "Los Angeles County, CA",
      "Quebec (Province)",
      "N/A"
    ],
    "positiveHeaderExamples": [
      "shipping_city",
      "billing_city",
      "city_name",
      "municipality_name",
      "origin_city",
      "destination_city",
      "customer_city"
    ],
    "negativeHeaderExamples": [
      "shipping_state",
      "billing_country",
      "city_code",
      "postal_code",
      "province_name",
      "region",
      "latitude"
    ],
    "explanation": "This type targets textual values that represent city or urban municipality names, allowing common separators such as spaces, hyphens, apostrophes, and terminal periods used in abbreviations (e.g., St. Louis). It is designed for datasets containing standalone city names without appended region codes, postal codes, or punctuation-heavy annotations.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:53.694453"
  },
  {
    "resultType": "generated",
    "semanticType": "family",
    "description": "A family name or surname that identifies the family lineage and is typically shared among family members and passed down through generations. Values commonly appear in proper case or all caps, and may include hyphens, spaces, or apostrophes between parts.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Z][a-z]{1,}|[A-Z]{2,})([-' ][A-Z][a-z]{1,}|[-' ][A-Z]{2,}){0,2}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9170,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client|user|employee).*(family[_ ]name|surname|last[_ ]name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_family_name"
        ],
        "negativeExamples": [
          "customer_middle_name"
        ]
      },
      {
        "regExp": "(?i).*(person|account|contact).*(family[_ ]name|surname|last[_ ]name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "contact_surname"
        ],
        "negativeExamples": [
          "account_given_name"
        ]
      },
      {
        "regExp": "(?i).*(l[_ ]?name|lname|surn).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "l_name"
        ],
        "negativeExamples": [
          "lnumber"
        ]
      },
      {
        "regExp": "(?i).*(last[_ ]name|family[_ ]name|surname).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "surname"
        ],
        "negativeExamples": [
          "family_history"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "title"
        ]
      }
    ],
    "positiveContentExamples": [
      "Smith",
      "O'Neil",
      "Johnson-Smith",
      "Van Buren",
      "McDonald",
      "St John",
      "O'REILLY",
      "Lee"
    ],
    "negativeContentExamples": [
      "o'neil",
      "d'amico",
      "o\u2019neil",
      "van  buren",
      "st.clair",
      "smith3",
      "mac donald-smith-jones",
      "mcdonald"
    ],
    "positiveHeaderExamples": [
      "customer_family_name",
      "user_surname",
      "last_name",
      "employee_last_name",
      "person_family_name",
      "contact_surname",
      "l_name",
      "familyname"
    ],
    "negativeHeaderExamples": [
      "customer_middle_initial",
      "account_holder",
      "first",
      "alias",
      "handle",
      "last_seen_time",
      "department",
      "title"
    ],
    "explanation": "This semantic type identifies values that look like family names/surnames, supporting common separators (space, hyphen, apostrophe) and both proper case and all-caps forms. It is intended for columns storing last names, aiding PII handling, deduplication, and identity resolution. High threshold and priority are chosen to minimize conflicts with broader NAME-related types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:54.996604"
  },
  {
    "resultType": "generated",
    "semanticType": "date",
    "description": "A numeric timestamp representing whole seconds elapsed since January 1, 1970 UTC (Unix epoch). Values are non-negative integers typically 9 or 10 digits long, excluding millisecond or microsecond precision.",
    "pluginType": "regex",
    "regexPattern": "\\b(0|[1-9][0-9]{8,9})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9060,
    "headerPatterns": [
      {
        "regExp": "(?i).*(unix|epoch).*(seconds|secs|sec)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_epoch_seconds"
        ],
        "negativeExamples": [
          "event_epoch_millis"
        ]
      },
      {
        "regExp": "(?i).*(seconds_since_epoch|sec_since_epoch|since_epoch_seconds)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "seconds_since_epoch"
        ],
        "negativeExamples": [
          "milliseconds_since_epoch"
        ]
      },
      {
        "regExp": "(?i).*(unix|epoch).*(timestamp|time|ts)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unix_timestamp"
        ],
        "negativeExamples": [
          "timestamp_ms"
        ]
      },
      {
        "regExp": "(?i).*(timestamp|ts).*(sec|secs)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ts_sec"
        ],
        "negativeExamples": [
          "ts_ms"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_date"
        ],
        "negativeExamples": [
          "event_time"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "315532800",
      "631152000",
      "946684800",
      "1234567890",
      "1451606400",
      "1609459200",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "16094592001",
      "-1609459200",
      "1609459200.0",
      "0123456789",
      "1609a59200",
      "2147483647L",
      "99999999"
    ],
    "positiveHeaderExamples": [
      "unix_epoch_seconds",
      "event_epoch_seconds",
      "created_unix_time_sec",
      "seconds_since_epoch",
      "unix_timestamp_seconds",
      "ts_sec",
      "event_date",
      "recorded_unix_seconds"
    ],
    "negativeHeaderExamples": [
      "timestamp_ms",
      "epoch_millis",
      "unix_time_ms",
      "event_datetime",
      "time_zone",
      "created_at",
      "updated_time",
      "id_number"
    ],
    "explanation": "This semantic type detects Unix epoch timestamps expressed as whole seconds since 1970-01-01T00:00:00Z. It intentionally excludes millisecond, microsecond, and nanosecond representations, fractional seconds, negative values (pre-epoch), and numbers with suffixes or leading zeros that indicate padding rather than a canonical epoch second.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:57.823755"
  },
  {
    "resultType": "generated",
    "semanticType": "value",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems. This type targets multi-word narrative fields rather than codes or identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}\\b[ ]+\\b[A-Za-z]{3,}\\b[ ]+\\b[A-Za-z0-9]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9430,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|ticket|issue|user).*(description|comments|comment|notes|remark|narrative|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(description_text|comment_body|note_text|narrative_text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment_body"
        ],
        "negativeExamples": [
          "body_length"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes|remarks|narrative|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "invoice_number"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|cmnts|rmk|txt|info).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_desc"
        ],
        "negativeExamples": [
          "data_type"
        ]
      },
      {
        "regExp": "(?i).*value.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "value"
        ],
        "negativeExamples": [
          "total"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent errors after the last update.",
      "Please contact the vendor to confirm shipment details.",
      "This item shows minor cosmetic wear on the left edge.",
      "User notes: requires supervisor approval before release.",
      "Replaced parts as requested; awaiting final test results.",
      "Door was locked on arrival; rescheduled visit for Monday.",
      "Add a reminder to check backups before deployment.",
      "Payment terms discussed and accepted by both parties."
    ],
    "negativeContentExamples": [
      "OK to ship",
      "See notes",
      "12/10 pending",
      "N/A",
      "#12345",
      "Done",
      "Fix ASAP",
      "Follow-up"
    ],
    "positiveHeaderExamples": [
      "customer_description",
      "order_comments",
      "description_text",
      "comment_body",
      "notes",
      "narrative",
      "remarks",
      "details"
    ],
    "negativeHeaderExamples": [
      "status_code",
      "invoice_number",
      "user_name",
      "country_code",
      "amount",
      "ip_address",
      "sku",
      "date"
    ],
    "explanation": "This semantic type identifies narrative, free-form text used for descriptions, comments, notes, and similar fields. Detection favors multi-word textual content and column headers commonly used for narrative fields. The regex requires at least three tokens with letters to avoid matching codes, short flags, or identifiers. A high threshold and low precedence (high numerical priority) reduce conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:57.933870"
  },
  {
    "resultType": "generated",
    "semanticType": "frequency",
    "description": "Values describing how often an event or process occurs, typically expressed as textual recurrence patterns (e.g., daily, weekly, every 3 months, 2x per week). Covers common natural-language frequency expressions and simple numeric-per-period formats.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(daily|weekly|monthly|quarterly|annually|yearly|hourly|minutely|biweekly|semiweekly|bimonthly|semimonthly|semiannual|biennial|fortnightly|every\\s+[1-9][0-9]?\\s*(day|days|week|weeks|month|months|quarter|quarters|year|years|hour|hours|minute|minutes)|every\\s+other\\s+(day|week|month|year)|(once|twice|thrice)\\s+(a|per)\\s+(day|week|month|year)|[1-9][0-9]?\\s*x\\s*(per\\s+)?(day|week|month|year)|[1-9][0-9]?\\s*per\\s+(day|week|month|year)|[1-9][0-9]?/(day|week|month|year)s?)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 92,
    "priority": 9250,
    "headerPatterns": [
      {
        "regExp": "(?i).*(billing|payment|invoice|subscription).*frequency.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "billing_frequency"
        ],
        "negativeExamples": [
          "billing_period"
        ]
      },
      {
        "regExp": "(?i).*(order|usage|notification|run|job|scan).*frequency.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "notification_frequency"
        ],
        "negativeExamples": [
          "notification_interval"
        ]
      },
      {
        "regExp": "(?i).*(ship|shipment|delivery).*frequency.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "shipment_frequency"
        ],
        "negativeExamples": [
          "delivery_window"
        ]
      },
      {
        "regExp": "(?i).*(freq|recur|repeat).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "freq_per_week"
        ],
        "negativeExamples": [
          "count_per_week"
        ]
      },
      {
        "regExp": "(?i).*frequency.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "frequency"
        ],
        "negativeExamples": [
          "period"
        ]
      }
    ],
    "positiveContentExamples": [
      "daily",
      "Weekly",
      "biweekly",
      "Monthly",
      "2x per week",
      "once a day",
      "every 3 months",
      "3/day"
    ],
    "negativeContentExamples": [
      "day",
      "2 weeks",
      "once",
      "every month end",
      "2024-05",
      "per day",
      "annual",
      "high frequency"
    ],
    "positiveHeaderExamples": [
      "billing_frequency",
      "payment_frequency",
      "order_frequency",
      "notification_frequency",
      "run_frequency",
      "subscription_frequency",
      "freq_per_week",
      "frequency"
    ],
    "negativeHeaderExamples": [
      "billing_period",
      "notification_interval",
      "cycle_time",
      "cadence",
      "period_days",
      "billing_code",
      "sample_rate",
      "interval_code"
    ],
    "explanation": "This semantic type identifies textual expressions that describe how often something occurs, such as daily, weekly, biweekly, every 3 months, or numeric-per-period formats like 2x per week and 3/day. It is useful for classifying schedule recurrence, billing cadence, job run cadence, and similar periodicity fields across datasets.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:33:59.122151"
  },
  {
    "resultType": "generated",
    "semanticType": "area",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9\"'/()\\-\\.,;:]{1,}\\s+[A-Za-z][A-Za-z0-9\"'/()\\-\\.,;:]{1,}\\s+[A-Za-z0-9][A-Za-z0-9\"'/()\\-\\.,;:]{1,}\\s+[A-Za-z0-9][A-Za-z0-9\"'/()\\-\\.,;:]{1,}\\s+[A-Za-z0-9][A-Za-z0-9\"'/()\\-\\.,;:]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9450,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|case|ticket|order).*(notes|description|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(issue|incident|bug|service).*(details|summary|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "incident_details"
        ],
        "negativeExamples": [
          "service_date"
        ]
      },
      {
        "regExp": "(?i).*(long|internal|public|general).*(description|notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_long_description"
        ],
        "negativeExamples": [
          "public_id"
        ]
      },
      {
        "regExp": "(?i).*\\b(desc|descr|rmks|cmts|cmt|note|notes)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "rmks"
        ],
        "negativeExamples": [
          "comment_count"
        ]
      },
      {
        "regExp": "(?i).*\\btext\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported a vibrating noise when the unit starts.",
      "Package arrived damaged and was refused at the door.",
      "Left blank intentionally; no additional details available at this time.",
      "Call back after 5 PM to confirm address and delivery window.",
      "User requested password reset and provided verification over phone.",
      "No issues noted during inspection of the south entrance area.",
      "Please see attached document for full scope, timeline, and budget.",
      "Work completed ahead of schedule; awaiting final sign-off."
    ],
    "negativeContentExamples": [
      "Updated status",
      "Ok to ship",
      "Issue - fixed",
      "Ref 12345",
      "Unit 7A resolved",
      "Customer complaint",
      "2019-10-05 returned",
      "Note added"
    ],
    "positiveHeaderExamples": [
      "customer_notes",
      "incident_description",
      "case_comments",
      "internal_long_description",
      "general_remarks",
      "service_narrative",
      "free_text",
      "public_notes"
    ],
    "negativeHeaderExamples": [
      "customer_id",
      "incident_date",
      "case_number",
      "order_status",
      "service_code",
      "bug_id",
      "record_status",
      "remark_type"
    ],
    "explanation": "This semantic type identifies narrative, free-text fields typically used for descriptions, comments, notes, or similar unstructured content. The value regex prefers multi-word text (five or more tokens) beginning with alphabetical tokens and allows common punctuation, reducing collisions with codes or identifiers. Header patterns progress from specific business-context labels to common abbreviations and finally the primitive 'text' term, enabling robust detection across diverse schemas. Use this type to capture columns where the primary purpose is human-readable narrative rather than structured codes, dates, or numeric measures.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:00.387108"
  },
  {
    "resultType": "generated",
    "semanticType": "part",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z][a-zA-Z'-]{2,}( [a-zA-Z0-9][a-zA-Z0-9'-]{1,}){6,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9210,
    "headerPatterns": [
      {
        "regExp": "(?i).*(issue|ticket|case|order|record).*_(description|comment|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "issue_status"
        ]
      },
      {
        "regExp": "(?i).*(public|customer|internal|admin|reviewer)_(comment|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "public_comment"
        ],
        "negativeExamples": [
          "public_id"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|comment|notes|remarks|narrative|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "note_id"
        ]
      },
      {
        "regExp": "(?i).*(free[ _]?text|long[ _]?text|memo|observation|annotation).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Part arrived with minor scratches on the surface, no functional issues observed.",
      "Customer reports intermittent failure after five minutes of operation under load.",
      "Use mild detergent to clean; do not submerge the assembly in water.",
      "Packaging was torn upon delivery but internal cushioning remained intact.",
      "Notes indicate previous repair with nonstandard screws; recommend replacement.",
      "This component serves as the primary support bracket for the housing.",
      "Observed slight vibration at high RPM; tightening the mount reduced the noise."
    ],
    "negativeContentExamples": [
      "Pending approval",
      "See notes",
      "N/A",
      "OK",
      "Account number 1234",
      "Blue, large",
      "Contact support"
    ],
    "positiveHeaderExamples": [
      "issue_description",
      "public_comment",
      "internal_notes",
      "remarks",
      "narrative_text",
      "details",
      "free_text",
      "memo"
    ],
    "negativeHeaderExamples": [
      "issue_status",
      "public_id",
      "note_id",
      "short_desc",
      "status_message",
      "summary",
      "title",
      "item_name"
    ],
    "explanation": "This type identifies long-form, multi-word narrative fields commonly used for descriptions, comments, notes, or other free-text annotations. The value pattern emphasizes a higher word count to distinguish narrative content from short labels, codes, or identifiers. Header patterns focus on common column naming conventions for descriptions and comments, with a primitive fallback on 'text'. High threshold and low priority reduce conflicts with more specific semantic types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:01.680550"
  },
  {
    "resultType": "generated",
    "semanticType": "cost",
    "description": "Monetary cost values, including amounts with currency symbols or 3-letter currency codes, and numeric amounts with two decimal places that represent unit, total, or net costs. Typical formats include symbol-prefixed (e.g., $99.99), code-prefixed (e.g., USD 1,234.00), or plain amounts with two decimals (e.g., 1200.00). This type is intended for monetary amounts and excludes free-form descriptive text such as comments or notes.",
    "pluginType": "regex",
    "regexPattern": "\\b((USD|EUR|GBP|AUD|CAD|JPY|CNY|INR)\\s[+-]?((\\d{1,3}(,\\d{3})+)|\\d+)(\\.\\d{2})?|[$\u20ac\u00a3\u00a5\u20b9][+-]?((\\d{1,3}(,\\d{3})+)|\\d+)(\\.\\d{2})?|[+-]?((\\d{1,3}(,\\d{3})+)|\\d+)\\.\\d{2})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9420,
    "headerPatterns": [
      {
        "regExp": "(?i).*total[ _-]*cost.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "total_cost"
        ],
        "negativeExamples": [
          "total_price"
        ]
      },
      {
        "regExp": "(?i).*unit[ _-]*cost.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unit cost"
        ],
        "negativeExamples": [
          "unit price"
        ]
      },
      {
        "regExp": "(?i).*(cost|cst)[ _-]*(amount|amt|value).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "cost_amount"
        ],
        "negativeExamples": [
          "price_amount"
        ]
      },
      {
        "regExp": "(?i).*(operating|shipping|labor)[ _-]*cost.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "operating_cost"
        ],
        "negativeExamples": [
          "operating_margin"
        ]
      },
      {
        "regExp": "(?i).*cost.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "cost"
        ],
        "negativeExamples": [
          "price"
        ]
      }
    ],
    "positiveContentExamples": [
      "$12.50",
      "USD 1,234.00",
      "1,250.75",
      "\u00a399.99",
      "EUR 0.80",
      "1200.00",
      "AUD 2,345.60",
      "CAD 10.00"
    ],
    "negativeContentExamples": [
      "1200",
      "$12.5",
      "USD12.00",
      "1,20.00",
      "EUR-12.00",
      "\u00a3",
      "12.345,67",
      "$1,234.567"
    ],
    "positiveHeaderExamples": [
      "total_cost",
      "unit_cost",
      "cost_amount",
      "avg_cost",
      "net_cost",
      "operating_cost",
      "cost_usd",
      "cost"
    ],
    "negativeHeaderExamples": [
      "total_price",
      "unit_price",
      "amount",
      "expenses",
      "charge",
      "budget",
      "revenue",
      "margin"
    ],
    "explanation": "This semantic type identifies monetary cost values typically found in financial or transactional datasets. It recognizes amounts with currency symbols or ISO-like 3-letter codes and numeric amounts with two decimal places, while excluding ambiguous integers without currency context. Header patterns prioritize highly specific cost columns (e.g., total_cost, unit_cost) and progressively generalize to the primitive term cost. Use this type to classify fields storing unit, total, or net costs; it is not intended for free-form text such as descriptions, comments, or notes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:02.686711"
  },
  {
    "resultType": "generated",
    "semanticType": "road",
    "description": "The complete name of a street including both the base name and type designation, formatted according to English language conventions.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b((N|S|E|W|NE|NW|SE|SW|North|South|East|West)\\.?[ ]+)?([0-9]{1,4}(st|nd|rd|th)|[A-Za-z]+([\\-'][A-Za-z]+)?)( [A-Za-z0-9]+([\\-'][A-Za-z0-9]+)?){0,3} (Street|St|Avenue|Ave|Road|Rd|Boulevard|Blvd|Lane|Ln|Drive|Dr|Court|Ct|Place|Pl|Terrace|Ter|Way|Parkway|Pkwy|Circle|Cir)\\.?( (N|S|E|W|NE|NW|SE|SW)\\.?)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9470,
    "headerPatterns": [
      {
        "regExp": "(?i).*(full|complete).*(street|road|avenue|blvd|lane|drive).*(name).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "full_street_name"
        ],
        "negativeExamples": [
          "city"
        ]
      },
      {
        "regExp": "(?i).*(street|road|avenue|blvd|lane|drive).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "street_name"
        ],
        "negativeExamples": [
          "route_name"
        ]
      },
      {
        "regExp": "(?i).*address.*(street|road|avenue|blvd|lane|drive).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "address_street"
        ],
        "negativeExamples": [
          "address_line2"
        ]
      },
      {
        "regExp": "(?i).*(st|rd|ave|blvd|ln|dr).*(name|nm).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "st_name"
        ],
        "negativeExamples": [
          "city_name"
        ]
      },
      {
        "regExp": "(?i).*street.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "street"
        ],
        "negativeExamples": [
          "house_number"
        ]
      }
    ],
    "positiveContentExamples": [
      "North Main Street",
      "N Main St",
      "42nd Street",
      "W 7th Ave",
      "O'Connell Road",
      "Martin Luther King Jr Blvd",
      "Old Mill Rd",
      "Maple Lane"
    ],
    "negativeContentExamples": [
      "MainStreet",
      "N. Main",
      "W 7 Avenue",
      "Elm Str",
      "Oak Roadway",
      "5th-Street",
      "Route 66",
      "Highway 101"
    ],
    "positiveHeaderExamples": [
      "full_street_name",
      "street_name",
      "road_name",
      "address_street",
      "primary_street",
      "shipping_street",
      "billing_street",
      "street"
    ],
    "negativeHeaderExamples": [
      "city",
      "postal_code",
      "house_number",
      "address_line2",
      "highway_number",
      "route_name",
      "country",
      "intersection"
    ],
    "explanation": "This semantic type identifies full street names consisting of a base name and a required street type suffix (e.g., Street, Ave, Rd). It supports optional directional prefixes or suffixes (e.g., N, NW, North) and multi-word base names with hyphens or apostrophes. Use it to classify street-level address components without house numbers or unit designators in address data pipelines.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:03.523646"
  },
  {
    "resultType": "generated",
    "semanticType": "rank",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 ,.;:()'\"/-]{2,}\\s+[A-Za-z0-9][A-Za-z0-9 ,.;:()'\"/-]{2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9000,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|ticket|issue).*(description|comments|notes|remarks).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(record|item|entry).*(description|details).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "entry_description"
        ],
        "negativeExamples": [
          "entry_date"
        ]
      },
      {
        "regExp": "(?i).*(desc|comments|cmts|remark|note|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "desk"
        ]
      },
      {
        "regExp": "(?i).*(free[ _]?text|text[ _]?body|body[ _]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_tier"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Requires manager approval before release",
      "Customer reported intermittent failure after update",
      "Duplicate of ticket 12345, closing",
      "Left voicemail; awaiting callback",
      "Initial setup completed successfully",
      "See attached for full breakdown",
      "Workaround applied pending patch",
      "Invoice discrepancy due to rounding"
    ],
    "negativeContentExamples": [
      "N/A",
      "OK",
      "A123-BC",
      "2024-10-05",
      "user@example.com",
      "http://example.com",
      "SKU-00123",
      "P1"
    ],
    "positiveHeaderExamples": [
      "order_description",
      "customer_comments",
      "ticket_notes",
      "internal_remarks",
      "free_text",
      "detail_text",
      "narrative",
      "issue_details"
    ],
    "negativeHeaderExamples": [
      "order_id",
      "customer_name",
      "ticket_number",
      "internal_code",
      "created_date",
      "country_code",
      "status",
      "priority"
    ],
    "explanation": "This type identifies narrative, free-form text fields that commonly store descriptions, comments, notes, remarks, or similar unstructured content. It looks for multi-word text with common punctuation, avoiding codes, identifiers, dates, URLs, and other structured tokens. Use this to detect fields where human-entered narrative is expected rather than structured values.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:07.517490"
  },
  {
    "resultType": "generated",
    "semanticType": "location",
    "description": "A combined latitude and longitude coordinate pair expressed in decimal degrees separated by a comma, allowing optional whitespace around the comma. Latitude must be within -90 to 90 and longitude within -180 to 180, with optional fractional precision.",
    "pluginType": "regex",
    "regexPattern": "-?(90(\\.0+)?|[0-8]?\\d(\\.\\d+)?)\\s*,\\s*-?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|[0-9]?\\d(\\.\\d+)?)",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9110,
    "headerPatterns": [
      {
        "regExp": "(?i).*(latitude|lat)[ _-]*[,/ ]?[ _-]*(longitude|lon|lng).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "latitude_longitude"
        ],
        "negativeExamples": [
          "latitude"
        ]
      },
      {
        "regExp": "(?i).*geo.*coordinate.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "geo_coordinates"
        ],
        "negativeExamples": [
          "address_coordinates"
        ]
      },
      {
        "regExp": "(?i).*(latlon|latlong|lat_lng|latlng|lat_lon).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "latlng"
        ],
        "negativeExamples": [
          "lat_value"
        ]
      },
      {
        "regExp": "(?i).*(gps|geolocation).*(position|point|pos).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "gps_position"
        ],
        "negativeExamples": [
          "gps_tracking_id"
        ]
      },
      {
        "regExp": "(?i).*location.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "location"
        ],
        "negativeExamples": [
          "address"
        ]
      }
    ],
    "positiveContentExamples": [
      "37.7749, -122.4194",
      "-33.8688, 151.2093",
      "51.5074, -0.1278",
      "40.7128, -74.0060",
      "-23.5505, -46.6333",
      "48.8566, 2.3522",
      "0.0000, 0.0000",
      "89.9999, 179.9999"
    ],
    "negativeContentExamples": [
      "91.0000, -75.0000",
      "90.5000, 10.0000",
      "45.0000 -120.0000",
      "45.0000; -120.0000",
      "45.0000, -181.0000",
      "N45.0000, E120.0000",
      "45.0000, -120.0000, 15.0",
      "45.0000"
    ],
    "positiveHeaderExamples": [
      "latitude_longitude",
      "lat_lon",
      "geo_coordinates",
      "gps_position",
      "geolocation_point",
      "latlong",
      "latlng",
      "location"
    ],
    "negativeHeaderExamples": [
      "latitude",
      "longitude",
      "lat_value",
      "lon_value",
      "address_coordinates",
      "city_position",
      "map_url",
      "postal_code"
    ],
    "explanation": "This semantic type identifies decimal degree coordinate pairs for latitude and longitude separated by a comma, supporting optional fractional parts and whitespace. It is useful for detecting geospatial point data used in mapping, geocoding, and spatial analytics.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:08.339170"
  },
  {
    "resultType": "generated",
    "semanticType": "result",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9.,;:'\"()!?/\\-#&]*(\\s+[A-Za-z0-9.,;:'\"()!?/\\-#&]+){3,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9360,
    "headerPatterns": [
      {
        "regExp": "(?i).*result.*(description|desc|notes|note|comment|comments|narrative|details|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "result_description"
        ],
        "negativeExamples": [
          "result_code"
        ]
      },
      {
        "regExp": "(?i).*res(ult)?[_ ]?(desc|notes|cmnt|txt|detail|info).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "res_desc"
        ],
        "negativeExamples": [
          "res_id"
        ]
      },
      {
        "regExp": "(?i).*(description|desc|notes|note|comment|comments|narrative|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "remarks"
        ]
      },
      {
        "regExp": "(?i).*result.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "result_details"
        ],
        "negativeExamples": [
          "status"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "number"
        ]
      }
    ],
    "positiveContentExamples": [
      "User reported intermittent failures when saving the draft, especially after timeout.",
      "Order could not be fulfilled due to stock mismatch; backorder created for remaining items.",
      "Please review and update the address as the apartment number appears to be missing.",
      "Followed up with the client; awaiting confirmation of preferred delivery window.",
      "Internal note: do not escalate until logs are collected and attached to the ticket.",
      "The sample was contaminated during transport, requiring a new collection.",
      "This entry consolidates observations from the field visit conducted on 2024-11-05.",
      "Customer indicated satisfaction with the resolution but requested a courtesy callback."
    ],
    "negativeContentExamples": [
      "OK",
      "Needs review soon",
      "See attachment",
      "Approved",
      "12345 67890 24680",
      "Pending update",
      "N/A",
      "Resolved - thanks"
    ],
    "positiveHeaderExamples": [
      "result_description",
      "result_notes",
      "result_comment",
      "result_text",
      "description",
      "notes",
      "res_desc",
      "result_details"
    ],
    "negativeHeaderExamples": [
      "remarks_flag",
      "message_id",
      "summary",
      "response_body",
      "log_entry",
      "memo_count",
      "reason_code",
      "status"
    ],
    "explanation": "This type targets narrative fields containing multi-word freeform text such as descriptions, comments, and notes. The detection favors values with multiple tokens and common punctuation, reducing false positives from short labels or identifiers. Use it to classify columns that store user-entered narratives, support notes, or explanatory remarks rather than codes, dates, or numeric measures.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:09.634920"
  },
  {
    "resultType": "generated",
    "semanticType": "source",
    "description": "A Uniform Resource Locator specifying the address and access method for resources on the internet or other networks following RFC 3986 standards.",
    "pluginType": "regex",
    "regexPattern": "\\b(([a-z][a-z0-9+\\-.]*)://[A-Za-z0-9._~\\-%:@/?#\\[\\]!\\$&'\\(\\)\\*\\+,;=]+|mailto:[A-Za-z0-9._%+\\-]+@[A-Za-z0-9.\\-]+\\.[A-Za-z]{2,}|urn:[A-Za-z0-9][A-Za-z0-9\\-]{0,31}:[A-Za-z0-9.\\-_%:/]+)",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9180,
    "headerPatterns": [
      {
        "regExp": "(?i).*source.*url.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "source_url"
        ],
        "negativeExamples": [
          "backup_url"
        ]
      },
      {
        "regExp": "(?i).*(resource|origin).*url.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "resource_url"
        ],
        "negativeExamples": [
          "customer_url"
        ]
      },
      {
        "regExp": "(?i).*(href|src).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "href"
        ],
        "negativeExamples": [
          "address"
        ]
      },
      {
        "regExp": "(?i).*(website|link).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "website_link"
        ],
        "negativeExamples": [
          "website_name"
        ]
      },
      {
        "regExp": "(?i).*(url|uri).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "url"
        ],
        "negativeExamples": [
          "file_path"
        ]
      }
    ],
    "positiveContentExamples": [
      "https://example.com",
      "http://example.com/path/to/page",
      "https://sub.example.org:8443/app/login?redirect=https%3A%2F%2Fexample.org#section-2",
      "ftp://ftp.example.net/pub/data.csv",
      "ws://localhost:8080/socket",
      "mailto:support@example.com",
      "file:///home/user/docs/readme.txt",
      "urn:isbn:9780306406157"
    ],
    "negativeContentExamples": [
      "www.example.com/index.html",
      "http//example.com",
      "https:/example.com",
      "https://",
      "mailto:",
      "ftp://exa mple.com/file.txt",
      "example.com?query=1",
      "urn:isbn"
    ],
    "positiveHeaderExamples": [
      "source_url",
      "origin_link",
      "resource_uri",
      "page_url",
      "href",
      "src",
      "website_link"
    ],
    "negativeHeaderExamples": [
      "source_name",
      "target_id",
      "file_path",
      "email_address",
      "ip_address",
      "checksum",
      "state_code",
      "page_title"
    ],
    "explanation": "This semantic type captures URL/URI values that identify and locate resources using a scheme and associated address components. It includes common schemes such as http, https, ftp, ws, file, mailto, and urn, ensuring recognition of both network and identifier-based resource locators. Use it to classify columns that contain links or URIs pointing to external or internal resources.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:10.408387"
  },
  {
    "resultType": "generated",
    "semanticType": "min",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'()&/,.-]{2,}([ ]+[A-Za-z][A-Za-z0-9'()&/,.-]{2,}){3,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9320,
    "headerPatterns": [
      {
        "regExp": "(?i).*(issue|case|ticket|order|record)[ _-]*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_description"
        ],
        "negativeExamples": [
          "case_status"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed|free|unstructured)[ _-]*(text|description|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_description"
        ],
        "negativeExamples": [
          "detailed_amount"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_comments"
        ],
        "negativeExamples": [
          "record_owner"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmt|note|remarks|rmks|rem).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "acct_num"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "contact_phone"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent errors after the latest update",
      "Please contact the client to confirm delivery preferences",
      "Item arrived damaged; requested a replacement and refund",
      "Notes indicate recurring login failures during peak hours",
      "Internal review pending; add screenshots before approval",
      "User described random freezes when opening large files",
      "Technician left voicemail and will follow up tomorrow",
      "Packaging was adequate, but instructions were missing"
    ],
    "negativeContentExamples": [
      "See notes below",
      "OK to ship asap",
      "Replaced",
      "Bad item",
      "2023-10-01 notes",
      "N/A no details",
      "Fix ASAP, thx",
      "low stock"
    ],
    "positiveHeaderExamples": [
      "case_description",
      "customer_notes",
      "internal_comments",
      "detailed_description",
      "free_text",
      "user_remarks",
      "desc",
      "note_text"
    ],
    "negativeHeaderExamples": [
      "case_status",
      "customer_name",
      "item_title",
      "issue_type",
      "order_message",
      "comment_count",
      "summary",
      "subject"
    ],
    "explanation": "This semantic type targets narrative, unstructured text commonly found in description, comment, note, or free-text fields. The content pattern requires multiple consecutive word tokens to avoid short or coded values, reducing false positives. Use it to identify columns and values capturing qualitative context rather than structured identifiers or numeric data.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:10.589607"
  },
  {
    "resultType": "generated",
    "semanticType": "field",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems. Intended for multi-word, free-form text that provides context, explanations, or observations.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\u2019-]+\\b[\\s,.;:()\\-]+\\b[A-Za-z][A-Za-z0-9'\u2019-]+\\b[\\s,.;:()\\-]+\\b[A-Za-z][A-Za-z0-9'\u2019-]+\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9100,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|issue|ticket|order|case).*(description|comments|notes|narrative).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_name"
        ]
      },
      {
        "regExp": "(?i).*(long|extended|free|detailed).*(description|notes|comments|text).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "long_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|txt|rmk|cmt|cmts).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "descr"
        ],
        "negativeExamples": [
          "cust_id"
        ]
      },
      {
        "regExp": "(?i).*(notes|comments|remarks|narrative|details).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "internal_remarks"
        ],
        "negativeExamples": [
          "internal_status"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "hex_code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported an intermittent error after the last update.",
      "Please escalate to tier two; logs are attached for review.",
      "Field technicians noted moisture damage in the north wall.",
      "User requested password reset and confirmed email delivery.",
      "Package arrived dented; issued refund and notified carrier.",
      "Meeting postponed to next Monday due to scheduling conflicts.",
      "Add follow up task to verify migration results.",
      "The system performed as expected during overnight batch processing."
    ],
    "negativeContentExamples": [
      "Pending review",
      "N/A",
      "AB-12345",
      "OK",
      "12345",
      "Update v2.1",
      "Internal note",
      "Resolved"
    ],
    "positiveHeaderExamples": [
      "issue_description",
      "customer_notes",
      "free_text",
      "long_description",
      "extended_comments",
      "internal_remarks",
      "review_narrative",
      "details_text"
    ],
    "negativeHeaderExamples": [
      "customer_name",
      "country_code",
      "created_date",
      "invoice_number",
      "ip_address",
      "status_code",
      "amount",
      "serial_no"
    ],
    "explanation": "This semantic type targets free-form narrative fields such as descriptions, comments, and notes that contain multiple words and sentence-like content. The detection pattern favors strings with at least three letter-led tokens separated by whitespace or common punctuation, reducing collisions with short labels, codes, or identifiers. Use this type to classify long-form text blobs used for context, explanations, or qualitative feedback. High threshold and priority are chosen to minimize conflicts with more specific types while reliably capturing narrative text columns.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:10.794652"
  },
  {
    "resultType": "generated",
    "semanticType": "year",
    "description": "A temporal span expressed as a beginning year and ending year, typically used to indicate duration, validity periods, or historical timeframes.",
    "pluginType": "regex",
    "regexPattern": "\\b(1[0-9]{3}|20[0-9]{2})\\b\\s?[-\u2013\u2014/]\\s?\\b(1[0-9]{3}|20[0-9]{2})\\b|\\b(1[0-9]{3}|20[0-9]{2})\\b\\s+[Tt][Oo]\\s+\\b(1[0-9]{3}|20[0-9]{2})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9150,
    "headerPatterns": [
      {
        "regExp": "(?i).*(fiscal|academic|school|policy|tax)[_\\s-]?year[_\\s-]?(range|span|period).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "fiscal_year_range"
        ],
        "negativeExamples": [
          "fiscal_year"
        ]
      },
      {
        "regExp": "(?i).*year[_\\s-]?(range|span|period).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "year_range"
        ],
        "negativeExamples": [
          "year_status"
        ]
      },
      {
        "regExp": "(?i).*(from|start)[_\\s-]?year.*(to|end)[_\\s-]?year.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "start_year_end_year"
        ],
        "negativeExamples": [
          "year_start_date"
        ]
      },
      {
        "regExp": "(?i).*(fy|ay|yr)[_\\s-]?(range|span).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "yr_range"
        ],
        "negativeExamples": [
          "fy_code"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "date"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "1999-2003",
      "2018 - 2020",
      "2005/2006",
      "1900\u20131905",
      "2000\u20142001",
      "1978 to 1982",
      "1980/1981",
      "1001-1010"
    ],
    "negativeContentExamples": [
      "2018-19",
      "2018/019",
      "201A-2019",
      "FY2018-2019",
      "2018to2020",
      "2018\u20132018\u20132019",
      "0999-1000",
      "2020 - 21"
    ],
    "positiveHeaderExamples": [
      "fiscal_year_range",
      "academic_year_span",
      "year_from_to",
      "policy_year_period",
      "start_year_end_year",
      "tax_year_range",
      "school_year_range",
      "yr_range"
    ],
    "negativeHeaderExamples": [
      "year",
      "fiscal_year",
      "year_code",
      "date_range",
      "fiscal_year_start_date",
      "months_range",
      "year_total",
      "year_number"
    ],
    "explanation": "Identifies values representing a range of two four-digit years separated by a hyphen, en dash, em dash, slash, or the word 'to'. This is useful for durations such as fiscal or academic year spans. The pattern uses word boundaries to avoid matching embedded text and keeps separators explicit to reduce false positives.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:13.455154"
  },
  {
    "resultType": "generated",
    "semanticType": "county",
    "description": "United States county names representing the primary administrative subdivisions within US states for local government services. These jurisdictions typically serve as fundamental territorial units for law enforcement, taxation, and municipal services across American states.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z .'-]*[ ]+(County|Parish)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9160,
    "headerPatterns": [
      {
        "regExp": "(?i).*(united[ _-]?states|us).*(county|parish).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US county name"
        ],
        "negativeExamples": [
          "county"
        ]
      },
      {
        "regExp": "(?i).*(county|parish).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "county_name"
        ],
        "negativeExamples": [
          "state_name"
        ]
      },
      {
        "regExp": "(?i).*(united[ _-]?states|us).*(county|parish).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "United States county"
        ],
        "negativeExamples": [
          "city county"
        ]
      },
      {
        "regExp": "(?i).*(county|parish|cnty).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "county_parish"
        ],
        "negativeExamples": [
          "province_name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Orange County",
      "Cook County",
      "King County",
      "St. Louis County",
      "Prince George's County",
      "Queen Anne's County",
      "Miami-Dade County",
      "East Baton Rouge Parish"
    ],
    "negativeContentExamples": [
      "County Orange",
      "Orange Co.",
      "OrangeCounty",
      "St. Louis",
      "Parish of Lafourche",
      "Orange Parishioner",
      "County of King",
      "Orange Cnty"
    ],
    "positiveHeaderExamples": [
      "us_county_name",
      "county_name",
      "parish_name",
      "county",
      "county_parish",
      "primary_county_name",
      "cnty_name",
      "county_jurisdiction"
    ],
    "negativeHeaderExamples": [
      "state_name",
      "province_name",
      "city_name",
      "country_name",
      "company_name",
      "zipcode",
      "timezone",
      "airport_code"
    ],
    "explanation": "This semantic type identifies US county-level jurisdiction names that end with the explicit administrative suffix \"County\" or \"Parish\" (for Louisiana). It supports multi-word names with common punctuation such as hyphens, apostrophes, and periods. Typical use cases include classifying columns that hold county-level jurisdiction names for geospatial joins, aggregation, or administrative reporting.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:14.890779"
  },
  {
    "resultType": "generated",
    "semanticType": "comment",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z0-9]{2,}\\b([ ,;:.!?\\-()'\\\"]+\\b[a-zA-Z0-9]{2,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9200,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|user|agent).*comment.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comment"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(issue|ticket|case|order).*(comment|note|notes|remarks|description).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "order_number"
        ]
      },
      {
        "regExp": "(?i).*(internal|general|public|private).*(note|notes|remarks|desc|description).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "internal_code"
        ]
      },
      {
        "regExp": "(?i).*(review|feedback).*(comment|comments|note|notes|remark|remarks).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "review_comments"
        ],
        "negativeExamples": [
          "review_rating"
        ]
      },
      {
        "regExp": "(?i).*comment.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment"
        ],
        "negativeExamples": [
          "issue_status"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached report.",
      "Customer states package arrived damaged.",
      "Waiting on approval from finance.",
      "Follow up next week after site visit.",
      "Machine rebooted; issue persists intermittently.",
      "Resolved by clearing cache and updating.",
      "See ticket 48293 for prior conversation.",
      "Note: address corrected per user request."
    ],
    "negativeContentExamples": [
      "Approved",
      "High priority",
      "Pending - 07/14",
      "OK",
      "N/A",
      "12345-67890",
      "http://status",
      "see.md"
    ],
    "positiveHeaderExamples": [
      "customer_comment",
      "internal_notes",
      "issue_description",
      "review_comments",
      "agent_note",
      "general_remarks",
      "comments_text",
      "comment"
    ],
    "negativeHeaderExamples": [
      "customer_id",
      "issue_status",
      "review_rating",
      "order_number",
      "ticket_code",
      "agent_name",
      "details_flag",
      "message_id"
    ],
    "explanation": "This type targets free-form narrative fields that typically contain multiple words, sentences, or phrases conveying context, explanations, or observations. It is useful for classifying columns that store user-entered comments, internal notes, and descriptive text rather than structured codes or numeric measures.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:17.141671"
  },
  {
    "resultType": "generated",
    "semanticType": "title",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'&()\\-]{2,}\\b(\\s+\\b[A-Za-z0-9][A-Za-z0-9'&()\\-]{2,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9080,
    "headerPatterns": [
      {
        "regExp": "(?i).*(issue|ticket|case|bug).*(title|subject).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "issue_title"
        ],
        "negativeExamples": [
          "issue_status"
        ]
      },
      {
        "regExp": "(?i).*(post|article|story|entry).*(title|headline).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "article_headline"
        ],
        "negativeExamples": [
          "article_id"
        ]
      },
      {
        "regExp": "(?i).*(record|item|document|file).*(title|subject).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "document_title"
        ],
        "negativeExamples": [
          "document_type"
        ]
      },
      {
        "regExp": "(?i).*(desc|description|comment|note|narrative).*(title|subject).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description_title"
        ],
        "negativeExamples": [
          "description_text"
        ]
      },
      {
        "regExp": "(?i).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "title"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Quarterly performance review summary",
      "Customer feedback regarding checkout experience",
      "Steps for reproducing login failures",
      "Notes from stakeholder kickoff meeting",
      "Summary covering platform latency incident",
      "Proposed approach for data migration",
      "Discussion about pricing model adjustments",
      "Followup actions after security audit"
    ],
    "negativeContentExamples": [
      "Server outage",
      "OK to ship",
      "Up to date",
      "INC-123456",
      "support@example.com",
      "2025-08-11",
      "John A. Smith",
      "ID 42"
    ],
    "positiveHeaderExamples": [
      "issue_title",
      "ticket_subject",
      "article_title",
      "post_headline",
      "record_title",
      "document_title",
      "bug_title",
      "case_subject"
    ],
    "negativeHeaderExamples": [
      "issue_status",
      "ticket_type",
      "article_id",
      "post_date",
      "record_number",
      "document_name",
      "bug_count",
      "case_closed_date"
    ],
    "explanation": "This semantic type captures free-form narrative strings commonly used as titles, headlines, or short descriptive lines for records, posts, and tickets. The regex requires at least three consecutive words of length three or more, favoring natural-language phrases over codes, IDs, dates, or single tokens. Use it to identify columns and values that function as human-readable titles or short narrative descriptors.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:19.116626"
  },
  {
    "resultType": "generated",
    "semanticType": "height",
    "description": "Numeric height measurements expressed with common metric or imperial units (e.g., centimeters, meters, inches, or feet and inches). Typical formats include values like \"180 cm\", \"1.75 m\", \"70 in\", \"6 ft 0 in\", or tick/quote notation such as \"5'11\"\".",
    "pluginType": "regex",
    "regexPattern": "\\b(\\d{1,2}\\s?(ft|foot|feet)\\s?\\d{1,2}\\s?(in|inch|inches)|\\d{1,2}\\s?'\\s?\\d{1,2}\\s?\"|\\d{2,3}\\s?(\"|in|inch|inches)|\\d{1,2}\\s?(ft|foot|feet)|\\d{1,3}(\\.\\d{1,2})?\\s?(cm|centimeter|centimeters|m|meter|meters))\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9310,
    "headerPatterns": [
      {
        "regExp": "(?i).*(patient|employee|user|person).*(height|stature).*(cm|in|m|ft).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "patient_height_cm"
        ],
        "negativeExamples": [
          "patient_weight_kg"
        ]
      },
      {
        "regExp": "(?i).*(body|human).*height.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "body_height"
        ],
        "negativeExamples": [
          "human_weight"
        ]
      },
      {
        "regExp": "(?i).*(stature|ht).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "stature"
        ],
        "negativeExamples": [
          "status"
        ]
      },
      {
        "regExp": "(?i).*height.*(cm|in|m|ft).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "height_in"
        ],
        "negativeExamples": [
          "length_cm"
        ]
      },
      {
        "regExp": "(?i).*height.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "height"
        ],
        "negativeExamples": [
          "width"
        ]
      }
    ],
    "positiveContentExamples": [
      "180 cm",
      "172 centimeters",
      "1.75 m",
      "5 ft 11 in",
      "5'11\"",
      "70 in",
      "6 ft",
      "5' 9\""
    ],
    "negativeContentExamples": [
      "180",
      "1,75 m",
      "5'11",
      "169cms",
      "180-centimeters",
      "six feet two inches",
      "5.11 ft",
      "70cm2"
    ],
    "positiveHeaderExamples": [
      "patient_height_cm",
      "person_height",
      "body_height",
      "height_in",
      "height_m",
      "stature",
      "ht",
      "user_height"
    ],
    "negativeHeaderExamples": [
      "weight",
      "length",
      "depth",
      "altitude",
      "width",
      "distance",
      "age",
      "thickness"
    ],
    "explanation": "This semantic type detects height values recorded with explicit physical units across common formats, including metric (cm, m) and imperial (in, ft-in) as well as tick/quote notation. It is useful for identifying columns storing human or object heights in standardized unit-bearing forms, enabling normalization and unit conversion.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:19.586542"
  },
  {
    "resultType": "generated",
    "semanticType": "duration",
    "description": "Textual representations of elapsed time or spans, expressed with explicit duration units (e.g., hours, minutes, seconds, days) or ISO 8601 duration notation. Examples include values like \"2h 30m\", \"15 minutes\", \"3 days\", and \"PT45M\".",
    "pluginType": "regex",
    "regexPattern": "\\b((\\d+(\\.\\d+)?\\s*(years|year|yrs|yr|y|months|month|mos|mo|weeks|week|w|days|day|d|hours|hour|hrs|hr|h|minutes|minute|mins|min|m|seconds|second|secs|sec|s))(\\s+\\d+(\\.\\d+)?\\s*(years|year|yrs|yr|y|months|month|mos|mo|weeks|week|w|days|day|d|hours|hour|hrs|hr|h|minutes|minute|mins|min|m|seconds|second|secs|sec|s)){0,2})\\b|\\bP\\d+Y\\b|\\bP\\d+M\\b|\\bP\\d+W\\b|\\bP\\d+D\\b|\\bPT\\d+H(\\d+M)?(\\d+S)?\\b|\\bPT\\d+M(\\d+S)?\\b|\\bPT\\d+S\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9550,
    "headerPatterns": [
      {
        "regExp": "(?i).*(video|session|call|playback).*duration.*(seconds|secs|ms|minutes|mins|hours|hrs).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "video_duration_seconds"
        ],
        "negativeExamples": [
          "video_start_time"
        ]
      },
      {
        "regExp": "(?i).*(processing|wait|response|uptime|downtime|runtime).*duration.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "response_duration"
        ],
        "negativeExamples": [
          "response_code"
        ]
      },
      {
        "regExp": "(?i).*(avg|average|mean|median|max|min).*duration.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "avg_duration"
        ],
        "negativeExamples": [
          "avg_distance"
        ]
      },
      {
        "regExp": "(?i).*(elapsed|time_spent|time_taken|time_to|execution_time).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "elapsed_time"
        ],
        "negativeExamples": [
          "timezone"
        ]
      },
      {
        "regExp": "(?i).*duration.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "duration"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "2h 30m",
      "15 minutes",
      "1.5 hrs",
      "3 days",
      "PT45M",
      "P2D",
      "90 sec",
      "4 weeks"
    ],
    "negativeContentExamples": [
      "12:30",
      "2023-05-01",
      "h2",
      "2 h 30",
      "10mA",
      "PT",
      "five minutes",
      "2km"
    ],
    "positiveHeaderExamples": [
      "session_duration",
      "video_duration_seconds",
      "call_duration_ms",
      "avg_session_duration",
      "response_duration",
      "elapsed_time",
      "playback_duration_min",
      "uptime_duration"
    ],
    "negativeHeaderExamples": [
      "start_time",
      "end_time",
      "response_code",
      "timezone",
      "distance",
      "date",
      "name",
      "speed"
    ],
    "explanation": "This semantic type identifies values that represent elapsed time spans, typically expressed with explicit units (seconds, minutes, hours, days, weeks, months, years) or ISO 8601 duration strings (e.g., PT45M, P2D). It is useful for classifying fields that measure lengths of processes, sessions, calls, or other time intervals rather than timestamps or dates.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:21.184168"
  },
  {
    "resultType": "generated",
    "semanticType": "country",
    "description": "The full English name for a country or nation as used in English-language contexts and international communication.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Z][a-z]{2,}|[A-Z]{4,}|of|and|the|d|OF|AND|THE|D)([ '-]([A-Z][a-z]{2,}|[A-Z]{4,}|of|and|the|d|OF|AND|THE|D)){0,6}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9130,
    "headerPatterns": [
      {
        "regExp": "(?i).*billing.*country.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "billing_country"
        ],
        "negativeExamples": [
          "billing_state"
        ]
      },
      {
        "regExp": "(?i).*shipping.*country.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "shipping_country"
        ],
        "negativeExamples": [
          "shipping_code"
        ]
      },
      {
        "regExp": "(?i).*country.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "country_name"
        ],
        "negativeExamples": [
          "country_code"
        ]
      },
      {
        "regExp": "(?i).*origin.*country.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "origin_country"
        ],
        "negativeExamples": [
          "origin_city"
        ]
      },
      {
        "regExp": "(?i).*(ctry|cntry).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ctry_name"
        ],
        "negativeExamples": [
          "ctry_code"
        ]
      },
      {
        "regExp": "(?i).*country.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "country"
        ],
        "negativeExamples": [
          "county"
        ]
      }
    ],
    "positiveContentExamples": [
      "United States of America",
      "United Kingdom",
      "Canada",
      "Australia",
      "New Zealand",
      "Saudi Arabia",
      "Democratic Republic of the Congo",
      "Cote d'Ivoire"
    ],
    "negativeContentExamples": [
      "USA",
      "U.S.A.",
      "US",
      "CA",
      "GB",
      "GBR",
      "US-CA",
      "US/CA"
    ],
    "positiveHeaderExamples": [
      "country",
      "country_name",
      "billing_country",
      "shipping_country",
      "origin_country",
      "destination_country",
      "residence_country",
      "issuing_country",
      "ctry_name"
    ],
    "negativeHeaderExamples": [
      "country_code",
      "iso_country_code",
      "state",
      "province",
      "city",
      "continent",
      "nationality",
      "county",
      "ctry_code"
    ],
    "explanation": "This semantic type identifies cells containing the full English name of a sovereign country or nation. It allows common punctuation such as spaces, hyphens, and apostrophes, and supports linking words like of, and, the, and d. Use this to recognize textual country names in addresses, shipping, residence, origin/destination, or issuing authority fields, distinct from country codes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:22.202998"
  },
  {
    "resultType": "generated",
    "semanticType": "number",
    "description": "A numeric-only unique identifier used to distinguish one entity from another within a system or dataset. It consists solely of digits and is typically stored without separators or formatting to ensure stable matching in diverse datasets.",
    "pluginType": "regex",
    "regexPattern": "\\b\\d{6,20}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9630,
    "headerPatterns": [
      {
        "regExp": "(?i).*unique.*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unique_number"
        ],
        "negativeExamples": [
          "unique_id"
        ]
      },
      {
        "regExp": "(?i).*record.*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "record_number"
        ],
        "negativeExamples": [
          "record_id"
        ]
      },
      {
        "regExp": "(?i).*reference.*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "reference_number"
        ],
        "negativeExamples": [
          "reference_code"
        ]
      },
      {
        "regExp": "(?i).*id.*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "id_number"
        ],
        "negativeExamples": [
          "id"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "123456",
      "0000123456",
      "9876543210",
      "202407150001",
      "555001223344",
      "7612345678901234",
      "12345678901234567890",
      "700000"
    ],
    "negativeContentExamples": [
      "12345",
      "123456789012345678901",
      "123 456",
      "123-456789",
      "123456.0",
      "+1234567",
      "ABC123456",
      "000-001234"
    ],
    "positiveHeaderExamples": [
      "unique_number",
      "record_number",
      "reference_number",
      "id_number",
      "entity_number",
      "ticket_number",
      "system_number",
      "object_number"
    ],
    "negativeHeaderExamples": [
      "unique_id",
      "record_id",
      "reference_code",
      "identifier",
      "numeric_value",
      "count",
      "id",
      "key"
    ],
    "explanation": "This semantic type targets columns that store purely numeric unique identifiers, typically fixed-length or variable-length digit sequences with no separators. It is intentionally broad to provide a generic catch-all for numeric identifiers when no more specific identifier type applies; set at a high threshold and low priority to avoid overriding more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:31.005601"
  },
  {
    "resultType": "generated",
    "semanticType": "id",
    "description": "A unique identifier used to distinguish one entity from another within a system or dataset. Values are typically opaque tokens such as numeric sequences, UUIDs, or mixed alphanumeric strings that may include hyphens or underscores.",
    "pluginType": "regex",
    "regexPattern": "\\b([0-9]{6,20}|[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}|[A-Za-z0-9]+_[A-Za-z0-9_-]{2,30}|[A-Za-z0-9]+-[A-Za-z0-9_-]{2,30}|[A-Za-z]+[0-9][A-Za-z0-9]{4,30}|[0-9]+[A-Za-z][A-Za-z0-9]{4,30})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9050,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer[_ ]id|user[_ ]id|order[_ ]id|record[_ ]id|account[_ ]id).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_id"
        ],
        "negativeExamples": [
          "customer_code"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|order|record|account).*(identifier|identification).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_identification"
        ],
        "negativeExamples": [
          "order_number"
        ]
      },
      {
        "regExp": "(?i).*(cust|usr|acct|ord)[_ ]?id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "acct_id"
        ],
        "negativeExamples": [
          "acct_code"
        ]
      },
      {
        "regExp": "(?i).*(unique[_ ]id|uid|uuid).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unique_id"
        ],
        "negativeExamples": [
          "unique_code"
        ]
      },
      {
        "regExp": "(?i).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "id"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "0001234567",
      "847362",
      "550e8400-e29b-41d4-a716-446655440000",
      "usr_9q2LZ7",
      "XJ9-7K2-88A",
      "ab12cd34ef",
      "7GHTR2",
      "account_00123"
    ],
    "negativeContentExamples": [
      "12345",
      "A1B2C",
      "customer",
      "550e8400e29b41d4a716446655440000",
      "ab_cd.12",
      "12 345678",
      "-ABC123",
      "ID#12345"
    ],
    "positiveHeaderExamples": [
      "user_id",
      "customer id",
      "record_id",
      "order_identifier",
      "unique_id",
      "uid",
      "uuid",
      "account_id"
    ],
    "negativeHeaderExamples": [
      "customer_code",
      "user_number",
      "record_name",
      "order_date",
      "unique_code",
      "account_status",
      "transaction_ref",
      "product_key"
    ],
    "explanation": "This semantic type targets generic identifiers commonly used as primary keys or unique references within datasets. It recognizes numeric IDs of moderate length, canonical hyphenated UUIDs, and mixed alphanumeric tokens that may include underscores or hyphens, while excluding short numbers, plain words, or values containing disallowed punctuation or spaces. Use for columns whose values are opaque unique keys rather than human-readable codes or names.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:31.232350"
  },
  {
    "resultType": "generated",
    "semanticType": "language",
    "description": "The full name of a language as it is commonly known and written in English, such as English, French, or German.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Z][a-z]+(-[A-Z][a-z]+)?)( ([A-Z][a-z]+(-[A-Z][a-z]+)?)){0,2}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9440,
    "headerPatterns": [
      {
        "regExp": "(?i).*(preferred|primary|native|spoken).*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "preferred_language"
        ],
        "negativeExamples": [
          "language_code"
        ]
      },
      {
        "regExp": "(?i).*(user|customer|account|profile).*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_language"
        ],
        "negativeExamples": [
          "programming_language"
        ]
      },
      {
        "regExp": "(?i).*interface.*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "interface_language"
        ],
        "negativeExamples": [
          "interface_locale"
        ]
      },
      {
        "regExp": "(?i).*(preferred|primary|native|spoken).*lang.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "preferred_lang"
        ],
        "negativeExamples": [
          "lang_code"
        ]
      },
      {
        "regExp": "(?i).*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "language"
        ],
        "negativeExamples": [
          "locale"
        ]
      }
    ],
    "positiveContentExamples": [
      "English",
      "French",
      "German",
      "Spanish",
      "Portuguese",
      "Mandarin Chinese",
      "Haitian Creole",
      "Serbo-Croatian"
    ],
    "negativeContentExamples": [
      "english",
      "ENGLISH",
      "en",
      "en-US",
      "English (UK)",
      "fr_CA",
      "English/Spanish",
      "Hindi2"
    ],
    "positiveHeaderExamples": [
      "preferred_language",
      "user_language",
      "native_language",
      "spoken_language",
      "primary_language",
      "customer_language",
      "interface_language"
    ],
    "negativeHeaderExamples": [
      "language_code",
      "locale",
      "user_locale",
      "preferred_locale",
      "lang_code",
      "programming_language",
      "country_language_code"
    ],
    "explanation": "Identifies values that are full, human language names written in English. The pattern expects one to three capitalized words, with optional single hyphens inside tokens, which aligns with typical language naming (e.g., Serbo-Croatian, Haitian Creole). This type is intentionally conservative to avoid false positives and is best used alongside header context to disambiguate from language codes or locale identifiers.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:32.195217"
  },
  {
    "resultType": "generated",
    "semanticType": "project",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\"\\-(),.;:!?/&%]* [A-Za-z0-9][A-Za-z0-9'\"\\-(),.;:!?/&%]* [A-Za-z0-9][A-Za-z0-9'\"\\-(),.;:!?/&%]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9560,
    "headerPatterns": [
      {
        "regExp": "(?i).*project.*(description|notes|comments|remark|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_description"
        ],
        "negativeExamples": [
          "project_code"
        ]
      },
      {
        "regExp": "(?i).*(ticket|issue|task|case).*(description|notes|comments|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "ticket_id"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|account).*(notes|comments|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "user_email"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmt|rmks|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "body_txt"
        ],
        "negativeExamples": [
          "discount_rate"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "notes"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the updated project timeline before kickoff.",
      "Customer reported intermittent outages during peak hours.",
      "Follow up with the vendor about replacement parts tomorrow.",
      "Meeting rescheduled due to conflicting travel plans.",
      "This record was migrated from the legacy system in 2019.",
      "Use caution: values may be null when the service is offline.",
      "Add a note for finance to reconcile the two amounts.",
      "On-call engineer confirmed the alert was a false positive."
    ],
    "negativeContentExamples": [
      "Fix bug",
      "Pending",
      "N/A",
      "2024-05-01",
      "john.doe@example.com",
      "AB-12345",
      "See note",
      "2023 Q4"
    ],
    "positiveHeaderExamples": [
      "project_description",
      "project_notes",
      "ticket_comments",
      "issue_description",
      "case_details",
      "user_notes",
      "account_comments",
      "body_txt"
    ],
    "negativeHeaderExamples": [
      "project_id",
      "project_code",
      "project_name",
      "ticket_number",
      "issue_status",
      "task_date",
      "user_email",
      "amount"
    ],
    "explanation": "This semantic type targets fields that contain narrative, free-form text such as descriptions, comments, notes, remarks, and similar unstructured content. It emphasizes multi-word phrases typical of narrative entries and uses header cues common to comment/description fields. Because narrative text is broad and potentially overlaps with other categories, the threshold and priority are set conservatively to minimize conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:32.367661"
  },
  {
    "resultType": "generated",
    "semanticType": "length",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\u2019\\-]{1,}\\b([ \\t,;:!?()]+[A-Za-z0-9][A-Za-z0-9'\u2019\\-]{1,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9540,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|ticket|case|issue)[ _-]*(description|desc|comments|notes|remark|narrative|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_description"
        ],
        "negativeExamples": [
          "ticket_number"
        ]
      },
      {
        "regExp": "(?i).*(free[ _-]*text|description|desc|comments|comment|notes|note|remarks|remark|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*(message|msg).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_message"
        ],
        "negativeExamples": [
          "user_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "item_desc"
        ],
        "negativeExamples": [
          "item_code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "phone"
        ]
      }
    ],
    "positiveContentExamples": [
      "Issue persists after reboot; logs attached for review.",
      "Customer reported intermittent lag when saving files.",
      "Please follow up with the vendor next week regarding replacement.",
      "The package arrived damaged, corners crushed and seal broken.",
      "Working as expected in staging, awaiting production rollout.",
      "Add a reminder to check battery levels before deployment.",
      "No further action required at this time; closing the ticket.",
      "User requests access to the analytics dashboard and reports."
    ],
    "negativeContentExamples": [
      "N/A",
      "ok",
      "pending review",
      "description",
      "12345 67890",
      "07/21/2025",
      "alpha beta",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "description",
      "comments",
      "notes",
      "free_text",
      "message",
      "remarks",
      "narrative",
      "comment"
    ],
    "negativeHeaderExamples": [
      "length",
      "status",
      "title",
      "subject",
      "category",
      "code",
      "id",
      "email"
    ],
    "explanation": "This semantic type identifies fields that contain narrative, unstructured text such as descriptions, comments, notes, or messages. The value pattern favors multi-word, sentence-like strings with spaces and common punctuation to avoid over-matching short or highly structured tokens. Use this to classify free-text comment fields for search, NLP, or redaction workflows; the high threshold and lower priority reduce conflicts with more specific semantic types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:35.592630"
  },
  {
    "resultType": "generated",
    "semanticType": "version",
    "description": "A version identifier used to distinguish one release or revision of an entity (such as software, API, schema, or dataset) from another. Values typically consist of dot-separated numeric segments with an optional leading 'v', optional pre-release tag, and optional build metadata.",
    "pluginType": "regex",
    "regexPattern": "\\b(v|V)?\\d{1,4}(\\.\\d{1,4}){0,3}((-|_)[a-z]{3,10}\\d{0,3})?(\\+[A-Za-z0-9]{1,10})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9600,
    "headerPatterns": [
      {
        "regExp": "(?i).*software[ _-]*version.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "software_version"
        ],
        "negativeExamples": [
          "software_release"
        ]
      },
      {
        "regExp": "(?i).*(api|schema|db)[ _-]*version.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "api_version"
        ],
        "negativeExamples": [
          "api_level"
        ]
      },
      {
        "regExp": "(?i).*(app|client|package)[ _-]*version.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "app_version"
        ],
        "negativeExamples": [
          "client_build"
        ]
      },
      {
        "regExp": "(?i).*version[ _-]*(number|num|no).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "version_number"
        ],
        "negativeExamples": [
          "build_number"
        ]
      },
      {
        "regExp": "(?i).*version.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "version"
        ],
        "negativeExamples": [
          "revision"
        ]
      }
    ],
    "positiveContentExamples": [
      "1.0",
      "2.3.4",
      "v1.2.3",
      "10.0.1",
      "3.1.4-beta",
      "v2.0-rc1",
      "2021.04.0",
      "1.0.0+build1"
    ],
    "negativeContentExamples": [
      "v 1.2.3",
      "1..2",
      "1.2.",
      "r1.2.3",
      "2021/04/0",
      "1-2-3",
      "v1.2.3.4.5",
      "1.2beta"
    ],
    "positiveHeaderExamples": [
      "software_version",
      "api_version",
      "schema_version",
      "version_number",
      "data_version",
      "release_version",
      "app_version",
      "version"
    ],
    "negativeHeaderExamples": [
      "software_release",
      "api_level",
      "schema_rev",
      "build_number",
      "data_revision",
      "client_build",
      "app_update",
      "current_release"
    ],
    "explanation": "This semantic type detects version identifiers commonly used for software, APIs, schemas, and datasets. The pattern supports an optional 'v' prefix, 1\u20134 dot-separated numeric segments, an optional lowercase pre-release tag (e.g., -beta, -rc1), and optional build metadata introduced by '+'. Header patterns prioritize explicit version-related column names before falling back to the primitive 'version' term.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:35.938135"
  },
  {
    "resultType": "generated",
    "semanticType": "topic",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'&()/\\.\\-]{1,}\\b(\\s+[A-Za-z][A-Za-z0-9'&()/\\.\\-]{1,}\\b){1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9460,
    "headerPatterns": [
      {
        "regExp": "(?i).*(ticket|case|issue|incident).*(description|details|narrative|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "issue_status"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|account).*(comments|notes|feedback|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(additional|extra|internal|public).*(notes|comments|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "internal_flag"
        ]
      },
      {
        "regExp": "(?i).*(narrative|description|details|notes|comments).*(text|body|content).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description_text"
        ],
        "negativeExamples": [
          "description_count"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer requested a refund due to delayed shipment.",
      "Follow up required after site visit on Monday.",
      "Internal note: migrate legacy records before launch.",
      "Root cause unknown; investigating network latency.",
      "Quarterly revenue trend and key risks.",
      "Please contact the vendor to confirm availability.",
      "Steps to reproduce the error are attached below.",
      "Reminder to update documentation and training materials."
    ],
    "negativeContentExamples": [
      "Q4",
      "12/31/2024",
      "https://example.com",
      "A-12345",
      "ID 98765",
      "SKU 12345",
      "123 456",
      "Re: 12345"
    ],
    "positiveHeaderExamples": [
      "issue_description",
      "case_notes",
      "customer_comments",
      "user_feedback",
      "internal_notes",
      "additional_description",
      "narrative_text",
      "description_body"
    ],
    "negativeHeaderExamples": [
      "issue_status",
      "customer_id",
      "ticket_number",
      "account_code",
      "summary",
      "subject",
      "comment_count",
      "note_id"
    ],
    "explanation": "This semantic type targets unstructured narrative fields that contain multi-word free text such as descriptions, notes, and comments. The value pattern favors at least two space-separated words starting with letters, allowing common punctuation, to avoid matching IDs, codes, dates, or URLs. Use cases include classifying columns that hold descriptive narratives for tickets, cases, customer interactions, and internal notes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:36.803711"
  },
  {
    "resultType": "generated",
    "semanticType": "prefix",
    "description": "A title or form of address that precedes a person's name to show respect, courtesy, or professional status in English-speaking contexts. Examples include abbreviated honorifics and formal titles commonly used before a given or full name.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "MR",
      "MR.",
      "MRS",
      "MRS.",
      "MS",
      "MS.",
      "MISS",
      "MX",
      "MX.",
      "DR",
      "DR.",
      "PROF",
      "PROF.",
      "SIR",
      "SIR.",
      "DAME",
      "REV",
      "REV.",
      "FR",
      "HON",
      "HON.",
      "JUDGE",
      "PRES",
      "PRES.",
      "GOV"
    ],
    "backout": "^[A-Z]{2,6}[.]?$",
    "confidenceThreshold": 96,
    "priority": 9530,
    "headerPatterns": [
      {
        "regExp": "(?i).*(honorific|title).*prefix.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "honorific_prefix"
        ],
        "negativeExamples": [
          "job_title"
        ]
      },
      {
        "regExp": "(?i).*(name|person).*prefix.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name_prefix"
        ],
        "negativeExamples": [
          "name_suffix"
        ]
      },
      {
        "regExp": "(?i).*name.*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name_title"
        ],
        "negativeExamples": [
          "job_title"
        ]
      },
      {
        "regExp": "(?i).*prefix.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "title_prefix"
        ],
        "negativeExamples": [
          "suffix"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "title"
        ]
      }
    ],
    "positiveContentExamples": [
      "MR.",
      "MR",
      "MRS",
      "MS.",
      "MX",
      "DR",
      "PROF.",
      "SIR"
    ],
    "negativeContentExamples": [
      "Mister",
      "Doctor",
      "Dr..",
      "Ms-",
      "MRR",
      "JR.",
      "President",
      "Prof,"
    ],
    "positiveHeaderExamples": [
      "honorific_prefix",
      "name_prefix",
      "person_prefix",
      "name_title",
      "title_prefix",
      "customer_name_prefix",
      "prefix"
    ],
    "negativeHeaderExamples": [
      "job_title",
      "suffix",
      "position_title",
      "designation",
      "greeting",
      "department",
      "rank"
    ],
    "explanation": "This semantic type identifies common English honorifics and titles used directly before a person's name (e.g., MR., DR., PROF.), focusing on short, standardized abbreviations with optional trailing periods. It is useful for parsing or normalizing person records where prefixes are stored separately from given and family names.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:36.803896"
  },
  {
    "resultType": "generated",
    "semanticType": "rating",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems. This type captures multi-word narrative text rather than structured identifiers, codes, or numeric ratings.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z][a-zA-Z0-9'()&,;:/\\.\\-]{1,} [a-zA-Z][a-zA-Z0-9'()&,;:/\\.\\-]{1,}( [a-zA-Z][a-zA-Z0-9'()&,;:/\\.\\-]{1,}){0,30}[.!?]?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9480,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*review.*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_review_text"
        ],
        "negativeExamples": [
          "customer_review_score"
        ]
      },
      {
        "regExp": "(?i).*product.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(user|cust).*cmt.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "cust_cmt"
        ],
        "negativeExamples": [
          "user_count"
        ]
      },
      {
        "regExp": "(?i).*issue.*notes?.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_notes"
        ],
        "negativeExamples": [
          "issue_count"
        ]
      },
      {
        "regExp": "(?i).*(feedback|remarks|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "feedback"
        ],
        "negativeExamples": [
          "rating_value"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "review_text"
        ],
        "negativeExamples": [
          "review_score"
        ]
      }
    ],
    "positiveContentExamples": [
      "Great product, arrived early and well packaged.",
      "Customer service was helpful and resolved my issue quickly.",
      "Delivery was late, but the quality met expectations.",
      "Needs improvement on battery life and documentation.",
      "Works as described; setup took about ten minutes.",
      "Excellent build quality. Would recommend to colleagues.",
      "Item was damaged on arrival; replacement process was smooth.",
      "Clear instructions, intuitive interface, and reliable performance."
    ],
    "negativeContentExamples": [
      "5",
      "4/5",
      "Approved",
      "N/A",
      "john.doe@example.com",
      "2024-08-10",
      "AB-123",
      "ref:12345"
    ],
    "positiveHeaderExamples": [
      "customer_review_text",
      "product_description",
      "user_comments",
      "issue_notes",
      "feedback",
      "remarks",
      "narrative_text",
      "rating_text"
    ],
    "negativeHeaderExamples": [
      "review_score",
      "rating",
      "comment_count",
      "product_id",
      "created_date",
      "email",
      "phone_number",
      "order_code"
    ],
    "explanation": "This semantic type targets free-form narrative fields commonly used for human-readable descriptions, comments, notes, and review text. It requires multi-word content and allows common punctuation, reducing false positives from codes, identifiers, dates, and numeric ratings. Use it to identify columns that store narrative feedback or descriptive text rather than numeric or code-based data.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:38.265256"
  },
  {
    "resultType": "generated",
    "semanticType": "role",
    "description": "A professional position or role designation that describes an individual's function, responsibilities, or occupation within an organization.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(ceo|cfo|cto|cio|cmo|coo|svp|evp|vp|president|director|manager|mgr|lead|head|officer|intern|analyst|engineer|developer|architect|scientist|designer|tester|consultant|specialist|coordinator|administrator|associate|representative|rep|assistant)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9610,
    "headerPatterns": [
      {
        "regExp": "(?i).*(employee|staff|user).*role.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "employee_role"
        ],
        "negativeExamples": [
          "department_role"
        ]
      },
      {
        "regExp": "(?i).*job.*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "job_title"
        ],
        "negativeExamples": [
          "project_title"
        ]
      },
      {
        "regExp": "(?i).*(position|function).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "position_title"
        ],
        "negativeExamples": [
          "function_id"
        ]
      },
      {
        "regExp": "(?i).*(mgr|vp|svp|evp).*(role|title).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "mgr_role"
        ],
        "negativeExamples": [
          "mgr_id"
        ]
      },
      {
        "regExp": "(?i).*role.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "role"
        ],
        "negativeExamples": [
          "title"
        ]
      }
    ],
    "positiveContentExamples": [
      "Software Engineer",
      "Senior Product Manager",
      "Chief Financial Officer",
      "VP Sales",
      "Data Scientist",
      "Customer Support Representative",
      "QA Analyst",
      "Head of Marketing"
    ],
    "negativeContentExamples": [
      "Engineering",
      "Management",
      "Sales Department",
      "Software",
      "Product Team",
      "Seniority Level",
      "Directorates",
      "Representative Sample"
    ],
    "positiveHeaderExamples": [
      "employee_role",
      "job_title",
      "position_title",
      "user_role",
      "functional_role",
      "staff_role",
      "role",
      "position"
    ],
    "negativeHeaderExamples": [
      "department_role",
      "project_title",
      "position_id",
      "job_code",
      "department",
      "category",
      "mgr_id",
      "title_code"
    ],
    "explanation": "This semantic type detects free-text job or position labels assigned to people, such as managerial, executive, or individual contributor roles. It matches common role keywords and abbreviations using word boundaries to avoid partial-word false positives. Use this type to classify columns containing role/occupation values like 'Software Engineer' or 'Director' and to differentiate them from identifiers or codes associated with jobs (e.g., job_code). The header patterns progress from highly specific phrases (e.g., employee_role, job_title) to the primitive term 'role'.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:41.515102"
  },
  {
    "resultType": "generated",
    "semanticType": "month",
    "description": "A numerical representation of calendar months using integers from 1 to 12, where 1 represents January and 12 represents December.",
    "pluginType": "regex",
    "regexPattern": "\\b([1-9]|1[0-2])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 96,
    "priority": 9720,
    "headerPatterns": [
      {
        "regExp": "(?i).*billing.*month.*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "billing_month_number"
        ],
        "negativeExamples": [
          "billing_cycle_number"
        ]
      },
      {
        "regExp": "(?i).*month.*of.*year.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "month_of_year"
        ],
        "negativeExamples": [
          "day_of_year"
        ]
      },
      {
        "regExp": "(?i).*(fiscal|calendar).*month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "fiscal_month"
        ],
        "negativeExamples": [
          "fiscal_year"
        ]
      },
      {
        "regExp": "(?i).*\\b(mth|mnth)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "txn_mth"
        ],
        "negativeExamples": [
          "math_score"
        ]
      },
      {
        "regExp": "(?i).*month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "month"
        ],
        "negativeExamples": [
          "weekday"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "2",
      "3",
      "7",
      "9",
      "10",
      "11",
      "12"
    ],
    "negativeContentExamples": [
      "0",
      "13",
      "01",
      "003",
      "1a",
      "a12",
      "12a",
      "5e0"
    ],
    "positiveHeaderExamples": [
      "month",
      "month_of_year",
      "fiscal_month",
      "billing_month_number",
      "posting_month",
      "service_month",
      "txn_mth"
    ],
    "negativeHeaderExamples": [
      "month_name",
      "month_text",
      "month_label",
      "month_start_date",
      "month_end_date",
      "day_of_month",
      "year",
      "week"
    ],
    "explanation": "This semantic type captures integer tokens representing calendar months from 1 through 12. It is useful for fields that store the month component as a standalone numeric value rather than as part of a full date or as a textual month name.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:42.652565"
  },
  {
    "resultType": "generated",
    "semanticType": "age",
    "description": "A numerical value representing a person's current age in years since birth, commonly used for demographic analysis and age verification.",
    "pluginType": "regex",
    "regexPattern": "\\b(120|1[01][0-9]|[1-9]?[0-9])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9500,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client).*age.*years.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_age_years"
        ],
        "negativeExamples": [
          "date_of_birth"
        ]
      },
      {
        "regExp": "(?i).*(person|user|member).*age.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "person_age"
        ],
        "negativeExamples": [
          "birth_year"
        ]
      },
      {
        "regExp": "(?i).*age_yrs.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "age_yrs"
        ],
        "negativeExamples": [
          "age_in_months"
        ]
      },
      {
        "regExp": "(?i).*age.*years.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "age_in_years"
        ],
        "negativeExamples": [
          "years_at_company"
        ]
      },
      {
        "regExp": "(?i).*age.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "age"
        ],
        "negativeExamples": [
          "dob"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "5",
      "18",
      "21",
      "34",
      "65",
      "99",
      "120"
    ],
    "negativeContentExamples": [
      "121",
      "130",
      "999",
      "05",
      "001",
      "00",
      "1e2"
    ],
    "positiveHeaderExamples": [
      "customer_age_years",
      "person_age",
      "user_age",
      "member_age",
      "age_yrs",
      "age_in_years",
      "age"
    ],
    "negativeHeaderExamples": [
      "date_of_birth",
      "birth_year",
      "years_at_company",
      "seniority_years",
      "customer_since_year",
      "child_dob",
      "dob"
    ],
    "explanation": "This semantic type identifies integer age values in years typically used in person-related datasets. The pattern covers ages from 0 to 120 inclusive and avoids matching decimals, negatives, and out-of-range values. Use this type to validate or classify age fields for demographic analysis, eligibility checks, or age-based segmentation. Header patterns prioritize explicit person-centric contexts and common abbreviations, ending with a primitive catch-all for 'age'.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:44.454084"
  },
  {
    "resultType": "generated",
    "semanticType": "abbreviation",
    "description": "Shortened forms of terms such as acronyms and initialisms consisting of 2\u20136 uppercase letters, optionally separated by dots, slashes, ampersands, or hyphens (for example, HR, R&D, U.S.A., QA/QC). Intended to classify fields that store standardized abbreviations rather than free\u2011form narrative text.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Z]{2,6}|([A-Z]\\.){2,6}|[A-Z]{1,3}([/&\\.-][A-Z]{1,3}){1,3})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9570,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client).*(abbreviation|abbr|acronym).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_abbreviation"
        ],
        "negativeExamples": [
          "customer_description"
        ]
      },
      {
        "regExp": "(?i).*(product|item|part).*(short[ _]?name|short[ _]?form|abbr).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_short_name"
        ],
        "negativeExamples": [
          "product_full_name"
        ]
      },
      {
        "regExp": "(?i).*(department|dept|division).*(abbr|acronym).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "dept_abbr"
        ],
        "negativeExamples": [
          "dept_id"
        ]
      },
      {
        "regExp": "(?i).*(initialism|acronym).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "supplier_acronym"
        ],
        "negativeExamples": [
          "supplier_code"
        ]
      },
      {
        "regExp": "(?i).*abbr.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "abbr"
        ],
        "negativeExamples": [
          "id"
        ]
      },
      {
        "regExp": "(?i).*abbreviation.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "abbreviation"
        ],
        "negativeExamples": [
          "description"
        ]
      }
    ],
    "positiveContentExamples": [
      "HR",
      "ETA",
      "DOB",
      "R&D",
      "N/A",
      "H.R.",
      "QA/QC",
      "FYI"
    ],
    "negativeContentExamples": [
      "Hr",
      "HR-1",
      "R and D",
      "HR Dept",
      "e.g.",
      "FYI!",
      "U S A",
      "AB cd"
    ],
    "positiveHeaderExamples": [
      "customer_abbreviation",
      "product_short_name",
      "dept_abbr",
      "supplier_acronym",
      "initialism",
      "company_short_form",
      "abbr",
      "part_abbreviation"
    ],
    "negativeHeaderExamples": [
      "customer_description",
      "product_full_name",
      "dept_id",
      "supplier_code",
      "notes",
      "comment_text",
      "long_description",
      "full_title"
    ],
    "explanation": "This semantic type identifies short, standardized abbreviations (acronyms and initialisms) commonly used in datasets to compactly represent concepts, departments, processes, or statuses. The pattern is constrained to uppercase letters with limited structural separators to avoid matching general free text or identifiers with digits. It is useful for columns intended to store a short form rather than narrative descriptions.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:46.699996"
  },
  {
    "resultType": "generated",
    "semanticType": "author",
    "description": "A complete personal name combining first and last names in the conventional Western format with a space separator.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]+ [A-Za-z][A-Za-z'-]+\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9520,
    "headerPatterns": [
      {
        "regExp": "(?i).*author.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "primary_author_full_name"
        ],
        "negativeExamples": [
          "author_id"
        ]
      },
      {
        "regExp": "(?i).*(book|primary|lead).*author.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "book_author_name"
        ],
        "negativeExamples": [
          "book_title"
        ]
      },
      {
        "regExp": "(?i).*(lead|primary|main).*author.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "lead_author"
        ],
        "negativeExamples": [
          "reviewer_name"
        ]
      },
      {
        "regExp": "(?i).*(author|auth|writer).*(name|nm).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "auth_nm"
        ],
        "negativeExamples": [
          "author_notes"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "title"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Mary O'Neil",
      "Anne-Marie Clark",
      "Jean-Luc Picard",
      "Carlos Mendez",
      "JANE DOE",
      "Li Wei",
      "Maria delToro"
    ],
    "negativeContentExamples": [
      "John",
      "Smith, John",
      "J. Doe",
      "John Q. Public",
      "John-Smith",
      "Anna-Marie",
      "Mary O\u2019Neil",
      "John  Smith"
    ],
    "positiveHeaderExamples": [
      "author_full_name",
      "primary_author_name",
      "book_author_name",
      "lead_author",
      "writer_name",
      "auth_nm",
      "contributing_author_name",
      "authorname"
    ],
    "negativeHeaderExamples": [
      "author_id",
      "book_title",
      "reviewer_name",
      "publisher_name",
      "customer_name",
      "author_notes",
      "username",
      "coauthor_ids"
    ],
    "explanation": "This semantic type detects a complete personal name consisting of exactly two tokens (first and last) separated by a single space, allowing internal hyphens and apostrophes within each token. It is intended for author name fields where the content is a person's full name in Western order (given name followed by family name). The regex avoids anchors and enforces a two-token structure to reduce false positives; header patterns focus on author-centric fields to further disambiguate from generic name columns.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:49.364097"
  },
  {
    "resultType": "generated",
    "semanticType": "day",
    "description": "A numerical representation of the day within a calendar month, ranging from 1 to 31 depending on the specific month. Allows an optional leading zero for single-digit days.",
    "pluginType": "regex",
    "regexPattern": "\\b(0?[1-9]|[12][0-9]|3[01])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9620,
    "headerPatterns": [
      {
        "regExp": "(?i).*day[ _]of[ _]month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "day_of_month"
        ],
        "negativeExamples": [
          "day_of_week"
        ]
      },
      {
        "regExp": "(?i).*(billing|invoice|transaction|order).*day.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "invoice_day"
        ],
        "negativeExamples": [
          "invoice_date"
        ]
      },
      {
        "regExp": "(?i).*(day[ _]?no|day[ _]?num|dom).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "day_no"
        ],
        "negativeExamples": [
          "num_days"
        ]
      },
      {
        "regExp": "(?i).*(month.*day|day.*month).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "month_day"
        ],
        "negativeExamples": [
          "month_end_date"
        ]
      },
      {
        "regExp": "(?i).*day.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "day"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "2",
      "7",
      "09",
      "10",
      "15",
      "30",
      "31"
    ],
    "negativeContentExamples": [
      "00",
      "32",
      "3.0",
      "31st",
      "1/2",
      "-5",
      "100",
      "2-2"
    ],
    "positiveHeaderExamples": [
      "day_of_month",
      "billing_day_of_month",
      "transaction_day",
      "invoice_day",
      "dom",
      "day_no",
      "daynum",
      "month_day"
    ],
    "negativeHeaderExamples": [
      "date",
      "month",
      "week",
      "year",
      "invoice_date",
      "posting_date",
      "timestamp",
      "quarter"
    ],
    "explanation": "This semantic type identifies the day component within a calendar month as an integer from 1 to 31, optionally zero-padded for single-digit values (e.g., 01\u201309). It is useful for columns storing the day-of-month separate from month and year, and pairs well with header names like day_of_month, dom, or day_no.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:49.548296"
  },
  {
    "resultType": "generated",
    "semanticType": "created",
    "description": "A numeric timestamp representing seconds elapsed since January 1, 1970 UTC, widely used in Unix systems and programming languages.",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9][0-9]{8,9}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9710,
    "headerPatterns": [
      {
        "regExp": "(?i).*created.*epoch.*sec.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "created_epoch_sec"
        ],
        "negativeExamples": [
          "created_epoch_ms"
        ]
      },
      {
        "regExp": "(?i).*created.*unix.*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "created_unix_time"
        ],
        "negativeExamples": [
          "updated_unix_time"
        ]
      },
      {
        "regExp": "(?i).*created.*epoch.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "created_epoch"
        ],
        "negativeExamples": [
          "last_updated_epoch"
        ]
      },
      {
        "regExp": "(?i).*(created|creation|crt).*ts.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "creation_ts"
        ],
        "negativeExamples": [
          "created_at"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "created_timestamp"
        ],
        "negativeExamples": [
          "created_date"
        ]
      }
    ],
    "positiveContentExamples": [
      "315360000",
      "631152000",
      "915148800",
      "946684800",
      "1234567890",
      "1609459200",
      "1700000000",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "12345678",
      "12345678901",
      "-1700000000",
      "1700000000.0",
      "1700_000000",
      "1700000000ms",
      "0000000000"
    ],
    "positiveHeaderExamples": [
      "created_epoch",
      "created_unix",
      "created_timestamp",
      "creation_ts",
      "created_epoch_sec",
      "created_unix_time",
      "created_time_utc",
      "created_unix_seconds"
    ],
    "negativeHeaderExamples": [
      "updated_timestamp",
      "created_date",
      "created_at",
      "created_by",
      "last_updated_epoch",
      "birthdate",
      "event_time_ms",
      "created_code"
    ],
    "explanation": "This semantic type detects Unix epoch timestamps in seconds for a 'created' field, focusing on 9\u201310 digit non-negative integers that represent seconds since 1970-01-01 UTC. It is useful for classifying numeric creation times stored as Unix seconds, commonly found in logs, events, and application data.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:51.982909"
  },
  {
    "resultType": "generated",
    "semanticType": "definition",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}[ ,;:()\\-]*[A-Za-z]{2,}[ ,;:()\\-]+[A-Za-z0-9][A-Za-z0-9'()\\-]+\\b[ A-Za-z0-9,.;:'\"()/_+\\-]{10,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9590,
    "headerPatterns": [
      {
        "regExp": "(?i).*definition[_ -]?text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "definition_text"
        ],
        "negativeExamples": [
          "definition_code"
        ]
      },
      {
        "regExp": "(?i).*detailed[_ -]?description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_description"
        ],
        "negativeExamples": [
          "detailed_status"
        ]
      },
      {
        "regExp": "(?i).*(field|item|product|record)[_ -]?description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "field_description"
        ],
        "negativeExamples": [
          "field_name"
        ]
      },
      {
        "regExp": "(?i).*(defn|desc).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc_text"
        ],
        "negativeExamples": [
          "design_code"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent login failures after update.",
      "Use this field for additional context when status changes.",
      "Payment failed due to insufficient funds; retry in 24 hours.",
      "Contains a comma, period, and numbers 123 to illustrate details.",
      "Notes: prefer secure connection (TLS 1.2+) for API calls.",
      "If unavailable, substitute with comparable item per policy.",
      "This short summary explains intent and expected outcomes."
    ],
    "negativeContentExamples": [
      "Pending approval",
      "See notes",
      "N/A",
      "OK",
      "Error 404",
      "Item description",
      "2025-08-10"
    ],
    "positiveHeaderExamples": [
      "definition_text",
      "detailed_description",
      "field_description",
      "product_description",
      "record_notes",
      "user_comments",
      "long_description"
    ],
    "negativeHeaderExamples": [
      "definition_code",
      "comment_id",
      "status",
      "email",
      "name",
      "created_date",
      "comment_count"
    ],
    "explanation": "This semantic type identifies narrative, human-readable text intended to explain, describe, or provide context (e.g., descriptions, notes, comments). The content pattern requires at least three words with natural-language characters and punctuation, helping to avoid matching short labels, codes, dates, or identifiers. Use cases include free-form description fields, user notes, and comment text in operational datasets. Header patterns prioritize explicit description/definition indicators and common abbreviations while the final primitive pattern ensures recognition of the core concept 'description'. High threshold and priority minimize conflicts with more specific structured types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:53.166054"
  },
  {
    "resultType": "generated",
    "semanticType": "genus",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}\\b([ ,;:\\(\\)\\-]+\\b[A-Za-z]{2,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9670,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|user|internal|admin).*(comments?|notes?|remarks?|description|narrative|details|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_comments"
        ],
        "negativeExamples": [
          "country_code"
        ]
      },
      {
        "regExp": "(?i).*(additional[ _]?(info|information)|free[ _]?text|supporting[ _]?details|long[ _]?description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_information"
        ],
        "negativeExamples": [
          "status"
        ]
      },
      {
        "regExp": "(?i).*(comments?|notes?|remarks?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "email"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "quantity"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_description"
        ],
        "negativeExamples": [
          "order_date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review and approve the attached proposal by Friday.",
      "Customer reported a delay in shipping; package expected tomorrow.",
      "System rebooted unexpectedly after update (version 2.1.4).",
      "Payment will be processed once the invoice is verified.",
      "User indicated that the form fails on mobile devices.",
      "Include two spare cables - see packing list for details.",
      "Meeting rescheduled due to weather conditions, new time TBA."
    ],
    "negativeContentExamples": [
      "Short note",
      "OK",
      "N/A",
      "Order #12345",
      "http://example.com",
      "5/12/2024",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "comments",
      "user_comments",
      "internal_notes",
      "detailed_description",
      "free_text",
      "additional_information",
      "remarks",
      "desc"
    ],
    "negativeHeaderExamples": [
      "country_code",
      "first_name",
      "order_date",
      "email",
      "status",
      "invoice_number",
      "quantity"
    ],
    "explanation": "This semantic type identifies free-form narrative fields that contain multi-word prose such as descriptions, comments, notes, and remarks. The value regex favors entries with at least three alphabetic words separated by spaces or punctuation, reducing collisions with short labels, codes, and identifiers. Header patterns progress from specific qualifiers (e.g., user_comments) to general primitives (description), helping detect common column names used for unstructured text fields.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:53.922209"
  },
  {
    "resultType": "generated",
    "semanticType": "order",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'/-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9'/-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9'/-]{1,}\\s+[A-Za-z0-9][A-Za-z0-9'/-]{1,}[A-Za-z0-9\\s'.,;:!/?()_-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9490,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|ord)[ _-]*(description|desc|notes|note|comment|comments|instructions).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(sales|purchase|work)[ _-]*order[ _-]*(description|desc|notes|instructions).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "sales_order_notes"
        ],
        "negativeExamples": [
          "sales_order_id"
        ]
      },
      {
        "regExp": "(?i).*(so|po|wo)[ _-]*(desc|notes|note|cmnt|cmnts|cmts|instr).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "po_desc"
        ],
        "negativeExamples": [
          "so_number"
        ]
      },
      {
        "regExp": "(?i).*(special|delivery)[ _-]*instructions.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "delivery_instructions"
        ],
        "negativeExamples": [
          "delivery_date"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order notes"
        ],
        "negativeExamples": [
          "order_number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver after 5 pm and leave at front desk.",
      "Customer requests gift wrap and a handwritten thank you note.",
      "Fragile items inside; handle with care during transportation.",
      "Ship via ground service; signature required for delivery.",
      "Add extra ice packs to prevent melting in warm weather.",
      "If out of stock, substitute with similar brand and size.",
      "Leave at side entrance; gate code provided in profile.",
      "Billing address differs from shipping; confirm before dispatch."
    ],
    "negativeContentExamples": [
      "No issues noted",
      "Ship ASAP",
      "OK",
      "AB-123-XY-789",
      "Delivery before 5",
      "Handle gently",
      "Main unit leaking",
      "Note: urgent"
    ],
    "positiveHeaderExamples": [
      "order_description",
      "order notes",
      "ord_desc",
      "sales_order_notes",
      "po_desc",
      "work_order_comments",
      "special_instructions",
      "delivery_instructions"
    ],
    "negativeHeaderExamples": [
      "order_id",
      "order_number",
      "order_date",
      "purchase_order_code",
      "sales_order_total",
      "po_number",
      "shipping_address",
      "tracking_number"
    ],
    "explanation": "This semantic type targets free-form, multi-word narrative text commonly used for order-related descriptions, notes, comments, or instructions. The value regex emphasizes natural language by requiring four or more space-separated tokens of at least two characters, allowing typical punctuation and symbols used in narratives. Header patterns progress from highly specific order description/notes variants to abbreviation forms and finally to the primitive term 'notes' to capture common naming conventions while the high threshold and priority reduce conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:56.154696"
  },
  {
    "resultType": "generated",
    "semanticType": "end",
    "description": "A numeric timestamp representing seconds elapsed since January 1, 1970 UTC, widely used in Unix systems and programming languages.",
    "pluginType": "regex",
    "regexPattern": "\\b(0|[1-9][0-9]{8,9})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9690,
    "headerPatterns": [
      {
        "regExp": "(?i).*(end|stop).*(epoch|unix).*(sec|second|seconds|s).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "end_epoch_seconds"
        ],
        "negativeExamples": [
          "end_epoch_ms"
        ]
      },
      {
        "regExp": "(?i).*(end|stop).*(epoch|unix).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "end_unix"
        ],
        "negativeExamples": [
          "start_unix"
        ]
      },
      {
        "regExp": "(?i).*(end|stop).*(ts|timestamp).*(sec|s).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "end_ts_sec"
        ],
        "negativeExamples": [
          "end_ts_ms"
        ]
      },
      {
        "regExp": "(?i).*(end|stop).*(time|ts|timestamp).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "end_timestamp"
        ],
        "negativeExamples": [
          "start_timestamp"
        ]
      },
      {
        "regExp": "(?i).*(timestamp).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "timestamp"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "315532800",
      "631152000",
      "946684800",
      "1609459200",
      "1700000000",
      "2147483647",
      "2147483648"
    ],
    "negativeContentExamples": [
      "1700000000000",
      "1609459200.0",
      "-1609459200",
      "160945920",
      "0000000000",
      "99999999999",
      "1_609_459_200",
      "160945920O"
    ],
    "positiveHeaderExamples": [
      "end_epoch_seconds",
      "end_unix_ts",
      "end_timestamp_sec",
      "end_time_seconds",
      "epoch_end",
      "end_ts",
      "end_timestamp",
      "end_unix"
    ],
    "negativeHeaderExamples": [
      "start_epoch_seconds",
      "end_epoch_ms",
      "end_date",
      "timestamp_start",
      "created_ts",
      "end_time_ms",
      "stop_timecode",
      "record_number"
    ],
    "explanation": "This semantic type identifies Unix epoch timestamps expressed as integer seconds since 1970-01-01T00:00:00Z. The pattern accepts a single 0 or a 9\u201310 digit positive integer without leading zeros to capture realistic epoch-second values while excluding milliseconds, decimals, and ambiguous small integers.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:57.094140"
  },
  {
    "resultType": "generated",
    "semanticType": "series",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'\u2019\\-]{2,}\\b([\\s,;:.!?\\-()]+[A-Za-z][A-Za-z'\u2019\\-]{2,}\\b){1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9770,
    "headerPatterns": [
      {
        "regExp": "(?i).*(description|comment|notes?)[_\\s-]*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description_text"
        ],
        "negativeExamples": [
          "error_text"
        ]
      },
      {
        "regExp": "(?i).*(description|comments?|notes?|details?|remarks?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "shipping_address"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmts|narrative|remark|detail).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "account_id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent connectivity issues after update.",
      "Please review and approve by end of week.",
      "Shipment delayed due to weather conditions.",
      "Account created successfully; awaiting email verification.",
      "Call back requested\u2014left voicemail with support line.",
      "This item includes all accessories and original packaging.",
      "User cannot login with SSO; error appears on redirect.",
      "Meeting rescheduled to next Tuesday afternoon."
    ],
    "negativeContentExamples": [
      "TBD",
      "N/A",
      "OK",
      "12345",
      "2025-07-01",
      "A12-B7",
      "ID: 78910",
      "to be"
    ],
    "positiveHeaderExamples": [
      "description_text",
      "comment_text",
      "free_text",
      "long_description",
      "user_comments",
      "notes",
      "additional_details",
      "remark"
    ],
    "negativeHeaderExamples": [
      "status",
      "id",
      "product_code",
      "quantity",
      "postal_code",
      "customer_name",
      "timestamp",
      "country"
    ],
    "explanation": "This semantic type identifies free-form narrative text commonly used for descriptions, comments, notes, details, and remarks. The value regex favors multi-word sequences of alphabetic tokens to reduce false positives from codes, IDs, or single-token fields, while header patterns prioritize descriptive column names and include a final primitive 'text' pattern. Use this type to capture narrative fields where the content is not constrained to a small, finite set or strict code format.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:34:58.716907"
  },
  {
    "resultType": "generated",
    "semanticType": "currency",
    "description": "The full English name of a national or international currency used in financial transactions and monetary systems.",
    "pluginType": "regex",
    "regexPattern": "\\b(Euro|Yen|Yuan|Pound Sterling)\\b|\\b([A-Z][a-z]+( [A-Z][a-z]+){0,3}) (Dollar|Franc|Rupee|Riyal|Dirham|Dinar|Ruble|Rouble|Rand|Peso|Real|Lira|Krona|Krone|Koruna|Forint|Zloty|Naira|Ringgit|Shilling|Shekel|Lei|Lev|Manat|Rial|Kyat|Kip|Dong|Tala|Kina|Ouguiya|Dalasi|Ariary|Kwanza|Somoni|Som|Tenge|Tugrik|Dram|Birr|Gourde|Quetzal|Colon|Balboa|Cedi|Leu|Kuna|Boliviano|Bolivar|Guarani|Pataca|Pula|Ngultrum|Vatu|Paanga|Rufiyaa)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9780,
    "headerPatterns": [
      {
        "regExp": "(?i).*(official.*currency.*name|currency.*full.*name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "official_currency_name"
        ],
        "negativeExamples": [
          "currency_code"
        ]
      },
      {
        "regExp": "(?i).*legal.*tender.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "legal_tender_name"
        ],
        "negativeExamples": [
          "legal_tender_code"
        ]
      },
      {
        "regExp": "(?i).*monetary.*unit.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "monetary_unit_name"
        ],
        "negativeExamples": [
          "monetary_unit_code"
        ]
      },
      {
        "regExp": "(?i).*currency.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "currency_name"
        ],
        "negativeExamples": [
          "currency_symbol"
        ]
      },
      {
        "regExp": "(?i).*(curr.*name|currname).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "curr_name"
        ],
        "negativeExamples": [
          "curr_code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "United States Dollar",
      "Euro",
      "Japanese Yen",
      "Pound Sterling",
      "Indian Rupee",
      "Swiss Franc",
      "United Arab Emirates Dirham",
      "South African Rand"
    ],
    "negativeContentExamples": [
      "USD",
      "US Dollar",
      "Dollar",
      "Japanese Yens",
      "EUR",
      "United States $ Dollar",
      "Swiss Francs",
      "Canadian CAD Dollar"
    ],
    "positiveHeaderExamples": [
      "currency_name",
      "official_currency_name",
      "monetary_unit_name",
      "currency full name",
      "currency long name",
      "legal_tender_name",
      "native_currency_name",
      "primary_currency_name"
    ],
    "negativeHeaderExamples": [
      "currency_code",
      "currency",
      "currency_symbol",
      "amount_currency",
      "transaction_currency",
      "price_currency",
      "exchange_rate",
      "fx_rate"
    ],
    "explanation": "Detects full English currency names by matching one to four capitalized qualifier words followed by a recognized currency unit (e.g., Dollar, Franc, Rupee), with standalone support for unique forms like Euro, Yen, Yuan, and Pound Sterling. This is intended for textual names, not ISO codes or symbols, and helps distinguish descriptive currency fields from coded representations.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:00.149792"
  },
  {
    "resultType": "generated",
    "semanticType": "creator",
    "description": "A complete personal name combining first and last names in the conventional Western format with a space separator.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]{1,29}(-[A-Z]?[a-z]{1,29})* [A-Z][a-z]{1,29}(-[A-Z]?[a-z]{1,29})*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9760,
    "headerPatterns": [
      {
        "regExp": "(?i).*creator.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "creator_full_name"
        ],
        "negativeExamples": [
          "creator_full_id"
        ]
      },
      {
        "regExp": "(?i).*created.*by.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "created_by_name"
        ],
        "negativeExamples": [
          "created_by_email"
        ]
      },
      {
        "regExp": "(?i).*creator.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "creator_name"
        ],
        "negativeExamples": [
          "creator_id"
        ]
      },
      {
        "regExp": "(?i).*(crtd.*by|crtr).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "crtd_by_name"
        ],
        "negativeExamples": [
          "crtd_by_id"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "title"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Anne-Marie Johnson",
      "Jean-Luc Picard",
      "Peter Brown",
      "Alice Carter",
      "Sarah-Jane Miller",
      "David Lee",
      "Emily-Rose Turner"
    ],
    "negativeContentExamples": [
      "JOHN SMITH",
      "John A Smith",
      "J Smith",
      "Smith, John",
      "John  Smith",
      "Mary",
      "John S",
      "Anne-Marie"
    ],
    "positiveHeaderExamples": [
      "creator_name",
      "creator_full_name",
      "created_by_name",
      "record_creator_name",
      "doc_creator_name",
      "crtd_by_name",
      "createdby_name"
    ],
    "negativeHeaderExamples": [
      "creator_id",
      "created_by_id",
      "file_name",
      "creation_date",
      "created_by_email",
      "owner_name",
      "author_name",
      "created_by"
    ],
    "explanation": "This semantic type targets fields that store a person\u2019s full name as exactly two tokens in Western order: given name followed by family name, separated by a single space. It permits hyphenated components within either token and enforces leading uppercase followed by lowercase letters to reduce false positives. Typical use cases include datasets that capture the name of the record\u2019s creator or submitter as a human-readable full name.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:01.542223"
  },
  {
    "resultType": "generated",
    "semanticType": "tag",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems. This type identifies free-form, multi-word phrases or sentences rather than compact identifiers or codes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9,'()\\-]*\\s+[A-Za-z][A-Za-z0-9,'()\\-]*(\\s+[A-Za-z0-9,'()\\-]+){0,20}[.!?]?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9830,
    "headerPatterns": [
      {
        "regExp": "(?i).*(issue|error|ticket|bug|case).*(description|details|summary).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "issue_id"
        ]
      },
      {
        "regExp": "(?i).*(user|internal|admin|customer).*(comment|comments|note|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(free[-_ ]?text|narrative|annotation|remark|memo).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*(description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "Needs review before EOD",
      "Customer reports intermittent failure.",
      "Please contact supplier for replacement",
      "Follow-up scheduled for 10/15; awaiting approval",
      "This item is obsolete, do not reorder",
      "Working as designed; no change required",
      "User could not reproduce the issue",
      "See notes below for context"
    ],
    "negativeContentExamples": [
      "Pending",
      "AB-123",
      "support@example.com",
      "http://example.com",
      "N/A",
      "Needs_review",
      "OK/NOK",
      "12345"
    ],
    "positiveHeaderExamples": [
      "issue_description",
      "customer_comments",
      "internal_notes",
      "free_text",
      "narrative",
      "remark",
      "details",
      "bug_summary"
    ],
    "negativeHeaderExamples": [
      "issue_id",
      "customer_id",
      "order_id",
      "status",
      "free_shipping",
      "name",
      "priority_level",
      "code"
    ],
    "explanation": "This semantic type captures free-form narrative text commonly found in description, comment, and notes fields. The value pattern favors multi-word strings with spaces and optional punctuation, helping to avoid single-word labels, codes, URLs, and emails. Header patterns progress from domain-specific phrases (e.g., issue_description) to general terms (text). As a broad, generic type, it uses a high confidence threshold and low precedence to minimize conflicts with more specific semantic types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:03.572406"
  },
  {
    "resultType": "generated",
    "semanticType": "abstract",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}\\b[ \\t]+\\b[A-Za-z]{3,}\\b[ \\t]+\\b[A-Za-z]{2,}\\b[^\r\n]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9840,
    "headerPatterns": [
      {
        "regExp": "(?i).*(project|case|record|study).*(abstract|description|notes|comment).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_abstract"
        ],
        "negativeExamples": [
          "project_title"
        ]
      },
      {
        "regExp": "(?i).*(abstract|long description|long_description|detailed notes|detailed_notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "project_details"
        ]
      },
      {
        "regExp": "(?i).*(summary|overview|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "narrative_summary"
        ],
        "negativeExamples": [
          "case_status"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|remarks|rmk|cmnt|note).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_remarks"
        ],
        "negativeExamples": [
          "user_reason"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "record_text"
        ],
        "negativeExamples": [
          "record_title"
        ]
      }
    ],
    "positiveContentExamples": [
      "Provides a detailed overview of the project's scope and objectives.",
      "Customer reported intermittent failures during nightly processing runs.",
      "Notes indicate follow-up actions are required by the end of the quarter.",
      "This abstract summarizes the methodology and key findings of the study.",
      "Internal comment: deployment postponed pending security review.",
      "Description of changes introduced in release 3.2 and their impact.",
      "The incident was mitigated by restarting services and clearing caches.",
      "Brief narrative explaining data anomalies observed in June."
    ],
    "negativeContentExamples": [
      "Account Number 12345",
      "Main Street",
      "Approved",
      "2024-07-21 meeting",
      "Q1 FY24 summary",
      "12345 account number",
      "OK done",
      "Error: 404"
    ],
    "positiveHeaderExamples": [
      "project_abstract",
      "case_description",
      "issue_notes",
      "narrative_summary",
      "long_description",
      "user_remarks",
      "record_text",
      "study_comment"
    ],
    "negativeHeaderExamples": [
      "project_title",
      "case_status",
      "issue_reason",
      "short_label",
      "record_overall_score",
      "project_milestone",
      "issue_category",
      "content_type"
    ],
    "explanation": "This semantic type detects unstructured narrative fields intended for human-readable descriptions, comments, notes, or abstracts. The value regex favors multi-word alphabetic sequences to avoid short codes or identifiers, while header patterns prioritize strong semantic cues such as abstract, description, notes, summary, and text. Use this to identify free-text narrative columns where detailed explanations or commentary are stored rather than structured codes or numeric measures.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:05.428613"
  },
  {
    "resultType": "generated",
    "semanticType": "score",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'\u2019\\-]{1,}\\b[ \\t]+[A-Za-z][A-Za-z0-9'\u2019\\-]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9790,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client|user).*(comment|comments|note|notes|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comment"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(issue|ticket|case).*(description|details|narrative|remark|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "issue_code"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes|remarks|review|feedback).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "internal_remarks"
        ],
        "negativeExamples": [
          "order_number"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|cmts|rmk|txt).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "contact_number"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "data_value"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent errors after update.",
      "Great service, will return again.",
      "Left voicemail explaining the issue and next steps.",
      "Payment declined due to incorrect billing address.",
      "User requested password reset and MFA assistance.",
      "Package arrived damaged; initiated replacement process.",
      "Follow-up scheduled for next Tuesday afternoon.",
      "System performance degraded during peak hours."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "123456",
      "A-1029",
      "2024-06-01",
      "john.doe@example.com",
      "http://example.com/page",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "customer_comment",
      "issue_description",
      "user_notes",
      "feedback_text",
      "review_comments",
      "internal_remarks",
      "support_narrative",
      "free_text"
    ],
    "negativeHeaderExamples": [
      "customer_id",
      "issue_code",
      "user_name",
      "feedback_score",
      "review_date",
      "status",
      "contact_number",
      "country_code"
    ],
    "explanation": "This semantic type identifies free-form narrative fields typically used for descriptions, comments, notes, feedback, or reviews. It detects values that contain at least two alphabetic word tokens and is paired with header patterns commonly used for narrative text columns. Because free-text is broad and potentially ambiguous, the threshold is set high and the priority is low to minimize conflicts with more specific semantic types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:06.908852"
  },
  {
    "resultType": "generated",
    "semanticType": "reference",
    "description": "A unique identifier used to distinguish one entity from another within a system or dataset. Typically alphanumeric and may include separators such as hyphens, slashes, or underscores to convey structure or origin.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Za-z]+[0-9][A-Za-z0-9]*([-/_][A-Za-z0-9]{2,}){0,2}|[0-9]+[A-Za-z][A-Za-z0-9]*([-/_][A-Za-z0-9]{2,}){0,2}|[A-Za-z]{2,}[-/_][0-9]{2,}([-/_][A-Za-z0-9]{2,}){0,2}|[0-9]{2,}[-/_][A-Za-z]{2,}([-/_][A-Za-z0-9]{2,}){0,2}|[A-Za-z]{2,}[-/_][A-Za-z]+[0-9][A-Za-z0-9]*([-/_][A-Za-z0-9]{2,}){0,2})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9650,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|invoice|transaction|customer).*reference.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "order_reference"
        ],
        "negativeExamples": [
          "order_number"
        ]
      },
      {
        "regExp": "(?i).*(order|invoice|transaction|customer).*(ref|refno|ref_no|refnum|ref_num).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "transaction_ref_no"
        ],
        "negativeExamples": [
          "transaction_code"
        ]
      },
      {
        "regExp": "(?i).*(external|source|system).*reference.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "external_reference"
        ],
        "negativeExamples": [
          "system_name"
        ]
      },
      {
        "regExp": "(?i).*(ref|refid|ref_id|refno|ref_no|refnum|ref_num).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "booking_ref"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*reference.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "reference"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "REF-2024-000123",
      "INV/2023/7890",
      "ORD_001-AB9",
      "CUSTREF77A9",
      "PRJ-XY12-88",
      "TKT2025-09",
      "A1B2C3",
      "USER45-REF"
    ],
    "negativeContentExamples": [
      "REF-ABCD",
      "123456",
      "ABCDE",
      "12-34",
      "A_B",
      "INV//2023",
      "REF-",
      "ORD__123"
    ],
    "positiveHeaderExamples": [
      "order_reference",
      "invoice_reference_number",
      "customer_ref",
      "transaction_ref_no",
      "external_reference",
      "source_refid",
      "system_reference_id",
      "reference"
    ],
    "negativeHeaderExamples": [
      "order_number",
      "invoice_date",
      "customer_id",
      "transaction_code",
      "external_id",
      "source_url",
      "system_name",
      "booking_status"
    ],
    "explanation": "This semantic type captures general-purpose reference identifiers that contain both letters and digits, optionally structured with hyphens, slashes, or underscores. It is intended for fields such as order references, invoice references, external/system references, and similar identifiers where the content is not restricted to a specific standard. Because this type is broad, it uses a high confidence threshold and lower precedence to avoid conflicts with more specific identifier types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:07.067328"
  },
  {
    "resultType": "generated",
    "semanticType": "season",
    "description": "A three-month period designation used in business and financial contexts to represent fiscal or calendar quarters within a year.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(Q[1-4]([\\s\\-]?(20\\d\\d|19\\d\\d|\\d\\d))|((20\\d\\d|19\\d\\d|\\d\\d)[\\s\\-]?Q[1-4])|(FY[\\s\\-]?(20\\d\\d|\\d\\d)[\\s\\-]?Q[1-4])|(Q[1-4][\\s\\-]?FY[\\s\\-]?(20\\d\\d|\\d\\d))|(Quarter[\\s\\-]?[1-4])|(Qtr[\\s\\-]?[1-4])|([1-4]Q([\\s\\-]?(20\\d\\d|19\\d\\d|\\d\\d))?))\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9700,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(fy|fiscal)\\b.*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "fiscal_quarter"
        ],
        "negativeExamples": [
          "fiscal_year"
        ]
      },
      {
        "regExp": "(?i).*\\b(reporting|accounting)\\b.*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "reporting_quarter"
        ],
        "negativeExamples": [
          "reporting_year"
        ]
      },
      {
        "regExp": "(?i).*\\bqtr\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "sales_qtr"
        ],
        "negativeExamples": [
          "qty_required"
        ]
      },
      {
        "regExp": "(?i).*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "quarter"
        ],
        "negativeExamples": [
          "quartile"
        ]
      },
      {
        "regExp": "(?i).*\\bseason\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "season"
        ],
        "negativeExamples": [
          "session"
        ]
      }
    ],
    "positiveContentExamples": [
      "Q1",
      "Q4 2024",
      "2023 Q3",
      "FY22 Q2",
      "Q1 FY2025",
      "Quarter 2",
      "Qtr-3",
      "4Q 2020"
    ],
    "negativeContentExamples": [
      "Q5",
      "Quarter 0",
      "FY202 Q1",
      "H1 2023",
      "Q1M2",
      "2023Q5",
      "Q 1",
      "1QTR"
    ],
    "positiveHeaderExamples": [
      "fiscal_quarter",
      "reporting_quarter",
      "accounting_quarter",
      "qtr",
      "fy_qtr",
      "quarter_label",
      "season",
      "quarter"
    ],
    "negativeHeaderExamples": [
      "fiscal_year",
      "reporting_year",
      "quartile",
      "qty_required",
      "seasonality_index",
      "session",
      "half_year",
      "month"
    ],
    "explanation": "This semantic type identifies quarter designations used in reporting and analytics, including common business formats like Qn, Qn YYYY, YYYY Qn, FYYY Qn, and textual forms like Quarter n or Qtr n. It is useful for classifying fields that capture fiscal or calendar quarters, enabling temporal aggregation and time-series analysis at the quarter level.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:07.144608"
  },
  {
    "resultType": "generated",
    "semanticType": "depth",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'():\\/\\-]* [A-Za-z0-9][A-Za-z0-9'():\\/\\-]* [A-Za-z0-9][A-Za-z0-9 ,.;:()'\\/\\-]{5,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9810,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|issue|ticket|case).*(description|comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|account|record).*(description|comment|notes|remarks|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_name"
        ]
      },
      {
        "regExp": "(?i).*(free|long).*(text|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_text"
        ],
        "negativeExamples": [
          "long_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmts|cmnt|remark|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "short_desc"
        ],
        "negativeExamples": [
          "discount_code"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes|text|summary|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reports intermittent failures during nightly sync.",
      "Please escalate to network team if issue persists.",
      "Package arrived damaged with torn outer box.",
      "User noted slow performance after patch installation.",
      "Add detailed description of steps to reproduce.",
      "This field captures long narrative comments from users.",
      "No error displayed, application closes without warning.",
      "Includes notes about approvals, exceptions, and rationale."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "Pending",
      "See notes",
      "Error: 404",
      "Resolved",
      "12345",
      "Invoice 12345"
    ],
    "positiveHeaderExamples": [
      "product_description",
      "customer_comments",
      "issue_notes",
      "order_remarks",
      "narrative_text",
      "long_text",
      "free_text",
      "details_summary"
    ],
    "negativeHeaderExamples": [
      "product_code",
      "customer_name",
      "issue_date",
      "order_number",
      "narrative_id",
      "discount_code",
      "status",
      "long_id"
    ],
    "explanation": "This semantic type identifies free-form narrative text commonly used for descriptions, comments, notes, and similar fields. Detection favors content with at least three words and natural-language punctuation to avoid matching short labels, codes, or identifiers. It is intentionally broad, so confidence and priority are tuned to minimize conflicts with more specific semantic types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:08.239653"
  },
  {
    "resultType": "generated",
    "semanticType": "publisher",
    "description": "The official legal name of a business entity or organization as registered with government authorities and used in formal documentation. This typically includes a corporate legal suffix (e.g., Inc., LLC, Ltd, GmbH) indicating the entity\u2019s legal form.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[A-Za-z0-9][A-Za-z0-9&'./,\\- ]{1,100}[\\s,]+(LLC|L\\.L\\.C\\.|L\\.L\\.C|INC|INC\\.|INCORPORATED|LTD|LTD\\.|LIMITED|PLC|CORP|CORP\\.|CORPORATION|COMPANY|CO\\.|LLP|L\\.L\\.P\\.|LP|L\\.P\\.|GMBH|AG|BV|NV|SAS|S\\.A\\.S\\.|SA|S\\.A\\.|SRL|S\\.R\\.L\\.|KG|KK|K\\.K\\.|AB|AS|OY|APS|PTY|PTY LTD|SRO|S\\.R\\.O\\.|OOO|SPA|S\\.P\\.A\\.)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9750,
    "headerPatterns": [
      {
        "regExp": "(?i).*publisher.*legal.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "publisher_legal_name"
        ],
        "negativeExamples": [
          "legal_publisher_address"
        ]
      },
      {
        "regExp": "(?i).*registered.*publisher.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "registered_publisher_name"
        ],
        "negativeExamples": [
          "publisher_registered_id"
        ]
      },
      {
        "regExp": "(?i).*official.*publisher.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "official_publisher_name"
        ],
        "negativeExamples": [
          "publisher_official_code"
        ]
      },
      {
        "regExp": "(?i).*publisher.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "publisher_name"
        ],
        "negativeExamples": [
          "publication_name"
        ]
      },
      {
        "regExp": "(?i).*pub[_ ]name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "pub_name"
        ],
        "negativeExamples": [
          "public_name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "title"
        ]
      }
    ],
    "positiveContentExamples": [
      "Acme Publishing, Inc.",
      "Blue River Media LLC",
      "Global Books Ltd",
      "The Orion Group Limited",
      "Harper & Co. Ltd",
      "Sunrise Works GmbH",
      "Nordic Media AB",
      "Southern Cross Media Pty Ltd"
    ],
    "negativeContentExamples": [
      "Acme Publishing",
      "Global Books LDT",
      "Penguin Random House, Incc",
      "Sunrise Works Gmb",
      "Maple Leaf Press Co",
      "Nordic Media A.B",
      "Atlantic Press S A",
      "Tokyo Shuppan K K"
    ],
    "positiveHeaderExamples": [
      "publisher_legal_name",
      "registered_publisher_name",
      "official_publisher_name",
      "publisher_name",
      "pub_name",
      "publisher_company_name",
      "publisher_registered_name",
      "legal_publisher_name"
    ],
    "negativeHeaderExamples": [
      "publication_name",
      "publisher_id",
      "publisher_code",
      "publisher_address",
      "author_name",
      "imprint_name",
      "legal_status",
      "company_name"
    ],
    "explanation": "This semantic type identifies organization legal names that end with a formal legal entity suffix, such as Inc., LLC, Ltd, GmbH, or similar jurisdiction-specific forms. It is intended for columns storing the official registered name of the publisher or publishing organization in legal and contractual contexts.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:09.161370"
  },
  {
    "resultType": "generated",
    "semanticType": "species",
    "description": "Scientific species names in binomial or abbreviated binomial form. Matches a capitalized Genus followed by a lowercase species epithet (e.g., Homo sapiens) or a single-letter genus abbreviation with a dot followed by the lowercase epithet (e.g., H. sapiens). Designed to detect standardized biological nomenclature in datasets, including common Latinized forms.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]{2,}\\s+[a-z][a-z-]{2,}\\b|\\b[A-Z]\\.?\\s*[a-z][a-z-]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9640,
    "headerPatterns": [
      {
        "regExp": "(?i).*(scientific_name|species_name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "scientific_name"
        ],
        "negativeExamples": [
          "species_code"
        ]
      },
      {
        "regExp": "(?i).*(species|taxon|taxonomy).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "species"
        ],
        "negativeExamples": [
          "genus"
        ]
      },
      {
        "regExp": "(?i).*(species_nm|sp_name|spp).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "sp_name"
        ],
        "negativeExamples": [
          "species_count"
        ]
      },
      {
        "regExp": "(?i).*(binomial|trinomial).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "binomial"
        ],
        "negativeExamples": [
          "notes"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "description"
        ]
      }
    ],
    "positiveContentExamples": [
      "Homo sapiens",
      "Escherichia coli",
      "Canis lupus",
      "Quercus robur",
      "Panthera tigris",
      "Apis mellifera",
      "H. sapiens",
      "C. lupus"
    ],
    "negativeContentExamples": [
      "Homo Sapiens",
      "H sapiens",
      "Homo sp.",
      "H. sp.",
      "Homo_sapiens",
      "Homo-sapiens",
      "Quercus r",
      "H. Sapiens"
    ],
    "positiveHeaderExamples": [
      "species_name",
      "scientific_name",
      "species",
      "species_nm",
      "sp_name",
      "taxon",
      "taxonomy"
    ],
    "negativeHeaderExamples": [
      "description",
      "notes",
      "genus",
      "family",
      "observation_id",
      "count",
      "tax_id"
    ],
    "explanation": "This semantic type targets biological species names using standard taxonomic conventions: a capitalized Genus followed by a lowercase species epithet, or an abbreviated Genus letter with a dot and the lowercase epithet. It excludes placeholder abbreviations like sp. and formatting with underscores or hyphens between tokens. Use this to identify columns containing scientific species names in biodiversity, ecology, or taxonomy datasets; rely on header patterns to prefer columns explicitly labeled as species or scientific names.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:12.124025"
  },
  {
    "resultType": "generated",
    "semanticType": "period",
    "description": "A three-month period designation used in business and financial contexts to represent fiscal or calendar quarters within a year. Typical values express a quarter (Q1\u2013Q4 or \"Quarter 1\"\u2013\"Quarter 4\") optionally paired with a fiscal or calendar year using common separators.",
    "pluginType": "regex",
    "regexPattern": "\\b(Quarter[ ]?[1-4][ ]\\d{2,4}|Quarter[ ]?[1-4]|FY[ ]?\\d{2,4}[ -/ ]Q[1-4]|Q[1-4][ -/ ]FY[ ]?\\d{2,4}|\\d{2,4}[ -/]Q[1-4]|Q[1-4][ -/ ]\\d{2,4}|Q[1-4]FY\\d{2,4}|Q[1-4])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9820,
    "headerPatterns": [
      {
        "regExp": "(?i).*(fiscal|reporting).*quarter.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "fiscal_quarter"
        ],
        "negativeExamples": [
          "fiscal_year"
        ]
      },
      {
        "regExp": "(?i).*quarter.*period.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "quarter_period"
        ],
        "negativeExamples": [
          "billing_cycle"
        ]
      },
      {
        "regExp": "(?i).*(fy|fiscal).*qtr.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "fy_qtr"
        ],
        "negativeExamples": [
          "fy_year"
        ]
      },
      {
        "regExp": "(?i).*(quarter|qtr).*of.*year.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "quarter_of_year"
        ],
        "negativeExamples": [
          "period_of_year"
        ]
      },
      {
        "regExp": "(?i).*period.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "period"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Q1 2023",
      "2023 Q1",
      "Q4-2020",
      "FY2021 Q3",
      "Q2FY20",
      "Quarter 1 2024",
      "FY 23 Q4",
      "21 Q2"
    ],
    "negativeContentExamples": [
      "Q5 2023",
      "2023Q1",
      "Quarter 0 2022",
      "FY202A Q3",
      "Q3 '20",
      "Q2-20A",
      "Q-1 2023",
      "2023 Q 1"
    ],
    "positiveHeaderExamples": [
      "fiscal_quarter",
      "reporting_qtr",
      "quarter_period",
      "fy_qtr",
      "quarter_of_year",
      "qtr",
      "fiscal_qtr"
    ],
    "negativeHeaderExamples": [
      "fiscal_year",
      "billing_cycle",
      "report_end_date",
      "quarter_flag",
      "reporting_year",
      "month",
      "semester"
    ],
    "explanation": "Identifies quarter-based period labels commonly used in reporting, such as Q1, Q2, Q3, or Q4, optionally combined with a fiscal or calendar year using spaces, hyphens, or slashes. Useful for classifying columns that specify the reporting quarter for metrics or transactions across fiscal or calendar years.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:12.152917"
  },
  {
    "resultType": "generated",
    "semanticType": "event",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9]{2,}[.,;:!?']?[ \\t]+[A-Za-z][A-Za-z0-9]{2,}[.,;:!?']?([ \\t]+[A-Za-z0-9#@&/()'\":;.,+-]{2,}){1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9880,
    "headerPatterns": [
      {
        "regExp": "(?i).*event.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_description"
        ],
        "negativeExamples": [
          "description"
        ]
      },
      {
        "regExp": "(?i).*event.*details.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_details"
        ],
        "negativeExamples": [
          "event_id"
        ]
      },
      {
        "regExp": "(?i).*event.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_notes"
        ],
        "negativeExamples": [
          "notes"
        ]
      },
      {
        "regExp": "(?i).*(incident|occurrence).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "incident_description"
        ],
        "negativeExamples": [
          "incident_id"
        ]
      },
      {
        "regExp": "(?i).*event.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_summary"
        ],
        "negativeExamples": [
          "activity_description"
        ]
      }
    ],
    "positiveContentExamples": [
      "System restarted after scheduled maintenance",
      "User reported intermittent connectivity issues during login",
      "Gate change announced due to aircraft swap",
      "Payment failed; customer will retry later today",
      "Meeting rescheduled to next Wednesday at 3 pm",
      "Order shipped via ground; tracking pending",
      "Power outage affected floor 3 for 15 minutes",
      "Service degraded; engineers investigating root cause"
    ],
    "negativeContentExamples": [
      "OK",
      "Follow-up tomorrow",
      "N/A",
      "EVT-12345",
      "2024-07-21",
      "Resolved",
      "12345 error",
      "Note: done"
    ],
    "positiveHeaderExamples": [
      "event_description",
      "event_details",
      "event_notes",
      "incident_description",
      "occurrence_description",
      "event_comment",
      "event_summary",
      "event_comments"
    ],
    "negativeHeaderExamples": [
      "event_date",
      "event_id",
      "event_code",
      "description",
      "notes",
      "details",
      "incident_id",
      "summary"
    ],
    "explanation": "This semantic type identifies narrative, free-text fields that capture descriptions, notes, comments, or similar event-related narratives. It targets multi-token strings typical of human-written notes rather than structured codes or single-word labels. Detection relies on header cues containing event-related terms and a content pattern requiring multiple words, allowing common punctuation while excluding short codes, IDs, and one-word values.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:12.930531"
  },
  {
    "resultType": "generated",
    "semanticType": "company",
    "description": "The official legal name of a business entity or organization as registered with government authorities and used in formal documentation.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[A-Z0-9][A-Za-z0-9&.,'()/\\- ]{1,80}\\b(,\\s|\\s)\\b(co\\.|corporation|corp\\.|corp|incorporated|inc\\.|inc|limited|ltd\\.|ltd|llc|llp|plc|gmbh|ag|s\\.a\\.|bv|nv)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9740,
    "headerPatterns": [
      {
        "regExp": "(?i).*(legal|registered).*company.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "legal_company_name"
        ],
        "negativeExamples": [
          "company_id"
        ]
      },
      {
        "regExp": "(?i).*(registered|legal).*(business|organization|organisation).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "registered_business_name"
        ],
        "negativeExamples": [
          "business_id"
        ]
      },
      {
        "regExp": "(?i).*(corporate|entity|firm).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "corporate_entity_name"
        ],
        "negativeExamples": [
          "contact_name"
        ]
      },
      {
        "regExp": "(?i).*(comp|biz|org).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "org_name"
        ],
        "negativeExamples": [
          "product_name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "company_name"
        ],
        "negativeExamples": [
          "filing_date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Acme Corporation",
      "Globex Inc.",
      "Example LLC",
      "Northern Lights Ltd",
      "Contoso, Inc",
      "Apex-Gamma GmbH",
      "Sunrise Ventures BV",
      "Redwood Partners AG"
    ],
    "negativeContentExamples": [
      "Acme Co",
      "Globex Incorp",
      "Example L.L.C.",
      "Northern Lights Limited Liability Company",
      "Contoso - Inc",
      "Sunrise Ventures B.V.",
      "Redwood Partners AG2",
      "The Widget Company"
    ],
    "positiveHeaderExamples": [
      "legal_company_name",
      "registered_business_name",
      "organization_legal_name",
      "company_name",
      "firm_registered_name",
      "corporate_entity_name",
      "business_legal_name"
    ],
    "negativeHeaderExamples": [
      "contact_name",
      "product_name",
      "company_id",
      "organization_code",
      "account_name",
      "filing_date",
      "email_address"
    ],
    "explanation": "This semantic type detects official company/legal entity names by requiring a recognizable legal designator (e.g., Inc, Ltd, LLC, GmbH) and allowing typical punctuation and spacing found in registered names. It is intended for columns that contain full legal business names rather than person names, product names, or arbitrary text, and uses conservative suffix matching to reduce false positives.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:13.871784"
  },
  {
    "resultType": "generated",
    "semanticType": "department",
    "description": "The full name of one of the fifty states or the federal district of the United States, representing the complete official designation of US administrative divisions.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming|District of Columbia)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9660,
    "headerPatterns": [
      {
        "regExp": "(?i).*(us|united).*state.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "us_state_full_name"
        ],
        "negativeExamples": [
          "us_state_code"
        ]
      },
      {
        "regExp": "(?i).*state.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "state_full_name"
        ],
        "negativeExamples": [
          "state_code"
        ]
      },
      {
        "regExp": "(?i).*(us|united).*state.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "us_state_name"
        ],
        "negativeExamples": [
          "state_abbrev"
        ]
      },
      {
        "regExp": "(?i).*(us|united).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "us_state"
        ],
        "negativeExamples": [
          "country_state"
        ]
      },
      {
        "regExp": "(?i).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "state"
        ],
        "negativeExamples": [
          "province"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New Hampshire",
      "District of Columbia",
      "North Dakota",
      "Rhode Island",
      "Texas",
      "Hawaii",
      "Washington"
    ],
    "negativeContentExamples": [
      "Californian",
      "NewYork",
      "N. Dakota",
      "Rhode-Island",
      "Tex",
      "Hawai'i",
      "Washingt0n",
      "Puerto Rico"
    ],
    "positiveHeaderExamples": [
      "us_state_full_name",
      "state_full_name",
      "state_name",
      "us_state_name",
      "us_state",
      "full_state_name",
      "united_states_state",
      "state_of_residence"
    ],
    "negativeHeaderExamples": [
      "state_code",
      "state_abbrev",
      "province",
      "country",
      "region",
      "county",
      "timezone",
      "iso_state_code"
    ],
    "explanation": "This semantic type identifies full US state names and the federal district by matching against the exact set of official names, case-insensitively. It is intended for fields where records contain the complete state name string rather than abbreviations or codes.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:13.906410"
  },
  {
    "resultType": "generated",
    "semanticType": "format",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\"/&(),.-]*([ ]+[A-Za-z0-9][A-Za-z0-9'\"/&(),.-]*){4,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9850,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|ticket|case|issue).*(description|desc).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(customer|order|ticket|case|issue).*(comments?|notes?|remarks?|message|review).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_notes"
        ],
        "negativeExamples": [
          "case_number"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmt|note|rmks|msg|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_txt"
        ],
        "negativeExamples": [
          "user_id"
        ]
      },
      {
        "regExp": "(?i).*(description|comments?|notes?|remarks?|message|review|narrative|free.*text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "review_text"
        ],
        "negativeExamples": [
          "file_format"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please provide an update by Friday.",
      "This item arrived damaged during transit.",
      "Customer reported intermittent login failures today.",
      "Notes indicate payment was applied incorrectly.",
      "Follow up with the vendor to confirm delivery.",
      "Additional comments: replacement requested under warranty.",
      "The user described unexpected behavior after upgrade.",
      "This is a sample narrative used for testing."
    ],
    "negativeContentExamples": [
      "Needs review",
      "Follow up",
      "Pending approval",
      "OK to proceed",
      "2024-05-12",
      "john.doe@example.com",
      "ABC-12345",
      "123-456-7890"
    ],
    "positiveHeaderExamples": [
      "customer_description",
      "order_notes",
      "ticket_comments",
      "internal_remarks",
      "review_text",
      "freeform_text",
      "case_message",
      "user_narrative"
    ],
    "negativeHeaderExamples": [
      "order_id",
      "customer_email",
      "product_code",
      "phone_number",
      "transaction_date",
      "country",
      "file_format",
      "amount"
    ],
    "explanation": "This semantic type identifies fields that hold free-form narrative content such as descriptions, comments, notes, remarks, messages, feedback, and reviews. The value pattern requires multiple space-separated tokens to reduce false positives from short labels, IDs, or codes, while header patterns prioritize common naming conventions from specific to primitive terms.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:14.114480"
  },
  {
    "resultType": "generated",
    "semanticType": "route",
    "description": "The complete name of a street including both the base name and type designation, formatted according to English language conventions.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b((N|S|E|W|NE|NW|SE|SW|North|South|East|West|Northeast|Northwest|Southeast|Southwest)\\.?[ ]+)?(([A-Z][A-Z0-9'-]*|[0-9]+(st|nd|rd|th))[ ]+){1,4}(Street|St|Avenue|Ave|Road|Rd|Boulevard|Blvd|Drive|Dr|Lane|Ln|Court|Ct|Place|Pl|Terrace|Ter|Parkway|Pkwy|Circle|Cir|Way|Square|Sq|Trail|Trl|Alley|Aly|Highway|Hwy)\\.?\\b([ ]+(N|S|E|W|NE|NW|SE|SW|North|South|East|West|Northeast|Northwest|Southeast|Southwest)\\.?)?",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9680,
    "headerPatterns": [
      {
        "regExp": "(?i).*(full|complete).*(street|road|avenue|boulevard|drive|lane|court|place|terrace|parkway|circle|way|square|trail|alley|highway).*(name|route).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "full_street_name"
        ],
        "negativeExamples": [
          "street_number"
        ]
      },
      {
        "regExp": "(?i).*(street|road|avenue|blvd|drive|lane|court|place|terrace|parkway|circle|way|square|trail|alley|highway).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "street_name"
        ],
        "negativeExamples": [
          "street_type"
        ]
      },
      {
        "regExp": "(?i).*(addr|address).*(street|road|ave|blvd|dr|ln|ct).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "address_street"
        ],
        "negativeExamples": [
          "address_line2"
        ]
      },
      {
        "regExp": "(?i).*(st|rd|ave|blvd|dr|ln|ct).*(name|nm).*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "st_name"
        ],
        "negativeExamples": [
          "st_code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 88,
        "mandatory": true,
        "positiveExamples": [
          "name"
        ],
        "negativeExamples": [
          "description"
        ]
      }
    ],
    "positiveContentExamples": [
      "Main Street",
      "E 47th Avenue",
      "North Maple Rd",
      "W 5th St",
      "Martin Luther King Jr Blvd",
      "Oak Grove Cir",
      "Elm Street NE",
      "South Willow Lane"
    ],
    "negativeContentExamples": [
      "Main",
      "E 47 Avenue",
      "North Maple",
      "W 5 Street",
      "Maple Str",
      "Old Mill Rdd",
      "East 12 Avenue",
      "Pine Roadway"
    ],
    "positiveHeaderExamples": [
      "full_street_name",
      "street_route",
      "road_name",
      "address_street",
      "primary_route_name",
      "avenue_name",
      "street_full",
      "legal_street_name"
    ],
    "negativeHeaderExamples": [
      "street_number",
      "address_line1",
      "city",
      "postal_code",
      "state",
      "latitude",
      "country",
      "building_id"
    ],
    "explanation": "Identifies values that represent a full street name consisting of a base name and a street type (e.g., Street, Ave, Rd), optionally with directional prefixes or suffixes. Useful for parsing or validating columns that store normalized street-route names, distinct from house numbers or unit/apartment details.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:19.829306"
  },
  {
    "resultType": "generated",
    "semanticType": "max",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9']{1,}\\b([ \\t]+|-[ \\t]*)\\b[A-Za-z][A-Za-z0-9']{1,}\\b([ \\t]+|-[ \\t]*)\\b[A-Za-z][A-Za-z0-9']{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9730,
    "headerPatterns": [
      {
        "regExp": "(?i).*(long[_ ]?description|full[_ ]?description|detailed[_ ]?description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "description_date"
        ]
      },
      {
        "regExp": "(?i).*(description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "desc_length"
        ]
      },
      {
        "regExp": "(?i).*(comments?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(narrative[_ ]?text|free[_ ]?text|freeform[_ ]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "narrative_text"
        ],
        "negativeExamples": [
          "text_length"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached specification and provide feedback.",
      "Customer reported intermittent issues during login.",
      "Shipment delayed due to weather conditions.",
      "Call back scheduled for 3:30 PM tomorrow.",
      "Requires manager approval before processing.",
      "Added new validation for edge cases.",
      "Payment received; reconcile with invoice 1042."
    ],
    "negativeContentExamples": [
      "OK",
      "N/A",
      "Update pending",
      "High-priority",
      "2024-05-01 update",
      "John Doe",
      "Invoice #12345"
    ],
    "positiveHeaderExamples": [
      "description",
      "long_description",
      "notes",
      "internal_notes",
      "customer_comments",
      "narrative_text",
      "details"
    ],
    "negativeHeaderExamples": [
      "name",
      "code",
      "id",
      "status",
      "address",
      "email",
      "amount"
    ],
    "explanation": "This semantic type targets free-form narrative fields such as descriptions, comments, notes, and other unstructured text. The regex requires at least three word tokens (alphabetic-leading) separated by spaces or hyphens, which reduces collisions with short labels, codes, or single-word fields. Header patterns progress from specific variants (e.g., long_description) through category terms (description, comments) and end with the primitive concept 'text'. The high threshold and low priority mitigate conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:25.041740"
  },
  {
    "resultType": "generated",
    "semanticType": "party",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}\\b([\\s,.;:-]+\\b[A-Za-z]{3,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9890,
    "headerPatterns": [
      {
        "regExp": "(?i).*ticket.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_description"
        ],
        "negativeExamples": [
          "ticket_number"
        ]
      },
      {
        "regExp": "(?i).*customer.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*case.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_notes"
        ],
        "negativeExamples": [
          "case_status"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "email_address"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached report for the latest findings.",
      "User reports intermittent failures after the recent update.",
      "Contacted client to confirm the preferred delivery window.",
      "Add a note to escalate if no response is received by Friday.",
      "Payment was received; closing the request accordingly.",
      "This field captures free-form narrative details from users.",
      "The system logs show repeated timeout errors overnight.",
      "Requires manual verification due to a data mismatch."
    ],
    "negativeContentExamples": [
      "Approved",
      "Needs review",
      "OK to ship",
      "ref 12345",
      "Low risk",
      "2024-08-01 reviewed",
      "Follow-up",
      "Pending"
    ],
    "positiveHeaderExamples": [
      "ticket_description",
      "customer_comments",
      "case_notes",
      "remarks",
      "comment_text",
      "issue_details",
      "description"
    ],
    "negativeHeaderExamples": [
      "ticket_number",
      "customer_id",
      "case_status",
      "notes_count",
      "email_address",
      "issue_date",
      "name",
      "summary_code"
    ],
    "explanation": "This semantic type identifies narrative, free-form textual fields such as descriptions, comments, notes, and details. The content pattern expects at least three alphabetic words of length three or more, which is typical for sentences or meaningful comments. Header patterns prioritize specific subject+type names (e.g., ticket_description), then broader variations and abbreviations, and finally the primitive term 'description'. The high threshold and priority reflect the broad nature of unstructured text to minimize conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:25.462546"
  },
  {
    "resultType": "generated",
    "semanticType": "width",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]{2,}\\b(\\s+\\b[A-Za-z][A-Za-z'-]{2,}\\b){1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9870,
    "headerPatterns": [
      {
        "regExp": "(?i).*(issue|bug|defect).*(description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_description"
        ],
        "negativeExamples": [
          "bug_id"
        ]
      },
      {
        "regExp": "(?i).*(customer|user).*(comment|comments|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "user_email"
        ]
      },
      {
        "regExp": "(?i).*(description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "item_detail_code"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmnt|cmt|remark|remarks|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_remarks"
        ],
        "negativeExamples": [
          "name"
        ]
      },
      {
        "regExp": "(?i).*(narrative|free[_ ]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "text_length"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent failure on startup.",
      "Please see attached logs for additional context.",
      "Not reproducible in staging; occurs after timeout.",
      "User requested refund due to delayed shipment.",
      "Requires manager approval before processing.",
      "Left voicemail and followed up via email.",
      "System returned 404 when saving draft.",
      "Replaced unit; issue resolved under warranty."
    ],
    "negativeContentExamples": [
      "OK to ship",
      "N/A",
      "10 cm width",
      "Fixed",
      "High-priority",
      "Upgraded v2",
      "Pending",
      "12345"
    ],
    "positiveHeaderExamples": [
      "issue_description",
      "customer_comments",
      "ticket_remarks",
      "product_description",
      "free_text",
      "narrative",
      "user_feedback",
      "text"
    ],
    "negativeHeaderExamples": [
      "width",
      "status_code",
      "character_count",
      "customer_id",
      "product_detail_code",
      "memo_id",
      "user_email",
      "file_name"
    ],
    "explanation": "This semantic type identifies free-form narrative text commonly used for descriptions, comments, notes, remarks, and similar unstructured content. The content regex requires at least two alphabetic words of length three or more, favoring multi-word narrative strings over short codes or identifiers. Header patterns progress from specific variants (issue descriptions, customer comments) to broader category terms and finally the primitive term 'text'. The high confidence threshold and low priority help avoid conflicts with more specific types.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:30.185731"
  },
  {
    "resultType": "generated",
    "semanticType": "elevation",
    "description": "Numeric elevation or altitude values representing height relative to sea level, typically expressed in meters or feet. Suitable for columns containing a measurement plus unit (e.g., 1234 m, 3,280 ft).",
    "pluginType": "regex",
    "regexPattern": "\\b([-+])?((\\d{1,3}(,\\d{3})+)|(\\d{1,6}))(\\.\\d+)?\\s?(m(?!/)|meter|meters|metre|metres|ft(?!/)|foot|feet)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9800,
    "headerPatterns": [
      {
        "regExp": "(?i).*(elevation|elev|altitude|alt).*(m|meter|meters|metre|metres|ft|feet).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "elevation_meters"
        ],
        "negativeExamples": [
          "distance_meters"
        ]
      },
      {
        "regExp": "(?i).*(elevation|elev|altitude|alt).*(asl|above[ _-]*sea[ _-]*level).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "elevation_asl"
        ],
        "negativeExamples": [
          "sea_level"
        ]
      },
      {
        "regExp": "(?i).*(elevation|altitude).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "site_elevation"
        ],
        "negativeExamples": [
          "height_cm"
        ]
      },
      {
        "regExp": "(?i).*(elev|alt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "trail_elev"
        ],
        "negativeExamples": [
          "catalog"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "0 m",
      "12 m",
      "-5 m",
      "1,234 m",
      "2,500.5 meters",
      "3,280 ft",
      "+750 feet",
      "8848 metre"
    ],
    "negativeContentExamples": [
      "30 m/s",
      "200 mi",
      "500mm",
      "4500",
      "12 km",
      "-40\u00b0C",
      "3,280.84 ft/s",
      "1000 masl"
    ],
    "positiveHeaderExamples": [
      "elevation_meters",
      "elevation_ft",
      "min_elevation_m",
      "max_elevation",
      "site_elev",
      "altitude_ft",
      "trail_elevation",
      "elevation_asl"
    ],
    "negativeHeaderExamples": [
      "temperature_c",
      "length_m",
      "pressure",
      "geocode",
      "customer_name",
      "timestamp",
      "height_cm",
      "distance_ft"
    ],
    "explanation": "This semantic type targets numeric elevation/altitude measurements with explicit units (meters or feet), allowing optional signs, thousands separators, and decimals. It is useful for mapping, geospatial analytics, environmental datasets, and any context where elevation above sea level is recorded.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:35:51.554881"
  },
  {
    "resultType": "generated",
    "semanticType": "model",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Za-z][A-Za-z0-9'/-]{1,}\\s+){2,}[A-Za-z][A-Za-z0-9 ,;:.\\-()'\"/&+!?#%]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9240,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|order|case|ticket).*(description|desc|details|detail_text|long_description).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|agent|technician|client).*(notes|comments|remarks|narrative).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(free[ _]?text|long[ _]?description|detail[ _]?notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_space"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|rmk|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "short_txt"
        ],
        "negativeExamples": [
          "ticket_cnts"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent failures during startup.",
      "Please escalate to Tier 2; logs attached for reference.",
      "The device was installed successfully, but calibration is pending.",
      "User notes indicate frequent timeouts when uploading large files.",
      "Package arrived damaged on one corner and was refused.",
      "General comments: performance improved after firmware update.",
      "Follow-up scheduled next week after stakeholder review.",
      "This field contains free-form remarks provided by the technician."
    ],
    "negativeContentExamples": [
      "See attachment",
      "Order 12345",
      "Model: ABC-123",
      "Issue-Resolved",
      "OK",
      "N/A",
      "Resolved",
      "2024-07-10 14:32"
    ],
    "positiveHeaderExamples": [
      "product_description",
      "customer_notes",
      "ticket_comments",
      "case_remarks",
      "narrative_text",
      "free_text",
      "long_description",
      "detail_notes"
    ],
    "negativeHeaderExamples": [
      "product_code",
      "customer_id",
      "ticket_number",
      "case_status",
      "url",
      "price",
      "model_number",
      "created_date"
    ],
    "explanation": "This type identifies free-form narrative fields used for descriptions, comments, notes, or similar unstructured textual content. It is useful for detecting long-text columns where users provide contextual or explanatory information rather than structured codes or identifiers.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:36:07.813202"
  },
  {
    "resultType": "generated",
    "semanticType": "position",
    "description": "A professional position or role designation that describes an individual's function, responsibilities, or occupation within an organization.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b([a-z&/,-]{2,}\\s+){0,4}(vp|svp|avp|vice\\s+president|president|chief\\s+[a-z]{2,}|cfo|ceo|coo|cto|cio|ciso|cmo|chro|director|manager|engineer|developer|analyst|consultant|coordinator|specialist|administrator|architect|technician|scientist|supervisor|officer|advisor|adviser|accountant|attorney|counsel|professor|lecturer|instructor|teacher|researcher|nurse|physician|pharmacist|therapist|designer|planner|auditor|inspector|operator|agent|representative|partner|owner|chair|chairperson|treasurer|secretary|intern|apprentice)(\\s+[a-z&/,-]{2,}){0,6}(\\s+(i|ii|iii|iv|v|vi|vii|viii|ix|x|[1-9][0-9]?))?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9290,
    "headerPatterns": [
      {
        "regExp": "(?i).*(employee|staff|worker).*(position|role|title).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "employee_position"
        ],
        "negativeExamples": [
          "employee_id"
        ]
      },
      {
        "regExp": "(?i).*(job|position|role).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "job_title"
        ],
        "negativeExamples": [
          "job_code"
        ]
      },
      {
        "regExp": "(?i).*(position|job|role).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "staff_role"
        ],
        "negativeExamples": [
          "project_name"
        ]
      },
      {
        "regExp": "(?i).*(jt|pos|ttl).*",
        "confidence": 91,
        "mandatory": true,
        "positiveExamples": [
          "pos"
        ],
        "negativeExamples": [
          "employee_code"
        ]
      },
      {
        "regExp": "(?i).*title.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "title"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Senior Software Engineer",
      "Vice President of Marketing",
      "Director of Operations",
      "Project Manager II",
      "HR Specialist",
      "Chief Financial Officer",
      "Lead Data Scientist",
      "Customer Support Representative"
    ],
    "negativeContentExamples": [
      "Project Management",
      "Sales Department",
      "Billing Status",
      "Managed Services",
      "Engineering Team",
      "Senior Level",
      "Vice Presidency",
      "Internship Program"
    ],
    "positiveHeaderExamples": [
      "employee_position",
      "job_title",
      "staff_role",
      "position_title",
      "worker_role",
      "employee_job_title",
      "position",
      "role_description"
    ],
    "negativeHeaderExamples": [
      "department",
      "employment_status",
      "seniority_level",
      "project_name",
      "employee_id",
      "contact_name",
      "pay_grade",
      "team"
    ],
    "explanation": "This semantic type identifies job titles and role designations as they commonly appear in HR and organizational datasets. The regex looks for a broad but explicit set of role keywords (e.g., manager, director, engineer, analyst, specialist) with optional descriptive tokens around them, as well as common seniority markers and roman numeral/level suffixes. Use this to classify columns or cells holding an individual's position within an organization rather than departments, statuses, or general textual descriptions.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:36:16.026239"
  },
  {
    "resultType": "generated",
    "semanticType": "percentage",
    "description": "Numeric percentage values between 0 and 100 inclusive, optionally with decimal fractions, followed by a percent sign. A single optional space may appear before the % symbol. Examples include 0%, 12.5%, 75 %, and 100%.",
    "pluginType": "regex",
    "regexPattern": "\\b(100(\\.0+)?|[1-9]?\\d(\\.\\d+)?)\\s?%",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9860,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(conversion|discount|commission|completion|utilization|growth)\\b.*\\b(percent|percentage|pct)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "conversion_percent"
        ],
        "negativeExamples": [
          "conversion_rate"
        ]
      },
      {
        "regExp": "(?i).*\\bpercentage\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "tax_percentage"
        ],
        "negativeExamples": [
          "tax_amount"
        ]
      },
      {
        "regExp": "(?i).*\\bpct\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "win_pct"
        ],
        "negativeExamples": [
          "win_rate"
        ]
      },
      {
        "regExp": "(?i).*%.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "utilization%"
        ],
        "negativeExamples": [
          "utilization_index"
        ]
      },
      {
        "regExp": "(?i).*\\b(number|num)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "metric_number"
        ],
        "negativeExamples": [
          "metric_name"
        ]
      }
    ],
    "positiveContentExamples": [
      "0%",
      "5%",
      "12.5%",
      "99.99%",
      "100%",
      "75 %",
      "3.0%",
      "0.25%"
    ],
    "negativeContentExamples": [
      "101%",
      "-5%",
      "5 percent",
      "50.0 percent",
      "05%",
      "12,5%",
      ".5%",
      "5%%"
    ],
    "positiveHeaderExamples": [
      "discount_percentage",
      "conversion_percent",
      "commission_pct",
      "completion_percentage",
      "utilization%",
      "growth_pct",
      "tax_percentage",
      "win_pct"
    ],
    "negativeHeaderExamples": [
      "discount_amount",
      "conversion_rate",
      "commission_rate",
      "completion_flag",
      "utilization_index",
      "growth_delta",
      "tax_amount",
      "win_rate"
    ],
    "explanation": "This semantic type identifies values that are expressed as percentages from 0 to 100, optionally with decimal places, and explicitly marked with a percent sign. It is suited for fields such as discount percent, utilization percent, conversion percent, or completion percent, ensuring numeric ranges and formatting consistent with percentage data.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:37:12.306581"
  },
  {
    "resultType": "generated",
    "semanticType": "alias",
    "description": "Unstructured textual content used for descriptions, comments, notes, or other narrative information in data systems.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b(\\s+\\b[A-Za-z]{2,}\\b){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9580,
    "headerPatterns": [
      {
        "regExp": "(?i).*(issue|ticket).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_description"
        ],
        "negativeExamples": [
          "ticket_status"
        ]
      },
      {
        "regExp": "(?i).*(customer|account).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_name"
        ]
      },
      {
        "regExp": "(?i).*(description|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "descriptor_flag"
        ]
      },
      {
        "regExp": "(?i).*(comments|remarks|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_remarks"
        ],
        "negativeExamples": [
          "remark_type"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "message"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported delayed response from server",
      "Package arrived damaged with torn box",
      "Use only for internal testing and demos",
      "Payment pending due to verification review",
      "No known issues at this time",
      "Notes updated after weekly status call",
      "Please refer to the attached diagram",
      "User requested clarification on access rights"
    ],
    "negativeContentExamples": [
      "Customer comment pending review",
      "Payment issue resolved today",
      "Update after weekly call",
      "Out of stock",
      "See attachment",
      "High priority",
      "Order delayed pending",
      "The request timed out"
    ],
    "positiveHeaderExamples": [
      "ticket_description",
      "customer_notes",
      "internal_remarks",
      "product_description",
      "additional_details",
      "free_text",
      "comment_text",
      "issue_notes"
    ],
    "negativeHeaderExamples": [
      "customer_name",
      "product_code",
      "status",
      "quantity",
      "remark_type",
      "descriptor_flag",
      "message",
      "ticket_status"
    ],
    "explanation": "This semantic type identifies free-form narrative fields intended for human-readable descriptions, comments, notes, and similar unstructured text. It is useful for classifying columns that capture explanatory or contextual prose rather than structured identifiers, codes, or numeric values.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:37:31.221291"
  },
  {
    "resultType": "generated",
    "semanticType": "price",
    "description": "Monetary price or amount values that include a currency symbol or an ISO currency code along with a numeric amount. Supports common thousands separators and either period or comma decimals used across locales.",
    "pluginType": "regex",
    "regexPattern": "\\b((USD|EUR|GBP|AUD|CAD)\\s?[+-]?\\d{1,3}([,\\.\\s]\\d{3})*(([,\\.]\\d{2}))?|([$\u20ac\u00a3])\\s?[+-]?\\d{1,3}([,\\.\\s]\\d{3})*(([,\\.]\\d{2}))?|[+-]?\\d{1,3}([,\\.\\s]\\d{3})*(([,\\.]\\d{2}))?\\s?(USD|EUR|GBP|AUD|CAD|[$\u20ac\u00a3]))\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9510,
    "headerPatterns": [
      {
        "regExp": "(?i).*(unit|item|line).*price.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "unit_price"
        ],
        "negativeExamples": [
          "unit_count"
        ]
      },
      {
        "regExp": "(?i).*(total|grand|net|gross).*price.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "total_price"
        ],
        "negativeExamples": [
          "total_units"
        ]
      },
      {
        "regExp": "(?i).*(msrp|rrp|sale|list).*price.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "sale_price"
        ],
        "negativeExamples": [
          "sale_date"
        ]
      },
      {
        "regExp": "(?i).*price.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "price_amount"
        ],
        "negativeExamples": [
          "unit_cost"
        ]
      },
      {
        "regExp": "(?i).*(price).*(amount|amt).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "price_amt"
        ],
        "negativeExamples": [
          "amount_due"
        ]
      },
      {
        "regExp": "(?i).*(number|num).*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "price_num"
        ],
        "negativeExamples": [
          "item_name"
        ]
      }
    ],
    "positiveContentExamples": [
      "$12.99",
      "USD 1,250.00",
      "1,250.00 USD",
      "\u20ac1.234,56",
      "1 234,56 \u20ac",
      "GBP 0.99",
      "\u00a31,000",
      "AUD 75.50"
    ],
    "negativeContentExamples": [
      "12.99",
      "$12.9",
      "1,234.567 USD",
      "US D 100",
      "$",
      "EUR-",
      "\u00a31.000,2",
      "CAD 1 234,5"
    ],
    "positiveHeaderExamples": [
      "unit_price",
      "total_price",
      "item_price",
      "msrp_price",
      "price_amount",
      "sale_price",
      "net_price",
      "grand_total_price"
    ],
    "negativeHeaderExamples": [
      "quantity",
      "item_count",
      "discount_rate",
      "tax_code",
      "description",
      "comments",
      "sku",
      "invoice_id"
    ],
    "explanation": "This semantic type detects monetary price fields containing a currency symbol (such as $, \u20ac, \u00a3) or a standard currency code (such as USD, EUR, GBP) together with a numeric amount. It is useful for classifying unit prices, totals, and other monetary amounts across different locales and formatting styles.",
    "description_pattern": "P1",
    "generated_at": "2025-08-10T18:39:08.934909"
  }
]