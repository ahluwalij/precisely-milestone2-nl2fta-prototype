{
  "dataset": "banking",
  "description_number": 6,
  "timestamp": "20250828_190835",
  "generated_types": [
    {
      "resultType": "generated",
      "semanticType": "FeedbackType",
      "description": "Communication category for classifying feedback as complaint, suggestion, or praise",
      "baseType": "String",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "SUGGESTION",
        "COMPLAINT",
        "PRAISE",
        "RECOMMENDATION",
        "COMMENT",
        "OBSERVATION",
        "FEEDBACK",
        "INQUIRY",
        "REQUEST",
        "REVIEW"
      ],
      "backout": "^[A-Z]{3,12}$",
      "positiveContentExamples": [
        "Suggestion",
        "Complaint",
        "Praise",
        "Recommendation",
        "Comment",
        "Review",
        "Feedback",
        "Observation"
      ],
      "negativeContentExamples": [
        "-1",
        "0.5",
        "Never",
        "123",
        "Feedback Date",
        "Feedback Score",
        "True",
        "False"
      ],
      "positiveHeaderExamples": [
        "Feedback Type",
        "Type of Feedback",
        "Communication Category",
        "Feedback Category"
      ],
      "negativeHeaderExamples": [
        "Feedback Score",
        "Feedback Date",
        "Feedback Value",
        "Communication Date",
        "Feedback Time"
      ],
      "confidenceThreshold": 93.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*feedback.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Feedback Type"
          ],
          "negativeExamples": [
            "Feedback Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*of.*feedback.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type of Feedback"
          ],
          "negativeExamples": [
            "Feedback Score"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*communication.*category.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Communication Category"
          ],
          "negativeExamples": [
            "Communication Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*feedback.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Feedback"
          ],
          "negativeExamples": [
            "Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Score"
          ],
          "rationale": null
        }
      ],
      "priority": 3130,
      "explanation": "The semantic type \"FeedbackType\" is used to categorize different kinds of feedback received in communication, specifically as complaints, suggestions, or praise. It helps in organizing and analyzing feedback data for customer service, product improvement, and other communication-related areas.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0d37b3e7-accd-47ca-995c-d33f76195b3b"
    },
    {
      "resultType": "generated",
      "semanticType": "LoanType",
      "description": "Credit Product: mortgage, auto, or personal loan category",
      "baseType": "String",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "MORTGAGE",
        "AUTO",
        "PERSONAL"
      ],
      "backout": "^[A-Z]{4,9}$",
      "positiveContentExamples": [
        "Mortgage",
        "Auto",
        "Personal"
      ],
      "negativeContentExamples": [
        "-15.0",
        "Negative",
        "Monday"
      ],
      "positiveHeaderExamples": [
        "Loan Type",
        "Loan Category"
      ],
      "negativeHeaderExamples": [
        "Account Type",
        "Property Type"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*loan.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan Type"
          ],
          "negativeExamples": [
            "Account Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*loan.*category.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan Category"
          ],
          "negativeExamples": [
            "Property Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*loan.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan"
          ],
          "negativeExamples": [
            "Account"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Category"
          ],
          "rationale": null
        }
      ],
      "priority": 3150,
      "explanation": "This semantic type classifies loan types as either Mortgage, Auto, or Personal loans. It is used to categorize credit products based on the type of loan, allowing for accurate data classification and analysis in financial datasets.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "aa9ddc8f-58ec-48a1-abc3-46bfce677ac5"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionID",
      "description": "Transaction Reference: TX + 6 digits",
      "baseType": "String",
      "pluginType": "regex",
      "regexPattern": "TX\\d{6}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "TX000001",
        "TX000201",
        "TX055501",
        "TX123456",
        "TX654321",
        "TX999999"
      ],
      "negativeContentExamples": [
        "TX00000",
        "UX000001",
        "T124",
        "TX12345",
        "TX1234567",
        "TX12345A"
      ],
      "positiveHeaderExamples": [
        "Transaction ID",
        "TX Reference",
        "Transaction Identifier",
        "Reference Number",
        "Transaction Number",
        "TX ID"
      ],
      "negativeHeaderExamples": [
        "User ID",
        "Transaction Date",
        "Customer ID",
        "Order Number",
        "Date of Transaction",
        "Account ID"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction ID"
          ],
          "negativeExamples": [
            "User ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*tx.*reference.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "TX Reference"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Detail"
          ],
          "negativeExamples": [
            "User Detail"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Identifier"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 3170,
      "explanation": "This semantic type identifies transaction references formatted as \"TX\" followed by six digits. It is used in datasets where transaction identifiers need to be extracted or validated, ensuring a consistent pattern for referencing transactions across records.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "45f92d48-221d-4d09-88db-13dcdf2f0ce0"
    },
    {
      "resultType": "generated",
      "semanticType": "LoanAmount",
      "description": "Principal Amount: original borrowed sum",
      "baseType": "Double",
      "pluginType": "regex",
      "regexPattern": "(?i)^\\d+(\\.\\d+)?$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "124.2",
        "345235.6",
        "3533.3",
        "1000.00",
        "500000",
        "250.5"
      ],
      "negativeContentExamples": [
        "-15.0",
        "Negative",
        "Monday",
        "Principal",
        "Interest Rate",
        "Balance"
      ],
      "positiveHeaderExamples": [
        "Loan Amount",
        "Principal Amount",
        "Total Loan Amount",
        "Original Amount",
        "Mortgage Amount",
        "Sum Borrowed"
      ],
      "negativeHeaderExamples": [
        "Interest Rate",
        "Balance",
        "Payment Date",
        "Borrower Name",
        "Account Number",
        "Due Date"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*principal.*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Principal Amount"
          ],
          "negativeExamples": [
            "Interest Rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*loan.*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan Amount"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 3190,
      "explanation": "This semantic type represents monetary amounts specifically denoting the principal sum borrowed in a loan. It captures numerical values that are typically positive decimals or whole numbers. It is useful in financial datasets for distinguishing loan amounts from other numerical data types such as interest rates or account balances.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0aad377e-6d45-4e97-a52b-6c40eb0e8ea3"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountOpeningDate",
      "description": "Account Creation: original establishment date",
      "baseType": "LocalDateTime",
      "pluginType": "regex",
      "regexPattern": "\\b\\d{1,2}/\\d{1,2}/\\d{4}( \\d{2}:\\d{2}:\\d{2})?|\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}:\\d{2})?|\\d{2}:\\d{2}:\\d{2} \\d{4}-\\d{2}-\\d{2}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "4/11/2023 16:29:14",
        "2023-05-11",
        "11:29:14 2000-05-01",
        "4/11/2023"
      ],
      "negativeContentExamples": [
        "Wednesday",
        "January",
        "1",
        "12/2023",
        "5/11/23"
      ],
      "positiveHeaderExamples": [
        "Account Opening Date",
        "Account Start Date"
      ],
      "negativeHeaderExamples": [
        "Opening Balance Date",
        "Account Closing Date",
        "Balance Date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*opening.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Opening Date"
          ],
          "negativeExamples": [
            "Opening Balance Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account.*start.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Start Date"
          ],
          "negativeExamples": [
            "Account Closing Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Date"
          ],
          "negativeExamples": [
            "Balance Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Date"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        }
      ],
      "priority": 3210,
      "explanation": "This semantic type identifies dates associated with the opening or creation of an account. It is commonly used in financial data to track when an account was originally established, and it typically appears in datasets as either a date or a timestamp. The regex pattern captures various common date and datetime formats to ensure accurate identification.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "9a3b7fbf-07b9-4a6d-8429-243a58b6ba67"
    },
    {
      "resultType": "generated",
      "semanticType": "LoanStatus",
      "description": "Application State: approved, pending, or closed status",
      "baseType": "String",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "APPROVED",
        "PENDING",
        "CLOSED",
        "REJECTED"
      ],
      "backout": "^[A-Z]{2,10}$",
      "positiveContentExamples": [
        "Approved",
        "Pending",
        "Closed",
        "Rejected",
        "APPROVED",
        "CLOSED"
      ],
      "negativeContentExamples": [
        "-1",
        "Yes",
        "No",
        "123",
        "Open",
        "Completed"
      ],
      "positiveHeaderExamples": [
        "Loan Status",
        "Status"
      ],
      "negativeHeaderExamples": [
        "Loan Amount",
        "Account Status",
        "Payment Status",
        "Loan Date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*loan.*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan Status"
          ],
          "negativeExamples": [
            "Loan Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Status"
          ],
          "negativeExamples": [
            "Account Status"
          ],
          "rationale": null
        }
      ],
      "priority": 3240,
      "explanation": "This semantic type identifies the status of a loan application, such as whether it is approved, pending, closed, or rejected. It is useful for categorizing and analyzing loan application data based on its current state.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0a8ce021-6166-47d6-b17f-6a313cb91557"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountBalanceAfterTransaction",
      "description": "Updated Balance: account funds after transaction completion",
      "baseType": "Double",
      "pluginType": "regex",
      "regexPattern": "\\d+\\.\\d{1,2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "124.2",
        "345235.6",
        "3533.3",
        "1000.00",
        "50.5",
        "789.01",
        "23456.78"
      ],
      "negativeContentExamples": [
        "Tom",
        "Negative",
        "Monday",
        "John",
        "Transaction",
        "Balance Due",
        "Amount Paid"
      ],
      "positiveHeaderExamples": [
        "Balance After Transaction",
        "Post‑Txn Balance",
        "Updated Balance",
        "Final Amount",
        "Ending Balance",
        "Balance Post Transaction"
      ],
      "negativeHeaderExamples": [
        "Pre‑Txn Balance",
        "Transaction Balance",
        "Initial Balance",
        "Amount Due",
        "Starting Balance",
        "Transaction Amount"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*balance.*after.*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance After Transaction"
          ],
          "negativeExamples": [
            "Pre-Txn Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*post.*txn.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Post‑Txn Balance"
          ],
          "negativeExamples": [
            "Transaction Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*balance.*post.*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance Post Transaction"
          ],
          "negativeExamples": [
            "Pre-Transaction Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*post.*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Post-Transaction Amount"
          ],
          "negativeExamples": [
            "Transaction Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Updated Balance"
          ],
          "negativeExamples": [
            "Initial Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Final Amount"
          ],
          "negativeExamples": [
            "Starting Amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3260,
      "explanation": "This semantic type represents account balances after transactions have been completed. It is used in financial systems to update and reflect the current available funds post any debit or credit events. The regex pattern captures numeric values with decimal places, typical in monetary expressions.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0fc51983-b8e9-4cc4-87a8-54df9bbcfe50"
    },
    {
      "resultType": "generated",
      "semanticType": "BranchID",
      "description": "Branch Reference: numeric location identifier",
      "baseType": "Long",
      "pluginType": "regex",
      "regexPattern": "\\b[1-9]\\d*\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2",
        "56",
        "124",
        "7",
        "1456",
        "999",
        "1001"
      ],
      "negativeContentExamples": [
        "0",
        "-1",
        "ACD",
        "01",
        "000",
        "999A",
        "02"
      ],
      "positiveHeaderExamples": [
        "Branch ID",
        "Branch Code",
        "Branch Number",
        "Branch",
        "Branch Identifier",
        "Branch Reference"
      ],
      "negativeHeaderExamples": [
        "Office ID",
        "Location ID",
        "Department Code",
        "Office Name",
        "Location Name",
        "Department ID"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*branch.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch ID"
          ],
          "negativeExamples": [
            "Office ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*branch.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch Code"
          ],
          "negativeExamples": [
            "Location ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*branch.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch Name"
          ],
          "negativeExamples": [
            "Department Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch Code"
          ],
          "negativeExamples": [
            "Office Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch ID"
          ],
          "negativeExamples": [
            "Office Location"
          ],
          "rationale": null
        }
      ],
      "priority": 3270,
      "explanation": "This semantic type is used to identify numeric branch identifiers within datasets, often utilized in systems where branches or locations need to be uniquely referenced by a numeric code. It is important to ensure that identifiers are positive integers, as negative values or zero do not represent valid branch IDs.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "aee1c44f-48ab-4a76-84e5-9d551a3b4db8"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDate",
      "description": "Processing Timestamp: complete date and time of transaction execution",
      "baseType": "LocalDateTime",
      "pluginType": "regex",
      "regexPattern": "(?i)(\\d{1,2}/\\d{1,2}/\\d{4}\\s\\d{2}:\\d{2}:\\d{2}|\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2})",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "4/11/2023 16:29:14",
        "2023-05-11 11:29:14",
        "2000-05-01 11:29:14",
        "12/12/2021 23:59:59",
        "1999-01-01 00:00:00",
        "4/1/2020 01:01:01"
      ],
      "negativeContentExamples": [
        "Wednesday",
        "January",
        "1",
        "2023/13/01",
        "31-02-2023",
        "2023-05-11"
      ],
      "positiveHeaderExamples": [
        "Transaction Date",
        "Txn Timestamp",
        "Processing Date",
        "Execution Timestamp",
        "Transaction Execution Date",
        "Processed Date"
      ],
      "negativeHeaderExamples": [
        "Transaction ID",
        "Date Created",
        "Order Number",
        "Customer Name",
        "Invoice Amount",
        "Batch ID"
      ],
      "confidenceThreshold": 98.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*timestamp.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction"
          ],
          "negativeExamples": [
            "Created Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Date"
          ],
          "negativeExamples": [
            "ID"
          ],
          "rationale": null
        }
      ],
      "priority": 3280,
      "explanation": "The DATETIME.TRANSACTION_DATE semantic type is used to identify columns containing complete date and time information related to the execution of a transaction. This includes timestamps formatted as either \"MM/DD/YYYY HH:MM:SS\" or \"YYYY-MM-DD HH:MM:SS\". It is critical for financial and transactional datasets where precise timing of transactions is important for auditing and tracking purposes.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "62a8ab45-c145-472e-a8a5-d37514fc0e63"
    },
    {
      "resultType": "generated",
      "semanticType": "InterestRate",
      "description": "Annual interest rate represented as a percentage cost or return.",
      "baseType": "String",
      "pluginType": "regex",
      "regexPattern": "(?i)^(100(?:\\.0+)?|0*(?:\\.\\d+|\\d+(?:\\.\\d+)?)%?)$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2.65",
        "3%",
        "55%",
        "0.05",
        "99.99%",
        "0%"
      ],
      "negativeContentExamples": [
        "-1.0",
        "-2",
        "abc%",
        "rate"
      ],
      "positiveHeaderExamples": [
        "Interest Rate",
        "Rate",
        "Annual Interest Rate",
        "Interest %",
        "Rate",
        "APR"
      ],
      "negativeHeaderExamples": [
        "Fee Rate",
        "Discount Rate",
        "Service Charge",
        "Tax Rate",
        "Penalty",
        "Interest Fee"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*interest.*rate.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Interest Rate"
          ],
          "negativeExamples": [
            "Fee Rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*rate.*\\(%\\).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Rate (%)"
          ],
          "negativeExamples": [
            "Discount Rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*rate.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Rate"
          ],
          "negativeExamples": [
            "Discount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*percentage.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Percentage Rate"
          ],
          "negativeExamples": [
            "Fee Percentage"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*percent.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Percent"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3300,
      "explanation": "This semantic type identifies fields that represent annual interest rates expressed as percentages. It is applicable in financial datasets where interest rates are presented as costs or returns. The regex pattern is designed to match percentage values, allowing for optional percentage signs and handling decimals.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "45c66597-d0bf-4636-84ed-0122f229504c"
    },
    {
      "resultType": "generated",
      "semanticType": "CreditLimit",
      "description": "Credit Ceiling: maximum borrowing amount allowed",
      "baseType": "Double",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+(\\.\\d{1,2})?\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "450.5",
        "1000",
        "562.3",
        "200.75",
        "9999.99",
        "123.45"
      ],
      "negativeContentExamples": [
        "-1",
        "Monday",
        "-1234.5",
        "Text",
        "100A",
        "NaN"
      ],
      "positiveHeaderExamples": [
        "Credit Limit",
        "Max Credit",
        "Credit Ceiling",
        "Allowed Credit",
        "Credit Cap",
        "Limit on Credit"
      ],
      "negativeHeaderExamples": [
        "Balance Limit",
        "Loan Limit",
        "Available Credit",
        "Credit Used",
        "Credit Balance",
        "Borrowed Amount"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*credit.*limit.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Credit Limit"
          ],
          "negativeExamples": [
            "Loan Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*credit.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Max Credit"
          ],
          "negativeExamples": [
            "Balance Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*credit.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Credit Limit"
          ],
          "negativeExamples": [
            "Loan Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*limit.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Max Credit"
          ],
          "negativeExamples": [
            "Loan Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Credit Number"
          ],
          "negativeExamples": [
            "Loan Number"
          ],
          "rationale": null
        }
      ],
      "priority": 3310,
      "explanation": "This semantic type identifies numeric values representing the maximum borrowing amount allowed, typically used in financial contexts to denote a credit ceiling or limit. Use cases include processing financial datasets where credit limits are a key attribute.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "7294b05a-b076-4b41-840a-4d25ff08e869"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountType",
      "description": "Account Product: savings, checking, or business classification",
      "baseType": "String",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "SAVINGS",
        "CHECKINGS",
        "CURRENT",
        "BUSINESS",
        "PERSONAL",
        "JOINT",
        "FIXED",
        "LOAN",
        "CREDIT",
        "DEPOSIT"
      ],
      "backout": "^[A-Z]{4,10}$",
      "positiveContentExamples": [
        "Savings",
        "Checkings",
        "Current",
        "Business",
        "Personal",
        "Joint",
        "Fixed",
        "Loan"
      ],
      "negativeContentExamples": [
        "Monday",
        "Apple",
        "Transaction",
        "Invoice",
        "Receipt",
        "Payment",
        "Service",
        "Product"
      ],
      "positiveHeaderExamples": [
        "Account Type",
        "Account Category",
        "Account Classification",
        "Type of Account"
      ],
      "negativeHeaderExamples": [
        "Transaction Type",
        "Portfolio Type",
        "Service Type",
        "Product Category"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account\\s*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Type"
          ],
          "negativeExamples": [
            "Transaction Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account\\s*category.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Category"
          ],
          "negativeExamples": [
            "Portfolio Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Info"
          ],
          "negativeExamples": [
            "Transaction Detail"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 3320,
      "explanation": "This semantic type identifies account product classifications, such as savings, checking, or business accounts, used in financial datasets to categorize different types of accounts a customer may hold.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "63356c60-c3a4-41ba-82b2-85715e5a5a8c"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountBalance",
      "description": "Available Funds: current account balance amount",
      "baseType": "Double",
      "pluginType": "regex",
      "regexPattern": "\\d+(\\.\\d+)?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "124.2",
        "345235.6",
        "3533.3",
        "10000.00",
        "0.99",
        "1234567890.12"
      ],
      "negativeContentExamples": [
        "Tom",
        "Negative",
        "Monday",
        "123abc",
        "-123.45",
        "Balance"
      ],
      "positiveHeaderExamples": [
        "Account Balance",
        "Current Balance",
        "Balance Amount",
        "Available Balance",
        "Account Funds",
        "Balance Total"
      ],
      "negativeHeaderExamples": [
        "Balance Change",
        "Credit Limit",
        "Transaction History",
        "Account Name",
        "Customer ID",
        "Invoice Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Balance"
          ],
          "negativeExamples": [
            "Balance Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*current.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Current Balance"
          ],
          "negativeExamples": [
            "Credit Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance Amount"
          ],
          "negativeExamples": [
            "Transaction Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Amount"
          ],
          "negativeExamples": [
            "Account Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance Number"
          ],
          "negativeExamples": [
            "Account Description"
          ],
          "rationale": null
        }
      ],
      "priority": 3330,
      "explanation": "This semantic type represents the current balance of a financial account, typically expressed as a numeric amount with optional decimal precision. It is used in contexts where available funds or account balances are tracked or reported.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "44d9aefb-a661-41a1-aee3-08d64ac089a7"
    },
    {
      "resultType": "generated",
      "semanticType": "LoanID",
      "description": "Credit Reference: numeric loan account identifier",
      "baseType": "Long",
      "pluginType": "regex",
      "regexPattern": "\\b[1-9]\\d*\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2",
        "56",
        "124",
        "789",
        "34567",
        "101112"
      ],
      "negativeContentExamples": [
        "0",
        "-1",
        "ACD",
        "00123",
        "-56",
        "123.45"
      ],
      "positiveHeaderExamples": [
        "Loan ID",
        "Loan Reference",
        "Loan Identifier",
        "Loan Number",
        "Loan Account ID",
        "Loan Account Number"
      ],
      "negativeHeaderExamples": [
        "Loan Amount",
        "Customer ID",
        "Transaction Date",
        "Account Balance",
        "Customer Reference",
        "Payment Amount"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*loan\\s*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan ID"
          ],
          "negativeExamples": [
            "Loan Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*loan\\s*reference.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan Reference"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*loan.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Loan Details"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID Number"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Number"
          ],
          "negativeExamples": [
            "Amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3340,
      "explanation": "This semantic type represents a numeric identifier for loan accounts, typically used as a reference in credit systems. It should only include positive integers, distinguishing it from other identifiers like customer IDs or transaction numbers.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "cdd82000-56ef-42f8-8333-613d74b96a39"
    },
    {
      "resultType": "generated",
      "semanticType": "ResolutionStatus",
      "description": "Service status indicating whether an issue is resolved, pending, or in-progress.",
      "baseType": "String",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "RESOLVED",
        "PENDING",
        "IN-PROGRESS",
        "CLOSED",
        "OPEN",
        "WAITING",
        "ON-HOLD",
        "ESCALATED",
        "DEFERRED",
        "CANCELLED"
      ],
      "backout": "^(RESOLVED|PENDING|IN-PROGRESS|CLOSED|OPEN|WAITING|ON-HOLD|ESCALATED|DEFERRED|CANCELLED)$",
      "positiveContentExamples": [
        "Resolved",
        "Pending",
        "In-Progress",
        "Closed",
        "Open",
        "Waiting"
      ],
      "negativeContentExamples": [
        "No",
        "-1",
        "134.2",
        "12345",
        "Unknown",
        "N/A"
      ],
      "positiveHeaderExamples": [
        "Resolution Status",
        "Status of Resolution",
        "Current Status",
        "Issue Resolution Status",
        "Ticket Status"
      ],
      "negativeHeaderExamples": [
        "Resolution Time",
        "Case Status",
        "Completion Date",
        "Time Taken",
        "Priority Level"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*resolution\\s*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Resolution Status"
          ],
          "negativeExamples": [
            "Resolution Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*status\\s*of\\s*resolution.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Status of Resolution"
          ],
          "negativeExamples": [
            "Case Status"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Status"
          ],
          "negativeExamples": [
            "Time"
          ],
          "rationale": null
        }
      ],
      "priority": 3350,
      "explanation": "This semantic type represents the status of a service or issue resolution process, capturing various states such as \"Resolved\", \"Pending\", or \"In-Progress\". It is crucial for tracking and managing service workflows and ensuring that issues are addressed in a timely manner.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0bddf80a-d0fa-489b-af3b-ed918beda3ca"
    },
    {
      "resultType": "generated",
      "semanticType": "FeedbackID",
      "description": "Service Reference: customer feedback tracking number",
      "baseType": "Long",
      "pluginType": "regex",
      "regexPattern": "\\d+",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "35",
        "124",
        "6789",
        "202",
        "99999"
      ],
      "negativeContentExamples": [
        "-1",
        "0.5",
        "Monday",
        "ABC123",
        "12.34",
        "Feedback"
      ],
      "positiveHeaderExamples": [
        "Feedback ID",
        "Ticket ID",
        "Service ID"
      ],
      "negativeHeaderExamples": [
        "Response ID",
        "Comment ID",
        "User ID"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*feedback.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Feedback ID"
          ],
          "negativeExamples": [
            "Response ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ticket.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Ticket ID"
          ],
          "negativeExamples": [
            "Comment ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Response"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*num.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Num"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 3360,
      "explanation": "This semantic type is used to identify numeric identifiers for tracking customer feedback entries. The identifiers are positive integers and can be found in data columns labeled with terms like \"Feedback ID\" or \"Ticket ID\".",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "4aeab7e0-193c-49a8-987f-89e3139893a5"
    },
    {
      "resultType": "generated",
      "semanticType": "CardType",
      "description": "Payment Network: Visa, MasterCard, or other card brand",
      "baseType": "String",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "VISA",
        "MASTERCARD",
        "AMEX",
        "DISCOVER",
        "JCB",
        "DINERS",
        "UNIONPAY",
        "RUPAY",
        "CUP",
        "MAESTRO"
      ],
      "backout": "^[A-Z]{3,10}$",
      "positiveContentExamples": [
        "Visa",
        "MasterCard",
        "Amex",
        "Discover",
        "JCB",
        "Diners",
        "UnionPay",
        "RuPay"
      ],
      "negativeContentExamples": [
        "1",
        "-1",
        "Saturday",
        "1234",
        "None",
        "123-456-7890",
        "01/01/2020"
      ],
      "positiveHeaderExamples": [
        "Card Type",
        "Payment Card",
        "Network",
        "Brand",
        "Card Network",
        "Credit Card Type"
      ],
      "negativeHeaderExamples": [
        "Card Number",
        "Credit Limit",
        "Account Number",
        "Expiration Date",
        "Billing Address",
        "Transaction Date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*card.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Card Type"
          ],
          "negativeExamples": [
            "Card Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*payment.*card.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Payment Card"
          ],
          "negativeExamples": [
            "Credit Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*network.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Network"
          ],
          "negativeExamples": [
            "Account Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*brand.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Brand"
          ],
          "negativeExamples": [
            "Expiration Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 3380,
      "explanation": "This semantic type represents credit card types or networks such as Visa, MasterCard, and others. It is useful for identifying columns containing information about the card brand, typically used in financial datasets for transaction processing or payment gateway integrations.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "e2ce2025-018c-4d76-a1c1-c40860c8c052"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionAmount",
      "description": "Transaction Value: decimal amount in base currency",
      "baseType": "Double",
      "pluginType": "regex",
      "regexPattern": "^[0-9]+(\\.[0-9]+)?$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "376.24",
        "1.2",
        "521353.2",
        "1000.50",
        "0.99",
        "250",
        "999999.99",
        "3.14"
      ],
      "negativeContentExamples": [
        "XC00128",
        "14D",
        "YY",
        "-5.2",
        "20.20.20",
        "12,34",
        "USD 100",
        "100USD"
      ],
      "positiveHeaderExamples": [
        "Transaction Amount",
        "Amount",
        "Total Amount",
        "Invoice Amount",
        "Payment Amount",
        "Debit Amount",
        "Credit Amount",
        "Purchase Amount"
      ],
      "negativeHeaderExamples": [
        "Transaction Date",
        "Balance",
        "Account Number",
        "Customer ID",
        "Product Code",
        "Order ID",
        "Shipping Date",
        "Discount Code"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Amount"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*usd.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount (USD)"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 3390,
      "explanation": "This semantic type identifies transaction amounts that are represented as decimal values in the base currency. It uses a regex pattern to match numeric values that may or may not include a decimal point, ensuring that only valid monetary values are captured. The type is particularly useful in financial datasets where transaction values need to be extracted or validated. Header patterns help in identifying relevant columns in a dataset that contain transaction amount information.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "86641e9d-503a-4b7e-b453-ae60efbf6f8e"
    }
  ]
}