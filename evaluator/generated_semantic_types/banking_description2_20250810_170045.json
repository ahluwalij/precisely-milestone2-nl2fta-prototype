[
  {
    "resultType": "generated",
    "semanticType": "AccountBalance",
    "description": "This represents the account's available funds as a decimal value that can include whole numbers and fractional amounts for precise currency representation. The balance reflects the net position after all previous transactions have been processed.",
    "pluginType": "regex",
    "regexPattern": "\\b-?(\\d{1,3}([, ]\\d{3})+|\\d+)(\\.\\d{1,4})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 2430,
    "headerPatterns": [
      {
        "regExp": "(?i).*(account|acct|ledger|available).*balance.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_balance"
        ],
        "negativeExamples": [
          "account_number"
        ]
      },
      {
        "regExp": "(?i).*(account|acct).*(balance|bal).*(amount|value).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_balance_amount"
        ],
        "negativeExamples": [
          "account_status"
        ]
      },
      {
        "regExp": "(?i).*(bal|avail).*(amt|amount).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "bal_amt"
        ],
        "negativeExamples": [
          "bal_date"
        ]
      },
      {
        "regExp": "(?i).*(ending|closing).*balance.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ending_balance"
        ],
        "negativeExamples": [
          "ending_date"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "1250",
      "123.45",
      "1,234",
      "1,234.56",
      "-250.00",
      "987,654,321.99",
      "1 234 567.89"
    ],
    "negativeContentExamples": [
      "$123.45",
      "1234,56",
      "1,23,456.00",
      "1,234.",
      "12.345678",
      "1_234.56",
      "1,234.5a",
      "balance"
    ],
    "positiveHeaderExamples": [
      "account_balance",
      "available_balance",
      "ending_balance",
      "ledger_balance",
      "acct_balance",
      "balance_amount",
      "account_balance_amount",
      "current_account_balance"
    ],
    "negativeHeaderExamples": [
      "account_number",
      "balance_date",
      "currency_code",
      "customer_name",
      "transaction_count",
      "invoice_amount",
      "account_status",
      "ledger_code"
    ],
    "explanation": "AccountBalance identifies numeric monetary amounts representing an account's available or ledger balance, supporting integers and decimals with optional thousands separators and an optional leading minus for overdrawn balances. Typical use cases include detecting balance columns in financial exports, bank statements, and accounting system reports for validation or normalization.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:01:23.545187"
  },
  {
    "resultType": "generated",
    "semanticType": "TransactionID",
    "description": "This type captures a unique transaction identifier used for transactional tracking purposes across systems. It must begin with the literal prefix 'TX' and be followed by exactly six numerical digits.",
    "pluginType": "regex",
    "regexPattern": "\\bTX\\d{6}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 2400,
    "headerPatterns": [
      {
        "regExp": "(?i).*transaction[_ ]?id.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "transaction_id"
        ],
        "negativeExamples": [
          "transaction_date"
        ]
      },
      {
        "regExp": "(?i).*tx[_ ]?id.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "tx_id"
        ],
        "negativeExamples": [
          "tax_id"
        ]
      },
      {
        "regExp": "(?i).*transaction[_ ]?identifier.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "transaction_identifier"
        ],
        "negativeExamples": [
          "transaction_code"
        ]
      },
      {
        "regExp": "(?i).*txn[_ ]?id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "txn_id"
        ],
        "negativeExamples": [
          "txn_amount"
        ]
      },
      {
        "regExp": "(?i).*transaction.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "transaction"
        ],
        "negativeExamples": [
          "customer"
        ]
      },
      {
        "regExp": "(?i).*id.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "id"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "TX000001",
      "TX123456",
      "TX654321",
      "TX999999",
      "TX000123",
      "TX120045",
      "TX400000",
      "TX700321"
    ],
    "negativeContentExamples": [
      "tx123456",
      "TX12345",
      "TX1234567",
      "TX 123456",
      "TX12345A",
      "TX-123456",
      "TXA23456",
      "TR123456"
    ],
    "positiveHeaderExamples": [
      "transaction_id",
      "tx_id",
      "transaction_identifier",
      "txn_id",
      "transaction",
      "id",
      "transactionid"
    ],
    "negativeHeaderExamples": [
      "transaction_date",
      "transaction_code",
      "customer_id",
      "invoice_id",
      "txn_amount",
      "tx_status",
      "session_identifier",
      "reference_number"
    ],
    "explanation": "IDENTITY.TransactionID represents compact, system-generated transaction identifiers that strictly follow the TX-prefixed six-digit format (e.g., TX123456). It is useful for validating, indexing, and linking transactional records across heterogeneous systems where a consistent ID pattern is enforced.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:01:29.320364"
  },
  {
    "resultType": "generated",
    "semanticType": "LoanID",
    "description": "This field contains a positive integer that serves as the primary reference for tracking individual loan accounts and their associated transactions. It enables linkage between loan payments, balances, and customer records within the lending system.",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9]\\d{4,11}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 2480,
    "headerPatterns": [
      {
        "regExp": "(?i).*loan.*account.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_account_id"
        ],
        "negativeExamples": [
          "account_loan_balance"
        ]
      },
      {
        "regExp": "(?i).*loan.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "LoanID"
        ],
        "negativeExamples": [
          "loan_code"
        ]
      },
      {
        "regExp": "(?i).*loan.*reference.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_reference"
        ],
        "negativeExamples": [
          "reference_number"
        ]
      },
      {
        "regExp": "(?i).*loan.*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_number"
        ],
        "negativeExamples": [
          "account_number"
        ]
      },
      {
        "regExp": "(?i).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "id"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "10345",
      "582301",
      "7300154",
      "2198450021",
      "90011234567",
      "345679002345",
      "6839205",
      "4567891234"
    ],
    "negativeContentExamples": [
      "012345",
      "1234",
      "-123456",
      "1234567890123456",
      "12345.0",
      "1 23456",
      "12345A",
      "0000012345"
    ],
    "positiveHeaderExamples": [
      "loan_account_id",
      "LoanID",
      "loan_reference",
      "loan_number",
      "ln_id",
      "loan_ref_no",
      "LoanAccountId",
      "loanId"
    ],
    "negativeHeaderExamples": [
      "account_id",
      "loan_balance",
      "customer_id",
      "loan_amount",
      "loan_status",
      "loan_code",
      "loan_date",
      "invoice_id"
    ],
    "explanation": "LoanID is a numeric identifier used to uniquely reference a loan record across payments, balances, and related customer data. Values are positive integers without signs, spaces, or separators; the pattern enforces a practical length to reduce collisions with generic small numbers. Header patterns prioritize common naming conventions for loan identifiers to improve precision in schema-driven classification.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:01:38.824402"
  },
  {
    "resultType": "generated",
    "semanticType": "InterestRate",
    "description": "This field contains the interest rate applied to the financial product, presented either as a decimal number or percentage value. It represents the cost of borrowing or the return on deposits calculated on an annual basis.",
    "pluginType": "regex",
    "regexPattern": "\\b(([0-9]{1,2}(\\.[0-9]+)?)\\s?(%|pct|percent)|0?\\.[0-9]+)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 2510,
    "headerPatterns": [
      {
        "regExp": "(?i).*annual.*interest.*rate.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "annual_interest_rate"
        ],
        "negativeExamples": [
          "monthly_interest_rate"
        ]
      },
      {
        "regExp": "(?i).*annual.*percentage.*rate.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "annual_percentage_rate"
        ],
        "negativeExamples": [
          "percentage_rate_history"
        ]
      },
      {
        "regExp": "(?i).*interest.*rate.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "interest_rate"
        ],
        "negativeExamples": [
          "interest_amount"
        ]
      },
      {
        "regExp": "(?i).*apr.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "apr"
        ],
        "negativeExamples": [
          "annual_rate"
        ]
      },
      {
        "regExp": "(?i).*rate.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "rate"
        ],
        "negativeExamples": [
          "ratio"
        ]
      }
    ],
    "positiveContentExamples": [
      "5%",
      "5.25%",
      "0.0525",
      ".0375",
      "12 pct",
      "7.5 percent",
      "0.08",
      "99.9%"
    ],
    "negativeContentExamples": [
      "105%",
      "5",
      "0,0525",
      "5.%",
      "-0.02",
      "12,5%",
      "7.5 %%",
      "1.0 rate"
    ],
    "positiveHeaderExamples": [
      "interest_rate",
      "annual_interest_rate",
      "annual_percentage_rate",
      "apr",
      "apr_percent",
      "loan_interest_rate",
      "deposit_interest_rate",
      "promo_interest_rate"
    ],
    "negativeHeaderExamples": [
      "interest_amount",
      "interest_accrued",
      "tax_rate",
      "discount_rate",
      "exchange_rate",
      "apr_total_sales",
      "rate_code",
      "monthly_payment"
    ],
    "explanation": "Identifies values representing an annual interest rate either as a decimal fraction (e.g., 0.0525) or as a percentage with symbol or keywords (e.g., 5.25%, 12 pct, 7.5 percent). The regex favors explicit percent indicators for integers and allows decimals strictly less than 1 for fractional forms, using word boundaries to avoid over-matching. Use this type for fields capturing APR or annual interest rates on loans, deposits, or similar financial products; header patterns progress from specific 'annual interest rate' and 'annual percentage rate' to the primitive 'rate'.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:01:49.373655"
  },
  {
    "resultType": "generated",
    "semanticType": "TransactionDate",
    "description": "This captures the exact timestamp when a transaction was processed, formatted as a complete date-time string. The format includes month, day, year, and precise time with hours, minutes, and seconds.",
    "pluginType": "regex",
    "regexPattern": "(\\b\\d{4}-\\d{2}-\\d{2}[ T]\\d{2}:\\d{2}:\\d{2}\\b|\\b\\d{1,2}/\\d{1,2}/\\d{4} \\d{2}:\\d{2}:\\d{2}\\b|\\b\\d{1,2}-[A-Za-z]{3}-\\d{4} \\d{2}:\\d{2}:\\d{2}\\b|\\b[A-Za-z]{3,9} \\d{1,2}, \\d{4} \\d{1,2}:\\d{2}:\\d{2} [AP]M\\b)",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 2420,
    "headerPatterns": [
      {
        "regExp": "(?i).*transaction.*processed.*(date|time|timestamp).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "transaction_processed_timestamp"
        ],
        "negativeExamples": [
          "transaction_created_timestamp"
        ]
      },
      {
        "regExp": "(?i).*(transaction|txn).*(date[_ ]?time|timestamp|datetime).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "txn_datetime"
        ],
        "negativeExamples": [
          "transaction_amount"
        ]
      },
      {
        "regExp": "(?i).*(transaction|txn).*(date|time).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "transaction_time"
        ],
        "negativeExamples": [
          "account_time"
        ]
      },
      {
        "regExp": "(?i).*(processed_at|processed_time|processed_on).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "txn_processed_at"
        ],
        "negativeExamples": [
          "order_placed_at"
        ]
      },
      {
        "regExp": "(?i).*transaction.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "transaction_date"
        ],
        "negativeExamples": [
          "post_date"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "date"
        ],
        "negativeExamples": [
          "time"
        ]
      }
    ],
    "positiveContentExamples": [
      "2024-07-21 16:05:33",
      "2023-01-09T08:00:00",
      "11/5/2023 14:23:45",
      "05-Nov-2023 09:15:10",
      "November 5, 2023 2:23:45 PM",
      "Sep 03, 2022 12:00:00 AM",
      "12/31/2021 23:59:59",
      "2019-12-01T00:00:01"
    ],
    "negativeContentExamples": [
      "2024-07-21 16:05",
      "07/21/2024 16:05",
      "2024-07-21",
      "16:05:33",
      "21-Nov-2023 9:15 PM",
      "November 5 2023 2:23:45 PM",
      "2023/11/05 14:23:45",
      "05-Nov-23 09:15:10"
    ],
    "positiveHeaderExamples": [
      "transaction_processed_timestamp",
      "transaction_datetime",
      "txn_processed_at",
      "transaction_date_time",
      "purchase_transaction_date",
      "order_transaction_datetime",
      "transaction_time",
      "transaction_date"
    ],
    "negativeHeaderExamples": [
      "customer_name",
      "invoice_number",
      "ip_address",
      "status",
      "amount",
      "quantity",
      "currency_code",
      "order_id"
    ],
    "explanation": "This semantic type identifies values that represent the precise processing timestamp of a transaction as a complete date-time, including seconds. It supports common 24-hour formats (YYYY-MM-DD HH:MM:SS, YYYY-MM-DDTHH:MM:SS, M/D/YYYY HH:MM:SS, D-MMM-YYYY HH:MM:SS) and 12-hour formats with AM/PM using month names (e.g., 'Nov 5, 2023 2:23:45 PM'). The header patterns favor transaction-specific date-time fields, with a fallback to general 'date' to ensure recognition when columns are sparsely labeled.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:01:56.236457"
  },
  {
    "resultType": "generated",
    "semanticType": "BranchID",
    "description": "This field contains a positive integer that serves as an internal reference code for identifying specific branch locations. The identifier is used to track which physical or virtual branch processed the transaction or maintains the account relationship.",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9]\\d*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 2470,
    "headerPatterns": [
      {
        "regExp": "(?i).*branch[_\\s-]*(id|identifier|code|number).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "branch_id"
        ],
        "negativeExamples": [
          "branch_name"
        ]
      },
      {
        "regExp": "(?i).*(originating|issuing|servicing)[_\\s-]*branch[_\\s-]*(id|identifier|code|no|num).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "issuing_branch_code"
        ],
        "negativeExamples": [
          "servicing_branch_phone"
        ]
      },
      {
        "regExp": "(?i).*branch[_\\s-]*(no|num).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "branch_no"
        ],
        "negativeExamples": [
          "branch_count"
        ]
      },
      {
        "regExp": "(?i).*(br|brch)[_\\s-]*(id|no|num|code).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "br_id"
        ],
        "negativeExamples": [
          "br_rate"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "branch_code"
        ],
        "negativeExamples": [
          "account_number"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "7",
      "42",
      "123",
      "2501",
      "987654",
      "2147483647",
      "10000000000"
    ],
    "negativeContentExamples": [
      "0",
      "-5",
      "12.3",
      "00123",
      "123A",
      "A123",
      "1 234",
      "123-45"
    ],
    "positiveHeaderExamples": [
      "branch_id",
      "branch id",
      "branch number",
      "originating_branch_id",
      "issuing_branch_code",
      "servicing_branch_no",
      "branch identifier",
      "br_id"
    ],
    "negativeHeaderExamples": [
      "branch_name",
      "branch_address",
      "branch_phone",
      "routing_number",
      "customer_id",
      "account_number",
      "bank_branch_count",
      "parent_branch"
    ],
    "explanation": "BranchID represents a numeric internal identifier assigned to a branch, suitable for linking transactions or accounts to their processing or servicing branch. The regex restricts matches to strictly positive integers with no leading signs, letters, or separators, minimizing overlap with free-form or composite identifiers.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:01:57.649563"
  },
  {
    "resultType": "generated",
    "semanticType": "ResolutionStatus",
    "description": "Indicates the completion status of customer service actions using predefined workflow states, showing whether an issue is finished, pending, or needs further attention. Typical values are short, standardized labels used in support and case management systems.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "RESOLVED",
      "CLOSED",
      "OPEN",
      "IN PROGRESS",
      "PENDING",
      "ON HOLD",
      "REOPENED",
      "ESCALATED",
      "CANCELLED",
      "COMPLETED",
      "WAITING ON CUSTOMER",
      "WAITING ON AGENT",
      "NEEDS INFORMATION",
      "NOT REPRODUCIBLE",
      "DUPLICATE"
    ],
    "backout": "^[A-Z][A-Z -]{1,29}$",
    "confidenceThreshold": 93,
    "priority": 2570,
    "headerPatterns": [
      {
        "regExp": "(?i).*(ticket|case|issue).*resolution.*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_resolution_status"
        ],
        "negativeExamples": [
          "resolution_status"
        ]
      },
      {
        "regExp": "(?i).*resolution.*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "resolution_status"
        ],
        "negativeExamples": [
          "resolution_date"
        ]
      },
      {
        "regExp": "(?i).*(res|rsltn).*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "res_status"
        ],
        "negativeExamples": [
          "resolution_code"
        ]
      },
      {
        "regExp": "(?i).*(ticket|case|issue).*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_status"
        ],
        "negativeExamples": [
          "case_resolution"
        ]
      },
      {
        "regExp": "(?i).*status.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "status"
        ],
        "negativeExamples": [
          "state"
        ]
      }
    ],
    "positiveContentExamples": [
      "RESOLVED",
      "CLOSED",
      "OPEN",
      "IN PROGRESS",
      "PENDING",
      "ON HOLD",
      "REOPENED",
      "ESCALATED"
    ],
    "negativeContentExamples": [
      "INPROGRESS",
      "ON-HOLD",
      "RESOLUTION PENDING",
      "CLOSE",
      "OPENED",
      "RE-OPENED",
      "PENDING CUSTOMER",
      "RESOLVED!"
    ],
    "positiveHeaderExamples": [
      "ticket_resolution_status",
      "resolution_status",
      "case_resolution_status",
      "issue_resolution_status",
      "res_status",
      "case_status",
      "ticket_status",
      "rsltn_status"
    ],
    "negativeHeaderExamples": [
      "resolution_date",
      "status_reason",
      "ticket_resolution_date",
      "resolution_notes",
      "case_owner",
      "status_code",
      "closed_date",
      "issue_state"
    ],
    "explanation": "ResolutionStatus captures standardized workflow outcomes for customer service interactions, enabling consistent analytics on whether issues are finished, pending, or need additional action. Use this type to detect columns that store discrete support/case resolution states and to validate values against a controlled status vocabulary.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:02:16.509856"
  },
  {
    "resultType": "generated",
    "semanticType": "FeedbackID",
    "description": "A positive integer identifier used to track customer communications and service interactions for follow-up actions and resolution monitoring within a customer service management system.",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9][0-9]{0,12}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 2550,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|service).*feedback.*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_feedback_id"
        ],
        "negativeExamples": [
          "customer_feedback_date"
        ]
      },
      {
        "regExp": "(?i).*feedback.*(ticket|case).*(id|ref|reference).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "feedback_ticket_id"
        ],
        "negativeExamples": [
          "service_ticket_number"
        ]
      },
      {
        "regExp": "(?i).*feedback.*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "service_feedback_identifier"
        ],
        "negativeExamples": [
          "service_feedback_score"
        ]
      },
      {
        "regExp": "(?i).*feedback.*(ref|reference).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "feedback_reference_id"
        ],
        "negativeExamples": [
          "feedback_response_text"
        ]
      },
      {
        "regExp": "(?i).*(fdbk|fbk).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "fdbk_id"
        ],
        "negativeExamples": [
          "fb_id"
        ]
      },
      {
        "regExp": "(?i).*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "id"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "7",
      "58",
      "905",
      "12045",
      "999999",
      "4501234",
      "1234567890123"
    ],
    "negativeContentExamples": [
      "0",
      "-12",
      "0007",
      "123.0",
      "1,234",
      "12A45",
      "12345678901234567",
      "3 5"
    ],
    "positiveHeaderExamples": [
      "feedback_id",
      "customer_feedback_id",
      "service_feedback_identifier",
      "feedback_ticket_id",
      "feedback_reference_id",
      "cs_feedback_ref",
      "feedback_case_ref",
      "feedback_resolution_id"
    ],
    "negativeHeaderExamples": [
      "feedback_date",
      "feedback_code",
      "order_id",
      "customer_feedback",
      "fb_id",
      "complaint_id",
      "service_ticket_number",
      "user_feedback_score"
    ],
    "explanation": "FeedbackID identifies a single customer feedback record using a positive integer with no leading zeros, decimals, signs, or separators. It is intended for tracking tickets and follow-up workflows in customer service systems. Detection combines a strict numeric pattern with header cues emphasizing feedback-related identifiers.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:02:16.618743"
  },
  {
    "resultType": "generated",
    "semanticType": "LoanStatus",
    "description": "Categorical indicator of a loan's current processing or servicing position within the lifecycle. Values represent standardized workflow or account management states such as origination decisions, funding, repayment, and resolution outcomes.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "PENDING",
      "PRE-APPROVED",
      "CONDITIONALLY APPROVED",
      "APPROVED",
      "DECLINED",
      "DENIED",
      "WITHDRAWN",
      "CANCELED",
      "UNDER REVIEW",
      "PROCESSING",
      "FUNDED",
      "ACTIVE",
      "IN REPAYMENT",
      "DELINQUENT",
      "DEFAULTED",
      "CHARGED OFF",
      "FORBEARANCE",
      "DEFERRED",
      "PAID OFF",
      "CLOSED"
    ],
    "backout": "^[A-Z]+([ -][A-Z]+){0,3}$",
    "confidenceThreshold": 96,
    "priority": 2520,
    "headerPatterns": [
      {
        "regExp": "(?i).*loan[ _-]application[ _-](status|state).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "loan_application_status"
        ],
        "negativeExamples": [
          "application_status"
        ]
      },
      {
        "regExp": "(?i).*(loan|mortgage)[ _-](servicing|processing|approval)[ _-](status|state).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "mortgage_servicing_status"
        ],
        "negativeExamples": [
          "loan_amount"
        ]
      },
      {
        "regExp": "(?i).*(loan|mortgage)[ _-]account[ _-](status|state).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "mortgage_account_status"
        ],
        "negativeExamples": [
          "customer_status"
        ]
      },
      {
        "regExp": "(?i).*(loan|ln)[ _-](status|sts|state).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "ln_status"
        ],
        "negativeExamples": [
          "status_code"
        ]
      },
      {
        "regExp": "(?i).*status.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "status"
        ],
        "negativeExamples": [
          "state"
        ]
      }
    ],
    "positiveContentExamples": [
      "PENDING",
      "APPROVED",
      "UNDER REVIEW",
      "FUNDED",
      "IN REPAYMENT",
      "DELINQUENT",
      "PAID OFF",
      "CHARGED OFF"
    ],
    "negativeContentExamples": [
      "PENDING REVIEW",
      "APPROVE",
      "APPROVAL",
      "LOAN APPROVED",
      "ACTIVE - CURRENT",
      "CANCELLED",
      "DEFAULT",
      "PAID-IN-FULL"
    ],
    "positiveHeaderExamples": [
      "loan_status",
      "loan application status",
      "mortgage_account_status",
      "loan_processing_state",
      "loan_approval_status",
      "consumer_loan_status",
      "loan_servicing_status"
    ],
    "negativeHeaderExamples": [
      "application_status",
      "account_status",
      "customer_status",
      "status_code",
      "loan_type",
      "loan_decision_date",
      "loan_amount",
      "mortgage_rate"
    ],
    "explanation": "LoanStatus captures standardized labels used to describe where a loan is within its lifecycle, from origination decisions through servicing and final resolution. Use this type to recognize categorical loan workflow states and enable consistent analytics, filtering, and validation across lending datasets.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:02:39.666504"
  },
  {
    "resultType": "generated",
    "semanticType": "AccountType",
    "description": "Specifies the banking account product type using standard terminology indicating the account\u2019s purpose and operational characteristics (e.g., deposit, credit, and custody products). Values are short, human-readable labels used to determine services, interest handling, and regulatory treatment.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(checking|savings|money[ ]market|certificate[ ]of[ ]deposit|cd|time[ ]deposit|term[ ]deposit|fixed[ ]deposit|dda|escrow|brokerage|custodial|trust|mortgage|loan|line[ ]of[ ]credit|loc|heloc)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 2450,
    "headerPatterns": [
      {
        "regExp": "(?i).*account[_ ]?product[_ ]?type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_product_type"
        ],
        "negativeExamples": [
          "product_accounting_type"
        ]
      },
      {
        "regExp": "(?i).*(account|acct)[_ ]?type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "acct_type"
        ],
        "negativeExamples": [
          "account_status"
        ]
      },
      {
        "regExp": "(?i).*(deposit|loan|credit|card)[_ ]?account[_ ]?type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "deposit_account_type"
        ],
        "negativeExamples": [
          "credit_account_limit"
        ]
      },
      {
        "regExp": "(?i).*(acct|a[_ ]?c)[_ ]?(prod|product)[_ ]?type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "acct_prod_type"
        ],
        "negativeExamples": [
          "acc_product_code"
        ]
      },
      {
        "regExp": "(?i).*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "type"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Checking",
      "Savings",
      "Money Market",
      "Certificate of Deposit",
      "CD",
      "Time Deposit",
      "HELOC",
      "Line of Credit"
    ],
    "negativeContentExamples": [
      "Chequing",
      "Saving",
      "Salary Account",
      "Credit Line",
      "CDS",
      "MMDA",
      "Offset Account",
      "Cash Management"
    ],
    "positiveHeaderExamples": [
      "account_type",
      "acct_type",
      "account product type",
      "deposit_account_type",
      "acct_prod_type",
      "bank_account_type",
      "customer_account_type",
      "product_type"
    ],
    "negativeHeaderExamples": [
      "account_status",
      "account_balance",
      "product_code",
      "loan_amount",
      "account_open_date",
      "account_number",
      "customer_segment",
      "account_tier"
    ],
    "explanation": "AccountType identifies the product classification of an account (e.g., Checking, Savings, CD, Line of Credit) and is used to drive product-specific processing, pricing, and compliance logic. The regex targets common depositor, credit, and custody account labels while using word boundaries to avoid incidental matches in free text.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:02:39.676145"
  },
  {
    "resultType": "generated",
    "semanticType": "CardType",
    "description": "This field identifies the card issuer network using standard payment industry terminology that indicates processing capabilities and acceptance networks. It determines the transaction routing and settlement processes for card-based payments.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "VISA",
      "MASTERCARD",
      "AMERICAN EXPRESS",
      "DISCOVER",
      "JCB",
      "UNIONPAY",
      "DINERS CLUB",
      "MAESTRO",
      "INTERAC",
      "RUPAY",
      "MIR",
      "ELO",
      "HIPERCARD",
      "UATP",
      "TROY",
      "VERVE",
      "BANCONTACT",
      "DANKORT",
      "CARTES BANCAIRES",
      "LASER"
    ],
    "backout": "^[A-Z][A-Z ]{2,24}$",
    "confidenceThreshold": 97,
    "priority": 2530,
    "headerPatterns": [
      {
        "regExp": "(?i).*(payment|credit|debit).*card.*(network|scheme|brand).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "payment_card_network"
        ],
        "negativeExamples": [
          "card_expiration_date"
        ]
      },
      {
        "regExp": "(?i).*card.*(network|scheme|brand).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "card_network"
        ],
        "negativeExamples": [
          "network_speed"
        ]
      },
      {
        "regExp": "(?i).*(issuer|acceptance).*network.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issuer_network"
        ],
        "negativeExamples": [
          "network_id"
        ]
      },
      {
        "regExp": "(?i).*card.*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "card_type"
        ],
        "negativeExamples": [
          "account_type"
        ]
      },
      {
        "regExp": "(?i).*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "type"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "VISA",
      "MASTERCARD",
      "AMERICAN EXPRESS",
      "DISCOVER",
      "JCB",
      "UNIONPAY",
      "DINERS CLUB",
      "MAESTRO"
    ],
    "negativeContentExamples": [
      "AMEX",
      "MASTER CARD",
      "VISA DEBIT",
      "DISCOVER CARD",
      "UNION PAY",
      "DINERSCLUB",
      "J C B",
      "AMERICANEXPRESS"
    ],
    "positiveHeaderExamples": [
      "card_network",
      "payment_card_brand",
      "card_scheme",
      "issuer_network",
      "card_type",
      "card_brand",
      "payment_network",
      "card_acceptance_network"
    ],
    "negativeHeaderExamples": [
      "network_speed",
      "account_type",
      "transaction_code",
      "customer_name",
      "card_number",
      "expiry_date",
      "iso_currency_code",
      "email_address"
    ],
    "explanation": "This semantic type identifies standardized card issuer networks/brands used for routing and settlement of payment card transactions. It is appropriate for fields that specify the acceptance network or scheme of a card (e.g., VISA, MASTERCARD), enabling consistent classification and validation across payment datasets.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:02:39.806264"
  },
  {
    "resultType": "generated",
    "semanticType": "LoanAmount",
    "description": "This field represents the original loan principal expressed as a decimal value in the institution's base currency. It reflects the total amount disbursed to the customer before interest, fees, or repayments are considered.",
    "pluginType": "regex",
    "regexPattern": "\\b([1-9]\\d{0,2}(,\\d{3})+|\\d+)(\\.\\d{2})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 2490,
    "headerPatterns": [
      {
        "regExp": "(?i).*(original|orig).*(loan|principal).*(amount|amt).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "original_loan_amount"
        ],
        "negativeExamples": [
          "original_loan_date"
        ]
      },
      {
        "regExp": "(?i).*(loan).*(principal|amount|amt).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "loan_principal"
        ],
        "negativeExamples": [
          "loan_status"
        ]
      },
      {
        "regExp": "(?i).*disburs.*(amount|amt).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "disbursed_amount"
        ],
        "negativeExamples": [
          "disbursement_date"
        ]
      },
      {
        "regExp": "(?i).*(loan|ln).*(amt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "loan_amt"
        ],
        "negativeExamples": [
          "ln_count"
        ]
      },
      {
        "regExp": "(?i).*(number|num).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "25000",
      "25000.00",
      "1,500",
      "1,500.50",
      "987654321.00",
      "750.25",
      "1000000",
      "12,345,678.90"
    ],
    "negativeContentExamples": [
      "25,00",
      "1.234,56",
      "$1,000.00",
      "-1500.00",
      "1500.5",
      "1,500.000",
      "1 500.00",
      "1,50,0.00"
    ],
    "positiveHeaderExamples": [
      "loan_amount",
      "original_loan_amount",
      "principal_amount",
      "loan_principal",
      "disbursed_amount",
      "amount_disbursed",
      "orig_principal",
      "loan_amt"
    ],
    "negativeHeaderExamples": [
      "loan_date",
      "principal_balance",
      "interest_rate",
      "currency_code",
      "loan_term",
      "payment_amount",
      "credit_limit",
      "invoice_amount"
    ],
    "explanation": "CURRENCY.LOAN_AMOUNT identifies numeric monetary amounts representing the original principal disbursed for a loan. It matches positive numbers with optional thousands separators and an optional two-digit decimal part (e.g., 1,500.00 or 25000). This is useful for validating and profiling financial datasets where the base-currency loan principal is stored as a numeric field without currency symbols.\nThe header patterns prioritize explicit mentions of original loan principal and disbursement context, then abbreviations, and finally a primitive numeric fallback. The content pattern intentionally excludes negative values, currency symbols, and malformed separators to reduce ambiguity with other numeric fields.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:03:21.236307"
  },
  {
    "resultType": "generated",
    "semanticType": "TransactionAmount",
    "description": "A decimal numeric amount representing the financial value of a transaction in the system's base currency. Supports whole numbers or decimals with up to two fractional digits for cents.",
    "pluginType": "regex",
    "regexPattern": "\\b-?(0|[1-9]\\d*)(\\.\\d{1,2})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 2410,
    "headerPatterns": [
      {
        "regExp": "(?i).*(transaction|txn).*(amount|amt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "transaction_amount"
        ],
        "negativeExamples": [
          "transaction_count"
        ]
      },
      {
        "regExp": "(?i).*(transaction|txn).*(value|price|charge|total).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "total_transaction_value"
        ],
        "negativeExamples": [
          "transaction_status"
        ]
      },
      {
        "regExp": "(?i).*(amount|amt).*(transaction|txn).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "amount_transaction"
        ],
        "negativeExamples": [
          "amount_due"
        ]
      },
      {
        "regExp": "(?i).*(amount|amt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "amount"
        ],
        "negativeExamples": [
          "discount"
        ]
      },
      {
        "regExp": "(?i).*(number|num).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "id"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "12",
      "12.3",
      "12.30",
      "-5",
      "-0.99",
      "1000000",
      "12345.67"
    ],
    "negativeContentExamples": [
      "12.345",
      "1,234.56",
      "$12.34",
      ".99",
      "12.",
      "00.50",
      "+12.34",
      "12-34"
    ],
    "positiveHeaderExamples": [
      "transaction_amount",
      "Transaction Amount",
      "txn_amt",
      "total_transaction_value",
      "transaction_price",
      "amount",
      "amount_transaction"
    ],
    "negativeHeaderExamples": [
      "transaction_count",
      "transaction_status",
      "approval_date",
      "currency_code",
      "unit_price",
      "customer_id",
      "discount_percent"
    ],
    "explanation": "This semantic type identifies numeric transaction amounts expressed in a base currency without currency symbols, allowing integers or decimals with up to two fractional digits. It is useful for classifying fields that hold monetary amounts such as debits, credits, totals, or line amounts within transactional datasets.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:03:34.627582"
  },
  {
    "resultType": "generated",
    "semanticType": "FeedbackType",
    "description": "This field categorizes customer communications using standard service terminology that indicates the purpose and urgency of the feedback. It helps prioritize responses and route communications to appropriate resolution teams.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "COMPLAINT",
      "COMPLIMENT",
      "INQUIRY",
      "QUESTION",
      "REQUEST",
      "BUG REPORT",
      "FEATURE REQUEST",
      "OUTAGE REPORT",
      "ESCALATION",
      "URGENT ESCALATION",
      "CANCELLATION REQUEST",
      "REFUND REQUEST",
      "BILLING ISSUE",
      "ACCOUNT ISSUE",
      "SERVICE FEEDBACK",
      "PRAISE"
    ],
    "backout": "^[A-Z][A-Z ]{2,29}$",
    "confidenceThreshold": 94,
    "priority": 2560,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|client).*[ _-]feedback[ _-]?type.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "customer_feedback_type"
        ],
        "negativeExamples": [
          "customer_feedback_date"
        ]
      },
      {
        "regExp": "(?i).*service.*feedback[ _-]?type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "service feedback type"
        ],
        "negativeExamples": [
          "service feedback status"
        ]
      },
      {
        "regExp": "(?i).*(feedback|case).*(class|category|segment).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "feedback_category"
        ],
        "negativeExamples": [
          "product_category"
        ]
      },
      {
        "regExp": "(?i).*(feedback|inquiry|complaint).*(kind|type).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "complaint_type"
        ],
        "negativeExamples": [
          "complaint_count"
        ]
      },
      {
        "regExp": "(?i).*type.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "type"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "COMPLAINT",
      "INQUIRY",
      "BUG REPORT",
      "FEATURE REQUEST",
      "OUTAGE REPORT",
      "ESCALATION",
      "REFUND REQUEST",
      "BILLING ISSUE"
    ],
    "negativeContentExamples": [
      "COMPLAINTS",
      "BUGREPORT",
      "FEATURE-REQUEST",
      "OUTAGE",
      "URGENT",
      "BILLING QUESTION",
      "ACCOUNT ISSUES",
      "CANCEL REQUEST"
    ],
    "positiveHeaderExamples": [
      "customer_feedback_type",
      "service feedback type",
      "feedback_category",
      "complaint_type",
      "escalation type",
      "case type",
      "feedback classification",
      "inquiry_type"
    ],
    "negativeHeaderExamples": [
      "customer_feedback_date",
      "service feedback status",
      "product_category",
      "complaint_count",
      "case_id",
      "feedback_channel",
      "issue_severity",
      "response_time"
    ],
    "explanation": "FeedbackType is a controlled taxonomy of labels used to classify the purpose and urgency of customer communications (for example, complaint, inquiry, outage report, or urgent escalation). It enables consistent routing, prioritization, and reporting across support and service workflows. Use this type when the dataset uses a fixed set of categorical terms rather than free-form text.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:03:44.318725"
  },
  {
    "resultType": "generated",
    "semanticType": "CreditLimit",
    "description": "Approved credit ceiling expressed as a decimal monetary value in the account's base currency. It represents the maximum outstanding balance allowed before credit privileges may be suspended or restricted.",
    "pluginType": "regex",
    "regexPattern": "\\b(\\d{1,3}(,\\d{3})+|\\d+)\\.\\d{2}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 2540,
    "headerPatterns": [
      {
        "regExp": "(?i).*credit.*limit.*amount.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "credit_limit_amount"
        ],
        "negativeExamples": [
          "annual_credit_limit"
        ]
      },
      {
        "regExp": "(?i).*approved.*credit.*limit.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "approved_credit_limit"
        ],
        "negativeExamples": [
          "credit_limit"
        ]
      },
      {
        "regExp": "(?i).*credit.*ceiling.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "account_credit_ceiling"
        ],
        "negativeExamples": [
          "ceiling_height"
        ]
      },
      {
        "regExp": "(?i).*(cred|cr).*limit.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "cr_limit"
        ],
        "negativeExamples": [
          "credit_balance"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "number"
        ],
        "negativeExamples": [
          "amount"
        ]
      }
    ],
    "positiveContentExamples": [
      "0.00",
      "75.25",
      "5000.00",
      "12,345.67",
      "250,000.75",
      "1,000,000.00",
      "12500.50",
      "999,999,999.99"
    ],
    "negativeContentExamples": [
      "-5000.00",
      "5000",
      "5,000",
      "1.234,56",
      "1 000.00",
      "$5000.00",
      "1000.0",
      "12345.678"
    ],
    "positiveHeaderExamples": [
      "credit_limit",
      "credit_limit_amount",
      "approved_credit_limit",
      "account_credit_ceiling",
      "maximum_credit_amount",
      "credit_line_limit",
      "credit_limit_value",
      "max_credit_limit"
    ],
    "negativeHeaderExamples": [
      "credit_balance",
      "available_credit",
      "max_transaction_amount",
      "purchase_limit",
      "loan_amount",
      "credit_rating",
      "currency_code",
      "invoice_number"
    ],
    "explanation": "This semantic type captures monetary credit limit values recorded as decimal numbers with two fractional digits, optionally using thousands separators. It is useful for classifying fields that define the maximum permitted outstanding balance for an account in its base currency.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:03:45.256882"
  },
  {
    "resultType": "generated",
    "semanticType": "AccountBalanceAfterTransaction",
    "description": "This field shows the updated balance that reflects the impact of the current transaction on the account's available funds. It represents the new balance state after the transaction amount has been applied according to the transaction type.",
    "pluginType": "regex",
    "regexPattern": "([-+]?\\s?[$\u20ac\u00a3\u00a5]\\s?(\\d{1,3}(,\\d{3})*|\\d+)(\\.\\d{2})?)|([-+]?(\\d{1,3}(,\\d{3})*|\\d+)\\.\\d{2})|([-+]?\\s?(\\d{1,3}(,\\d{3})*|\\d+)(\\.\\d{2})?\\s?(USD|EUR|GBP|JPY|AUD|CAD|CHF|CNY|INR|NZD))\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 2460,
    "headerPatterns": [
      {
        "regExp": "(?i).*(account|acct).*balance.*after.*transaction.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_balance_after_transaction"
        ],
        "negativeExamples": [
          "account_balance_before_transaction"
        ]
      },
      {
        "regExp": "(?i).*(post|posted).*transaction.*balance.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "posted_transaction_balance"
        ],
        "negativeExamples": [
          "transaction_posted_flag"
        ]
      },
      {
        "regExp": "(?i).*balance.*after.*(txn|transaction).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "balance_after_txn"
        ],
        "negativeExamples": [
          "starting_balance"
        ]
      },
      {
        "regExp": "(?i).*(avail|available).*balance.*post.*txn.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "avail_balance_post_txn"
        ],
        "negativeExamples": [
          "available_balance_hold"
        ]
      },
      {
        "regExp": "(?i).*(acct|account).*bal.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "acct_bal"
        ],
        "negativeExamples": [
          "account_number"
        ]
      },
      {
        "regExp": "(?i).*balance.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "balance"
        ],
        "negativeExamples": [
          "amount"
        ]
      }
    ],
    "positiveContentExamples": [
      "$1,234.56",
      "-$25.00",
      "12,345.67",
      "987.65 USD",
      "\u20ac2,500.00",
      "+\u00a3150.00",
      "0.00",
      "7500.00 INR"
    ],
    "negativeContentExamples": [
      "($1,234.56)",
      "2500",
      "1,23,456.78",
      "USD 123.45",
      "$12.3",
      "1.234,56",
      "1234,56",
      "GBP100.00"
    ],
    "positiveHeaderExamples": [
      "account_balance_after_transaction",
      "post_transaction_balance",
      "avail_balance_after_txn",
      "balance_after_transaction",
      "ending_balance_after_posting",
      "acct_bal_post_txn",
      "posted_transaction_balance"
    ],
    "negativeHeaderExamples": [
      "account_balance_before_transaction",
      "transaction_amount",
      "available_balance_hold",
      "starting_balance",
      "credit_limit",
      "account_number",
      "transaction_count"
    ],
    "explanation": "Identifies currency-like numeric values representing the balance after a specific transaction is applied. Supports amounts with optional sign, currency symbols, thousands separators, fixed two-decimal precision, or a trailing common 3-letter currency code. Designed to differentiate post-transaction balances from other monetary fields using specific header patterns and a moderately strict value format.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:04:12.323835"
  },
  {
    "resultType": "generated",
    "semanticType": "LoanType",
    "description": "This field specifies the loan product classification using standard lending terminology that indicates the intended use and risk characteristics. It determines the applicable interest rates, repayment terms, and collateral requirements for the credit facility.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "MORTGAGE",
      "AUTO LOAN",
      "PERSONAL LOAN",
      "STUDENT LOAN",
      "BUSINESS LOAN",
      "SMALL BUSINESS LOAN",
      "HOME EQUITY LOAN",
      "HOME EQUITY LINE OF CREDIT",
      "HELOC",
      "CREDIT CARD",
      "BRIDGE LOAN",
      "CONSTRUCTION LOAN",
      "FHA LOAN",
      "VA LOAN",
      "JUMBO LOAN",
      "ADJUSTABLE-RATE MORTGAGE",
      "FIXED-RATE MORTGAGE",
      "BALLOON LOAN",
      "DEBT CONSOLIDATION LOAN",
      "MICROLOAN",
      "INSTALLMENT LOAN",
      "PAYDAY LOAN",
      "REVOLVING CREDIT",
      "SECURED LOAN",
      "UNSECURED LOAN"
    ],
    "backout": "^[A-Z][A-Z -]{2,60}$",
    "confidenceThreshold": 96,
    "priority": 2500,
    "headerPatterns": [
      {
        "regExp": "(?i).*loan.*product.*type.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "loan_product_type"
        ],
        "negativeExamples": [
          "loan_product_name"
        ]
      },
      {
        "regExp": "(?i).*credit.*facility.*type.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "credit_facility_type"
        ],
        "negativeExamples": [
          "credit_facility_id"
        ]
      },
      {
        "regExp": "(?i).*loan.*prod.*type.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "loan_prod_type"
        ],
        "negativeExamples": [
          "loan_product_code"
        ]
      },
      {
        "regExp": "(?i).*loan.*class.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "loan_classification"
        ],
        "negativeExamples": [
          "class_type"
        ]
      },
      {
        "regExp": "(?i).*type.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "type"
        ],
        "negativeExamples": [
          "category"
        ]
      }
    ],
    "positiveContentExamples": [
      "MORTGAGE",
      "AUTO LOAN",
      "PERSONAL LOAN",
      "HOME EQUITY LOAN",
      "HELOC",
      "FIXED-RATE MORTGAGE",
      "SMALL BUSINESS LOAN",
      "DEBT CONSOLIDATION LOAN"
    ],
    "negativeContentExamples": [
      "Auto",
      "Vehicle Loan",
      "Mortgage Loan",
      "5/1 ARM",
      "Fixed Rate Mortgage",
      "Unsecured",
      "HELOQ",
      "Personal Lending"
    ],
    "positiveHeaderExamples": [
      "loan_type",
      "loan product type",
      "credit_facility_type",
      "loan classification",
      "lending_product_type",
      "loan prod type",
      "loan class",
      "loan category"
    ],
    "negativeHeaderExamples": [
      "loan_amount",
      "interest_rate",
      "loan_id",
      "product_type",
      "loan_balance",
      "payment_type",
      "loan term",
      "facility_code"
    ],
    "explanation": "LoanType captures standardized classifications of lending products used by financial institutions to drive pricing, underwriting, collateralization, and repayment structures. It helps distinguish secured vs. unsecured credit, installment vs. revolving structures, and purpose-driven loan categories for analytics, risk, and reporting.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:06:18.500552"
  },
  {
    "resultType": "generated",
    "semanticType": "AccountOpeningDate",
    "description": "This field records the original account creation date using various datetime formats that include the complete date information. It serves as a reference point for calculating account tenure and relationship duration with the bank.",
    "pluginType": "regex",
    "regexPattern": "\\b(([12][0-9]{3}[-/.](0?[1-9]|1[0-2])[-/.](0?[1-9]|[12][0-9]|3[01])[ T][0-2][0-9]:[0-5][0-9](:[0-5][0-9])?)|([12][0-9]{3}[-/.](0?[1-9]|1[0-2])[-/.](0?[1-9]|[12][0-9]|3[01]))|((0?[1-9]|[12][0-9]|3[01])[-/.](0?[1-9]|1[0-2])[-/.][12][0-9]{3})|((0?[1-9]|1[0-2])[-/.](0?[1-9]|[12][0-9]|3[01])[-/.][12][0-9]{3})|((Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec)[ ]{1,2}([0-3]?[0-9]),[ ]{1,2}[12][0-9]{3})|(([0-3]?[0-9])[ ]{1,2}(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Sept|Oct|Nov|Dec)[ ]{1,2}[12][0-9]{3}))\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 92,
    "priority": 2440,
    "headerPatterns": [
      {
        "regExp": "(?i).*account.*opening.*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "account_opening_date"
        ],
        "negativeExamples": [
          "last_updated_date"
        ]
      },
      {
        "regExp": "(?i).*(original|initial).*account.*date.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "original_account_date"
        ],
        "negativeExamples": [
          "account_status"
        ]
      },
      {
        "regExp": "(?i).*(acct|account).*open.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "acct_opened_on"
        ],
        "negativeExamples": [
          "account_close_date"
        ]
      },
      {
        "regExp": "(?i).*(open|opened).*date.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "opened_date"
        ],
        "negativeExamples": [
          "opening_balance"
        ]
      },
      {
        "regExp": "(?i).*date.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "date"
        ],
        "negativeExamples": [
          "time"
        ]
      }
    ],
    "positiveContentExamples": [
      "2017-04-09T08:00:00",
      "2020-01-15",
      "2019/12/31",
      "2023.03.01",
      "07/04/2021",
      "4/7/2021",
      "Jul 5, 2018",
      "5 Jul 2018"
    ],
    "negativeContentExamples": [
      "2021-13-01",
      "2021-07",
      "07/2021",
      "20210731",
      "31-04-21",
      "00/10/2019",
      "2019-00-10",
      "2018 Jul 05"
    ],
    "positiveHeaderExamples": [
      "account_opening_date",
      "opened_on",
      "account_open_date",
      "original_account_date",
      "acct_opened_date",
      "account_start_date",
      "customer_account_open_date",
      "date_opened"
    ],
    "negativeHeaderExamples": [
      "account_closing_date",
      "last_updated_date",
      "customer_birth_date",
      "transaction_date",
      "account_status",
      "opening_balance",
      "account_open_flag",
      "account_opening_branch"
    ],
    "explanation": "Identifies values representing the date an account was originally opened, across common numeric and month-name formats, optionally including a time in ISO-style for year-first formats. It is useful for tenure calculations, cohort analysis, and determining the start of a customer relationship. Header patterns prioritize explicit account-opening context while the regex ensures complete date components are present.",
    "description_pattern": "P2",
    "generated_at": "2025-08-10T17:12:50.022482"
  }
]