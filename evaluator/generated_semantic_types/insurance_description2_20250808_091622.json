{
  "dataset": "insurance",
  "description_number": 2,
  "timestamp": "20250808_093413",
  "generated_types": [
    {
      "resultType": "generated",
      "semanticType": "ID",
      "description": "Sequential numeric identifier used to uniquely distinguish individual insurance contracts within a database system. Consists entirely of positive whole numbers with no letters, symbols, or decimal points.",
      "pluginType": "regex",
      "regexPattern": "[1-9][0-9]{0,9}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "42",
        "1001",
        "50000",
        "999999",
        "12345678",
        "7",
        "2024001"
      ],
      "negativeContentExamples": [
        "0",
        "-123",
        "12.5",
        "ABC123",
        "123-456",
        "1,234",
        "01234",
        "123.0"
      ],
      "positiveHeaderExamples": [
        "insurance_contract_id",
        "contract_id",
        "policy_id",
        "contract_number",
        "policy_num",
        "ins_contract_id",
        "contract_identifier",
        "policy_identifier"
      ],
      "negativeHeaderExamples": [
        "customer_id",
        "claim_id",
        "agent_id",
        "contract_date",
        "policy_amount",
        "contract_type",
        "insurance_premium",
        "policy_status"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*contract.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_contract_id"
          ],
          "negativeExamples": [
            "insurance_claim_id"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*contract.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "contract_id"
          ],
          "negativeExamples": [
            "contractor_id"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_id"
          ],
          "negativeExamples": [
            "policy_type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*contract.*num.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "contract_number"
          ],
          "negativeExamples": [
            "contact_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*num.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_num"
          ],
          "negativeExamples": [
            "policy_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(id|number|num).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "id"
          ],
          "negativeExamples": [
            "name"
          ],
          "rationale": null
        }
      ],
      "priority": 3100,
      "explanation": "This semantic type identifies sequential numeric identifiers specifically used for insurance contracts. These identifiers are typically auto-generated positive integers that serve as primary keys in insurance database systems. The pattern excludes leading zeros (which might indicate formatted codes rather than sequential IDs), negative numbers, and any non-numeric characters. This type is commonly found in insurance management systems, policy databases, and contract tracking applications where each insurance contract needs a unique numeric identifier for database operations and business processes.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:16:55.742146"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_start_contract",
      "description": "This type captures the effective start date of an insurance contract in various standard date formats. The date must represent a valid calendar date and can include both date and time components depending on system requirements.",
      "pluginType": "regex",
      "regexPattern": "(?:\\d{4}[-/]\\d{1,2}[-/]\\d{1,2}(?:[T ]\\d{1,2}:\\d{2}(?::\\d{2})?(?:\\.\\d{3})?(?:[+-]\\d{2}:?\\d{2}|Z)?)?|\\d{1,2}[-/]\\d{1,2}[-/]\\d{4}(?:[T ]\\d{1,2}:\\d{2}(?::\\d{2})?(?:\\.\\d{3})?(?:[+-]\\d{2}:?\\d{2}|Z)?)?|\\d{1,2}-[A-Za-z]{3}-\\d{4}(?:[T ]\\d{1,2}:\\d{2}(?::\\d{2})?(?:\\.\\d{3})?(?:[+-]\\d{2}:?\\d{2}|Z)?)?)",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2024-01-15",
        "01/15/2024",
        "2024-03-22T09:30:00",
        "12/31/2023 23:59:59",
        "2024-06-01T14:30:00.000Z",
        "15-Jan-2024",
        "2024/07/04",
        "03-15-2024 08:00:00"
      ],
      "negativeContentExamples": [],
      "positiveHeaderExamples": [
        "insurance_effective_date",
        "policy_effective_date",
        "coverage_start_date",
        "effective_date",
        "eff_dt",
        "policy_eff_date",
        "coverage_effective_dt",
        "ins_effective_date"
      ],
      "negativeHeaderExamples": [
        "expiration_date",
        "termination_date",
        "renewal_date",
        "cancellation_date",
        "birth_date",
        "created_date",
        "modified_date",
        "payment_due_date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*effective.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_effective_date"
          ],
          "negativeExamples": [
            "insurance_expiration_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*effective.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_effective_date"
          ],
          "negativeExamples": [
            "policy_renewal_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*coverage.*start.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "coverage_start_date"
          ],
          "negativeExamples": [
            "coverage_end_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*effective.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "effective_date"
          ],
          "negativeExamples": [
            "termination_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*eff.*dt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "eff_dt"
          ],
          "negativeExamples": [
            "exp_dt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3110,
      "explanation": "This semantic type identifies the effective start date of insurance contracts and policies. It's specifically designed to capture dates that mark when insurance coverage begins, distinguishing them from other important insurance dates like expiration, renewal, or cancellation dates. The type supports various standard date formats commonly used in insurance systems, including ISO formats, US formats, and formats with time components. This is crucial for insurance data processing where the effective date determines coverage periods, premium calculations, and claim eligibility.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:17:32.016570"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_last_renewal",
      "description": "This type identifies the timestamp of the most recent policy renewal transaction within the insurance system. The value represents a complete date that marks when the last renewal process was completed successfully.",
      "pluginType": "regex",
      "regexPattern": "\\d{4}[-/]\\d{1,2}[-/]\\d{1,2}|\\d{1,2}[-/]\\d{1,2}[-/]\\d{4}|\\d{4}\\d{2}\\d{2}|\\d{2}\\d{2}\\d{4}|\\d{1,2}[-/]\\w{3}[-/]\\d{4}|\\w{3}[-/]\\d{1,2}[-/]\\d{4}|\\d{4}[-/]\\w{3}[-/]\\d{1,2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2024-03-15",
        "03/15/2024",
        "15-Mar-2024",
        "2023-12-01",
        "01/01/2024",
        "20240315",
        "2024/06/30",
        "30-Jun-2023"
      ],
      "negativeContentExamples": [
        "Mar-2024",
        "2024",
        "15:30:45",
        "PENDING"
      ],
      "positiveHeaderExamples": [
        "policy_renewal_date",
        "last_renewal_date",
        "renewal_transaction_date",
        "most_recent_renewal",
        "renewal_completion_date",
        "renewal_dt",
        "policy_renewed_on",
        "latest_renewal_timestamp"
      ],
      "negativeHeaderExamples": [
        "policy_expiration_date",
        "next_renewal_date",
        "policy_start_date",
        "claim_date",
        "premium_amount",
        "policy_number",
        "renewal_count",
        "cancellation_date"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policy.*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_renewal_date"
          ],
          "negativeExamples": [
            "policy_expiration_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*last.*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "last_renewal_date"
          ],
          "negativeExamples": [
            "next_renewal_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*renewal.*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "renewal_transaction_date"
          ],
          "negativeExamples": [
            "claim_transaction_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*renewal.*dt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "renewal_dt"
          ],
          "negativeExamples": [
            "expiry_dt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*renewal.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "renewal"
          ],
          "negativeExamples": [
            "cancellation"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3120,
      "explanation": "This semantic type identifies dates that represent when insurance policies were most recently renewed. It's specifically designed for insurance systems where tracking the completion of renewal transactions is critical for policy management, billing cycles, and compliance reporting. The pattern matches various common date formats including ISO format (YYYY-MM-DD), US format (MM/DD/YYYY), European format (DD/MM/YYYY), and abbreviated month formats. This type helps distinguish renewal dates from other important insurance dates like policy start dates, expiration dates, or claim dates, ensuring accurate identification of when the last successful renewal process occurred.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:18:09.576980"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_next_renewal",
      "description": "This type specifies the upcoming renewal deadline for an active insurance policy in standard date format. The date represents when the current coverage period ends and renewal action is required.",
      "pluginType": "regex",
      "regexPattern": "\\d{1,2}[/-]\\d{1,2}[/-]\\d{4}|\\d{4}[/-]\\d{1,2}[/-]\\d{1,2}|\\d{1,2}[/-]\\d{1,2}[/-]\\d{2}|\\d{2}[/-]\\d{2}[/-]\\d{4}|\\d{4}-\\d{2}-\\d{2}|\\d{2}-\\d{2}-\\d{4}|\\d{1,2}/\\d{1,2}/\\d{4}|\\d{4}/\\d{1,2}/\\d{1,2}|\\b\\d{1,2}\\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s+\\d{4}\\b|\\b(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s+\\d{1,2},?\\s+\\d{4}\\b|\\b\\d{1,2}-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-\\d{4}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "12/15/2024",
        "2024-03-22",
        "01/30/2025",
        "2024/06/15",
        "15 Mar 2024",
        "June 30, 2024",
        "03-15-2024",
        "2025-01-01"
      ],
      "negativeContentExamples": [
        "invalid date"
      ],
      "positiveHeaderExamples": [
        "insurance_renewal_date",
        "policy_renewal_dt",
        "coverage_renewal_date",
        "renewal_deadline",
        "auto_insurance_renewal",
        "health_policy_renewal_date",
        "renewal_due_date",
        "next_renewal_date"
      ],
      "negativeHeaderExamples": [
        "policy_start_date",
        "insurance_expiry_date",
        "claim_date",
        "premium_due_date",
        "policy_issue_date",
        "cancellation_date",
        "effective_date",
        "birth_date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_renewal_date"
          ],
          "negativeExamples": [
            "insurance_start_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_renewal_date"
          ],
          "negativeExamples": [
            "policy_issue_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*coverage.*renewal.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "coverage_renewal_dt"
          ],
          "negativeExamples": [
            "coverage_start_dt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*renewal.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "renewal_date"
          ],
          "negativeExamples": [
            "expiry_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*renewal.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "renewal"
          ],
          "negativeExamples": [
            "cancellation"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3130,
      "explanation": "The INSURANCE.RENEWAL_DATE semantic type identifies dates that represent when an insurance policy needs to be renewed. This is distinct from other insurance-related dates like policy start dates, expiry dates, or claim dates. The renewal date is specifically the deadline by which the policyholder must take action to continue their coverage. This type is commonly found in insurance databases, customer management systems, and renewal notification systems. The pattern recognizes various standard date formats including MM/DD/YYYY, YYYY-MM-DD, and text-based formats with month names, ensuring compatibility with different data sources and regional date conventions.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:18:42.363949"
    },
    {
      "resultType": "generated",
      "semanticType": "Distribution_channel",
      "description": "Numeric codes representing insurance product distribution methods and sales channels, including direct sales, brokers, agents, and other distribution networks",
      "pluginType": "regex",
      "regexPattern": "\\d{1,3}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "2",
        "3",
        "10",
        "25",
        "99",
        "101",
        "250"
      ],
      "negativeContentExamples": [
        "Direct Sales",
        "BROKER",
        "Agent Network",
        "1.5",
        "A1",
        "CH-001",
        "1000",
        "-1"
      ],
      "positiveHeaderExamples": [
        "distribution_channel",
        "sales_channel_code",
        "channel_id",
        "dist_channel",
        "insurance_channel",
        "channel_type_code",
        "distribution_method",
        "sales_method_id"
      ],
      "negativeHeaderExamples": [
        "channel_name",
        "distribution_cost",
        "sales_amount",
        "channel_description",
        "marketing_channel",
        "communication_channel",
        "tv_channel",
        "product_code"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*distribution.*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_distribution_channel_code"
          ],
          "negativeExamples": [
            "insurance_product_type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*distribution.*channel.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "distribution_channel_code"
          ],
          "negativeExamples": [
            "marketing_channel_name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*sales.*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "sales_channel_id"
          ],
          "negativeExamples": [
            "sales_territory"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(dist|distr).*ch.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "dist_ch_code"
          ],
          "negativeExamples": [
            "discount_rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*channel.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "channel"
          ],
          "negativeExamples": [
            "change_date"
          ],
          "rationale": null
        }
      ],
      "priority": 3140,
      "explanation": "This semantic type identifies numeric codes used in the insurance industry to classify distribution channels and sales methods. These codes typically range from 1-3 digits and represent standardized categories such as direct sales (often code 1), independent agents (code 2), brokers (code 3), bancassurance (code 10), online sales (code 25), etc. The numeric format allows for efficient data processing and reporting while maintaining consistency across insurance systems. This type is commonly found in policy administration systems, sales reporting databases, and regulatory filings where distribution method tracking is required.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:19:17.064891"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_birth",
      "description": "Records the date of birth for the person who holds the insurance policy in various accepted date formats. Essential for age verification and risk assessment calculations in insurance contexts.",
      "pluginType": "regex",
      "regexPattern": "(?:0?[1-9]|1[0-2])[\\/\\-\\.](0?[1-9]|[12][0-9]|3[01])[\\/\\-\\.](?:19|20)\\d{2}|(?:19|20)\\d{2}[\\/\\-\\.](0?[1-9]|1[0-2])[\\/\\-\\.](0?[1-9]|[12][0-9]|3[01])|(?:0?[1-9]|[12][0-9]|3[01])[\\/\\-\\.](0?[1-9]|1[0-2])[\\/\\-\\.](?:19|20)\\d{2}|(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s+(?:0?[1-9]|[12][0-9]|3[01]),?\\s+(?:19|20)\\d{2}|(?:0?[1-9]|[12][0-9]|3[01])\\s+(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\\s+(?:19|20)\\d{2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "03/15/1985",
        "1975-12-08",
        "12/25/1990",
        "January 15, 1982",
        "15 Mar 1978",
        "07-04-1965",
        "Nov 22, 1988",
        "1992.06.30"
      ],
      "negativeContentExamples": [
        "15/25/1985",
        "1985-13-08",
        "32/12/1990",
        "1899-12-25",
        "03/15/85",
        "March 32, 1980",
        "13-15-1975"
      ],
      "positiveHeaderExamples": [
        "policyholder_date_of_birth",
        "primary_insured_dob",
        "policy_holder_birth_date",
        "insured_person_dob",
        "main_policyholder_birthdate",
        "holder_birth_dt",
        "policyholder_dob",
        "insured_birth_date"
      ],
      "negativeHeaderExamples": [
        "beneficiary_birth_date",
        "dependent_dob",
        "policy_effective_date",
        "claim_date",
        "spouse_birth_date",
        "child_dob",
        "policy_expiry_date",
        "coverage_start_date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policyholder.*birth.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policyholder_birth_date"
          ],
          "negativeExamples": [
            "beneficiary_birth_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*holder.*dob.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_holder_dob"
          ],
          "negativeExamples": [
            "dependent_dob"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insured.*birth.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insured_birth_date"
          ],
          "negativeExamples": [
            "claim_birth_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*primary.*insured.*dob.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "primary_insured_dob"
          ],
          "negativeExamples": [
            "secondary_insured_dob"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*holder.*birth.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "holder_birth_date"
          ],
          "negativeExamples": [
            "account_birth_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*birth.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "birth_date"
          ],
          "negativeExamples": [
            "start_date"
          ],
          "rationale": null
        }
      ],
      "priority": 3150,
      "explanation": "This semantic type specifically identifies date of birth information for insurance policyholders, distinguishing it from other birth dates in the dataset (such as beneficiaries, dependents, or spouses). It supports multiple common date formats including MM/DD/YYYY, YYYY-MM-DD, DD/MM/YYYY, and various text-based formats with month names. The type is crucial for insurance systems where accurate age calculation is essential for premium calculations, eligibility verification, and risk assessment. The pattern ensures dates fall within reasonable birth year ranges (1900-2099) and validates proper day/month combinations to avoid invalid dates.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:19:55.215475"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_driving_licence",
      "description": "This type stores the original issuance date of the driver's license for the insured person in standard date format. The date is used to calculate driving experience and assess insurance risk factors.",
      "pluginType": "regex",
      "regexPattern": "(?:19|20)\\d{2}[-/](0[1-9]|1[0-2])[-/](0[1-9]|[12]\\d|3[01])|(?:0[1-9]|1[0-2])[-/](0[1-9]|[12]\\d|3[01])[-/](?:19|20)\\d{2}|(?:0[1-9]|[12]\\d|3[01])[-/](0[1-9]|1[0-2])[-/](?:19|20)\\d{2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2015-03-15",
        "03/15/2015",
        "15/03/2015",
        "2018-07-22",
        "12/01/2020",
        "01/12/2020",
        "2019-11-08",
        "06-25-2017"
      ],
      "negativeContentExamples": [
        "15-Mar-2015",
        "March 15, 2015",
        "2015/13/15",
        "32/03/2015",
        "2015-00-15",
        "15/15/2015"
      ],
      "positiveHeaderExamples": [
        "drivers_license_issue_date",
        "dl_issue_date",
        "license_issue_dt",
        "driver_license_issued",
        "dl_original_issue_date",
        "license_first_issued",
        "driving_license_issue_date",
        "insured_dl_issue_date"
      ],
      "negativeHeaderExamples": [
        "drivers_license_expiry_date",
        "dl_renewal_date",
        "license_expiration",
        "birth_date",
        "policy_start_date",
        "claim_date",
        "vehicle_registration_date",
        "insurance_effective_date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*driver.*license.*issue.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "drivers_license_issue_date"
          ],
          "negativeExamples": [
            "drivers_license_expiry_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*dl.*issue.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "dl_issue_date"
          ],
          "negativeExamples": [
            "dl_renewal_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*license.*issue.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "license_issue_dt"
          ],
          "negativeExamples": [
            "license_expiration"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*issue.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "issue_date"
          ],
          "negativeExamples": [
            "expiry_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "time"
          ],
          "rationale": null
        }
      ],
      "priority": 3160,
      "explanation": "This semantic type identifies dates representing when a driver's license was originally issued. It's specifically designed for insurance and risk assessment contexts where the original issue date (not renewal dates) is crucial for calculating driving experience. The pattern matches common date formats (YYYY-MM-DD, MM/DD/YYYY, DD/MM/YYYY) but excludes future dates and very old dates that would be unrealistic for active licenses. The header patterns focus on distinguishing issue dates from expiry or renewal dates, which are different concepts in insurance risk assessment.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:20:30.135002"
    },
    {
      "resultType": "generated",
      "semanticType": "Seniority",
      "description": "Customer tenure duration measured in whole years from first policy activation, indicating loyalty and experience level with insurance provider for risk assessment",
      "pluginType": "regex",
      "regexPattern": "\\d{1,2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "5",
        "12",
        "25",
        "3",
        "18",
        "7",
        "35"
      ],
      "negativeContentExamples": [
        "1.5",
        "-2",
        "100",
        "2.75",
        "N/A",
        "15 months",
        "3.2"
      ],
      "positiveHeaderExamples": [
        "customer_tenure_years",
        "policy_tenure_years",
        "tenure_in_years",
        "customer_years",
        "years_with_company",
        "tenure_yrs",
        "customer_loyalty_years",
        "policy_years"
      ],
      "negativeHeaderExamples": [
        "customer_age",
        "policy_expiry_years",
        "employee_tenure_years",
        "contract_duration",
        "years_remaining",
        "birth_year",
        "policy_start_year",
        "customer_since_year"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*tenure.*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_tenure_years"
          ],
          "negativeExamples": [
            "employee_tenure_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*tenure.*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_tenure_years"
          ],
          "negativeExamples": [
            "policy_expiry_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_years"
          ],
          "negativeExamples": [
            "customer_age_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*tenure.*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "tenure_years"
          ],
          "negativeExamples": [
            "contract_years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*tenure.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "tenure"
          ],
          "negativeExamples": [
            "temperature"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*years?.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "years"
          ],
          "negativeExamples": [
            "months"
          ],
          "rationale": null
        }
      ],
      "priority": 3170,
      "explanation": "This semantic type identifies customer tenure duration measured in whole years, specifically for insurance customers from their first policy activation. It represents a key metric for assessing customer loyalty and experience level, which is crucial for risk assessment in insurance contexts. The pattern matches 1-2 digit whole numbers representing years of tenure, typically ranging from new customers (1 year) to long-term loyal customers (up to 99 years theoretically, though practically most would be under 50). This differs from general age or employment tenure as it specifically tracks the customer relationship duration with an insurance provider.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:21:07.644409"
    },
    {
      "resultType": "generated",
      "semanticType": "Policies_in_force",
      "description": "This type counts the total number of insurance policies that are currently active and in effect for a specific policyholder. The value represents only policies with valid coverage status and excludes any cancelled or expired policies.",
      "pluginType": "regex",
      "regexPattern": "[1-9]\\d{0,2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "3",
        "5",
        "12",
        "25",
        "47",
        "89",
        "156"
      ],
      "negativeContentExamples": [
        "0",
        "-1",
        "3.5",
        "1000",
        "POL-12345",
        "AUTO",
        "ACTIVE",
        "2024-01-15"
      ],
      "positiveHeaderExamples": [
        "active_policy_count",
        "current_insurance_policies",
        "total_policies_active",
        "policy_count",
        "num_active_policies",
        "insurance_policy_count",
        "active_coverage_count",
        "current_policy_total"
      ],
      "negativeHeaderExamples": [
        "policy_number",
        "policy_premium",
        "policy_start_date",
        "policy_type",
        "claim_count",
        "expired_policies",
        "policy_status",
        "coverage_amount"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*active.*insurance.*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "active_insurance_policies_count"
          ],
          "negativeExamples": [
            "expired_insurance_policies_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*current.*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "current_policies_count"
          ],
          "negativeExamples": [
            "historical_policies_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_policy_count"
          ],
          "negativeExamples": [
            "insurance_claim_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*polic(y|ies).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_count"
          ],
          "negativeExamples": [
            "claim_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*num.*polic(y|ies).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "num_policies"
          ],
          "negativeExamples": [
            "policy_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3180,
      "explanation": "This semantic type identifies numeric values representing the count of active insurance policies held by a policyholder. It's designed to match small to moderate integer values (1-999) that would realistically represent the number of active insurance policies someone might have. The pattern excludes zero (as it represents no active policies), negative numbers (which don't make sense for counts), decimal values (policy counts are whole numbers), and very large numbers (which would be unrealistic for individual policy counts). This type is useful for customer analytics, risk assessment, and portfolio management in insurance systems.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:21:43.360477"
    },
    {
      "resultType": "generated",
      "semanticType": "Max_policies",
      "description": "Tracks the peak count of concurrent policies maintained by a customer at any single point during their entire tenure. This metric helps assess customer engagement and portfolio complexity over time.",
      "pluginType": "regex",
      "regexPattern": "[1-9]\\d{0,2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "5",
        "12",
        "23",
        "47",
        "89",
        "156",
        "234"
      ],
      "negativeContentExamples": [
        "0",
        "-5",
        "1.5",
        "12.75",
        "1000",
        "N/A",
        "UNKNOWN"
      ],
      "positiveHeaderExamples": [
        "peak_policy_count",
        "max_concurrent_policies",
        "maximum_policy_portfolio_size",
        "peak_portfolio_count",
        "highest_policy_count",
        "policy_count_peak",
        "max_policies_held",
        "peak_concurrent_coverage"
      ],
      "negativeHeaderExamples": [
        "current_policy_count",
        "average_policy_count",
        "total_policies_lifetime",
        "active_policies",
        "policy_premium_amount",
        "policy_start_date",
        "minimum_policy_count",
        "policy_renewal_count"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*peak.*policy.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "peak_policy_count"
          ],
          "negativeExamples": [
            "current_policy_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*concurrent.*policies.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_concurrent_policies"
          ],
          "negativeExamples": [
            "min_concurrent_policies"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*maximum.*policy.*portfolio.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "maximum_policy_portfolio_size"
          ],
          "negativeExamples": [
            "average_policy_portfolio_size"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*peak.*portfolio.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "peak_portfolio"
          ],
          "negativeExamples": [
            "current_portfolio"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*peak.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_peak"
          ],
          "negativeExamples": [
            "policy_average"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3190,
      "explanation": "This semantic type identifies numeric values representing the peak count of concurrent policies maintained by a customer. It captures the maximum number of active insurance policies a customer held simultaneously at any point during their relationship with the company. The pattern matches positive integers from 1 to 999, as it's reasonable to expect customers to have at least one policy for this metric to be meaningful, and extremely high counts (1000+) would be unusual for individual customers. This metric is valuable for customer segmentation, risk assessment, and understanding customer engagement patterns in insurance and financial services contexts.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:22:19.025344"
    },
    {
      "resultType": "generated",
      "semanticType": "Max_products",
      "description": "Measures the peak diversity of insurance products simultaneously maintained by a customer across their entire history. The count includes different product categories such as auto, home, life, or other insurance types offered by the company.",
      "pluginType": "regex",
      "regexPattern": "[1-9]|1[0-5]",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "3",
        "5",
        "7",
        "9",
        "12",
        "15",
        "8"
      ],
      "negativeContentExamples": [
        "0",
        "16",
        "25",
        "3.5",
        "-2",
        "auto",
        "N/A",
        "unlimited"
      ],
      "positiveHeaderExamples": [
        "peak_insurance_product_diversity",
        "max_insurance_products_held",
        "insurance_diversity_peak",
        "highest_product_count",
        "max_simultaneous_products",
        "peak_product_diversity",
        "insurance_portfolio_peak",
        "max_coverage_diversity"
      ],
      "negativeHeaderExamples": [
        "current_insurance_products",
        "total_insurance_purchases",
        "average_product_count",
        "insurance_premium_amount",
        "policy_start_date",
        "insurance_company_count",
        "claims_filed_count",
        "years_as_customer"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*peak.*insurance.*product.*diversity.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "peak_insurance_product_diversity"
          ],
          "negativeExamples": [
            "current_insurance_product_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*max.*insurance.*product.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_insurance_product_count"
          ],
          "negativeExamples": [
            "min_insurance_product_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*diversity.*peak.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_diversity_peak"
          ],
          "negativeExamples": [
            "insurance_diversity_current"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*product.*diversity.*max.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "product_diversity_max"
          ],
          "negativeExamples": [
            "product_diversity_avg"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*peak.*diversity.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "peak_diversity"
          ],
          "negativeExamples": [
            "average_diversity"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*diversity.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "diversity"
          ],
          "negativeExamples": [
            "frequency"
          ],
          "rationale": null
        }
      ],
      "priority": 3200,
      "explanation": "This semantic type identifies numeric values representing the maximum number of different insurance product types that a customer has held simultaneously at any point in their history. It's a key metric in insurance analytics for understanding customer engagement depth and cross-selling success. The values are typically small integers (1-15) since most customers don't maintain extremely diverse insurance portfolios simultaneously. This differs from total lifetime products purchased or current active products, as it specifically captures the peak diversity moment in the customer's relationship history.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:22:57.034271"
    },
    {
      "resultType": "generated",
      "semanticType": "Lapse",
      "description": "Records the cumulative number of policy lapses or cancellations associated with a customer account over time, including both voluntary cancellations and involuntary terminations due to non-payment or other reasons.",
      "pluginType": "regex",
      "regexPattern": "\\d+",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "0",
        "1",
        "3",
        "7",
        "12",
        "25",
        "48",
        "156"
      ],
      "negativeContentExamples": [
        "-1",
        "3.5",
        "12.75",
        "N/A",
        "None",
        "Active",
        "2024-01-15",
        "$1,250.00"
      ],
      "positiveHeaderExamples": [
        "policy_lapse_count",
        "total_cancellations",
        "cumulative_lapses",
        "cancellation_count",
        "lapse_cnt",
        "policy_termination_count",
        "customer_lapse_history",
        "total_policy_lapses"
      ],
      "negativeHeaderExamples": [
        "policy_premium_amount",
        "lapse_date",
        "cancellation_reason",
        "policy_number",
        "renewal_count",
        "claim_count",
        "policy_status",
        "coverage_amount"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policy.*lapse.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_lapse_count"
          ],
          "negativeExamples": [
            "policy_premium_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*cancellation.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_cancellation_count"
          ],
          "negativeExamples": [
            "policy_renewal_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*cumulative.*lapse.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "cumulative_lapses"
          ],
          "negativeExamples": [
            "cumulative_premiums"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*total.*cancellation.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "total_cancellations"
          ],
          "negativeExamples": [
            "total_claims"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(lapse|cancellation).*cnt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "lapse_cnt"
          ],
          "negativeExamples": [
            "claim_cnt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3210,
      "explanation": "This semantic type identifies data fields that contain the cumulative count of policy lapses or cancellations for insurance customers. It captures numeric values representing how many times a customer has had policies lapse or be cancelled, which is crucial for risk assessment and customer behavior analysis in insurance systems. The pattern matches non-negative integers, as lapse counts cannot be negative or fractional. This metric helps insurers evaluate customer reliability and adjust underwriting decisions accordingly.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:23:29.883422"
    },
    {
      "resultType": "generated",
      "semanticType": "Date_lapse",
      "description": "This type captures the exact termination date of a lapsed insurance policy in standard date format. The date marks when coverage officially ended and the policy became inactive in the system.",
      "pluginType": "regex",
      "regexPattern": "\\d{4}-\\d{2}-\\d{2}|\\d{2}/\\d{2}/\\d{4}|\\d{1,2}/\\d{1,2}/\\d{4}|\\d{2}-\\d{2}-\\d{4}|\\d{1,2}-\\d{1,2}-\\d{4}|\\d{2}\\.\\d{2}\\.\\d{4}|\\d{1,2}\\.\\d{1,2}\\.\\d{4}|\\d{8}|\\d{2} [A-Za-z]{3} \\d{4}|\\d{1,2} [A-Za-z]{3,9} \\d{4}|[A-Za-z]{3} \\d{1,2}, \\d{4}|[A-Za-z]{3,9} \\d{1,2}, \\d{4}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023-03-15",
        "12/31/2022",
        "3/15/2023",
        "15-03-2023",
        "31.12.2022",
        "20230315",
        "15 Mar 2023",
        "March 15, 2023"
      ],
      "negativeContentExamples": [
        "2023/03/32"
      ],
      "positiveHeaderExamples": [
        "policy_lapse_date",
        "insurance_lapse_date",
        "coverage_termination_date",
        "policy_end_date",
        "lapse_dt",
        "coverage_lapse_date",
        "termination_date",
        "policy_expiry_date"
      ],
      "negativeHeaderExamples": [
        "policy_start_date",
        "renewal_date",
        "premium_due_date",
        "issue_date",
        "effective_date",
        "claim_date",
        "payment_date",
        "birth_date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policy.*lapse.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_lapse_date"
          ],
          "negativeExamples": [
            "policy_effective_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insurance.*lapse.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_lapse_date"
          ],
          "negativeExamples": [
            "insurance_renewal_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*coverage.*end.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "coverage_end_date"
          ],
          "negativeExamples": [
            "coverage_start_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*termination.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "termination_date"
          ],
          "negativeExamples": [
            "employment_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*lapse.*dt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "lapse_dt"
          ],
          "negativeExamples": [
            "issue_dt"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "date"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3220,
      "explanation": "This semantic type identifies dates when insurance policies officially lapsed or terminated. It's specifically designed for insurance systems to track when coverage ended due to non-payment, cancellation, or other reasons that caused the policy to become inactive. The type uses standard date format patterns to capture various date representations commonly found in insurance databases and systems. This is crucial for compliance reporting, reactivation processes, and understanding coverage gaps in insurance portfolios.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:24:14.226601"
    },
    {
      "resultType": "generated",
      "semanticType": "Payment",
      "description": "This type represents the payment status of an insurance policy using a numeric flag system. The value indicates whether the policyholder has met their premium payment obligations or has outstanding payment issues.",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "backout": "[0-9]",
      "positiveContentExamples": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "negativeContentExamples": [
        "6",
        "10",
        "-1",
        "99",
        "PAID",
        "OVERDUE",
        "1.5",
        "01"
      ],
      "positiveHeaderExamples": [
        "insurance_payment_status",
        "policy_payment_flag",
        "premium_status",
        "payment_flag",
        "pay_status",
        "premium_payment_status",
        "policy_status_flag",
        "payment_status_code"
      ],
      "negativeHeaderExamples": [
        "payment_amount",
        "premium_due_date",
        "policy_number",
        "payment_method",
        "customer_status",
        "claim_status",
        "policy_type",
        "payment_frequency"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*payment.*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_payment_status"
          ],
          "negativeExamples": [
            "payment_method_type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*payment.*flag.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_payment_flag"
          ],
          "negativeExamples": [
            "policy_type_flag"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*premium.*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "premium_status"
          ],
          "negativeExamples": [
            "premium_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*payment.*flag.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "payment_flag"
          ],
          "negativeExamples": [
            "payment_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*pay.*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "pay_status"
          ],
          "negativeExamples": [
            "pay_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*status.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "status"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3230,
      "explanation": "This semantic type identifies numeric flag values (0-5) used to represent insurance policy payment status. Common interpretations include: 0 = Current/Paid, 1 = Grace Period, 2 = Past Due, 3 = Lapsed, 4 = Suspended, 5 = Cancelled. This type is specifically designed for insurance domain applications where payment status is encoded as single-digit numeric flags rather than text descriptions. The backout pattern ensures that any single digit can be captured if the exact list matching fails, while maintaining specificity to the insurance payment domain through header pattern matching.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:24:48.537379"
    },
    {
      "resultType": "generated",
      "semanticType": "Premium",
      "description": "This type captures the premium cost associated with an insurance policy expressed as a decimal or whole number currency value. The amount represents the total price charged to the policyholder for their coverage benefits and services.",
      "pluginType": "regex",
      "regexPattern": "(?:\\$|USD|EUR|GBP|CAD|AUD)?\\s*\\d{1,6}(?:,\\d{3})*(?:\\.\\d{2})?(?:\\s*(?:USD|EUR|GBP|CAD|AUD|\\$))?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1250.00",
        "$2,450.75",
        "895.50",
        "$1,875",
        "3250.25",
        "USD 1,125.00",
        "675.99",
        "$4,200.50"
      ],
      "negativeContentExamples": [
        "-500.00",
        "25.5",
        "ABC123",
        "12/31/2023",
        "N/A",
        "50000000.00"
      ],
      "positiveHeaderExamples": [
        "insurance_premium_amount",
        "policy_premium",
        "annual_premium_cost",
        "monthly_premium",
        "premium_due",
        "total_premium",
        "premium_price",
        "quarterly_premium_amt"
      ],
      "negativeHeaderExamples": [
        "claim_amount",
        "deductible",
        "coverage_limit",
        "policy_number",
        "commission_rate",
        "discount_percentage",
        "agent_fee",
        "processing_fee"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*insurance.*premium.*(?:amount|cost|price|fee).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_premium_amount"
          ],
          "negativeExamples": [
            "insurance_claim_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*policy.*premium.*(?:cost|amount|price).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_premium_cost"
          ],
          "negativeExamples": [
            "policy_deductible_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:annual|monthly|quarterly).*premium.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "annual_premium"
          ],
          "negativeExamples": [
            "annual_deductible"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*premium.*(?:amt|amount|cost|price).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "premium_amount"
          ],
          "negativeExamples": [
            "deductible_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*prem.*(?:amt|cost|price).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "prem_cost"
          ],
          "negativeExamples": [
            "claim_cost"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*premium.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "premium"
          ],
          "negativeExamples": [
            "deductible"
          ],
          "rationale": null
        }
      ],
      "priority": 3250,
      "explanation": "This semantic type identifies insurance premium amounts in datasets. Insurance premiums are the regular payments made by policyholders to maintain their insurance coverage. The pattern recognizes various currency formats including dollar signs, currency codes, and different decimal representations. It's designed to capture typical premium ranges from hundreds to thousands of dollars, which are common for auto, home, health, and life insurance policies. The header patterns help identify columns containing premium data by looking for combinations of terms like \"insurance\", \"policy\", \"premium\", and payment frequency indicators.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:25:31.128654"
    },
    {
      "resultType": "generated",
      "semanticType": "Cost_claims_year",
      "description": "Records the cumulative claim expenses incurred by an insurance company for a particular policy within the current calendar or policy year, including all settled claims representing actual financial impact on insurer reserves",
      "pluginType": "regex",
      "regexPattern": "(?:\\$|USD|CAD|EUR|GBP|AUD)?\\s*[0-9]{1,3}(?:,[0-9]{3})*(?:\\.[0-9]{2})?(?:\\s*(?:USD|CAD|EUR|GBP|AUD))?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "$125,450.75",
        "89,234.50",
        "$1,567,890.00",
        "USD 45,678.25",
        "234,567.89",
        "$78,901.23",
        "1,234,567.45",
        "CAD 567,890.12"
      ],
      "negativeContentExamples": [
        "$125,450.755",
        "-$1,567,890.00",
        "$45,678.2",
        "234.567.89",
        "$78901.23",
        "1234567.45",
        "\u20ac567,890.12"
      ],
      "positiveHeaderExamples": [
        "claim_expenses_incurred",
        "incurred_claim_costs_ytd",
        "cumulative_claim_expenses",
        "total_claim_expense_incurred",
        "claim_costs_incurred_current_year",
        "policy_claim_expenses_ytd",
        "incurred_losses_and_expenses",
        "claim_expense_reserve_incurred"
      ],
      "negativeHeaderExamples": [
        "claim_expenses_paid",
        "outstanding_claim_reserves",
        "premium_income_ytd",
        "claim_count_incurred",
        "policy_premium_earned",
        "commission_expenses",
        "underwriting_expenses",
        "investment_income"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*claim.*expenses?.*incurred.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_expenses_incurred_ytd"
          ],
          "negativeExamples": [
            "claim_reserves_outstanding"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*incurred.*claim.*(?:cost|expense|amount).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "incurred_claim_costs_current_year"
          ],
          "negativeExamples": [
            "paid_claim_costs_current_year"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*cumulative.*claim.*(?:expense|cost).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "cumulative_claim_expenses"
          ],
          "negativeExamples": [
            "monthly_claim_expenses"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claim.*(?:expense|cost).*(?:ytd|year|annual).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_expense_ytd"
          ],
          "negativeExamples": [
            "premium_expense_ytd"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:incurred|expense|cost).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "total_incurred"
          ],
          "negativeExamples": [
            "total_premium"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:expense|cost).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "expense"
          ],
          "negativeExamples": [
            "revenue"
          ],
          "rationale": null
        }
      ],
      "priority": 3260,
      "explanation": "This semantic type identifies monetary amounts representing cumulative claim expenses that have been incurred by insurance companies. These values are crucial for insurance financial reporting and represent the actual financial impact of claims on the insurer's reserves within a specific time period (typically calendar or policy year). The pattern matches common currency formats including dollar signs, currency codes, and properly formatted monetary amounts with thousands separators and decimal places. This differs from paid claims (actual cash outflows) or outstanding reserves (estimated future payments) as it represents the total financial liability recognized by the insurer.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:26:10.125907"
    },
    {
      "resultType": "generated",
      "semanticType": "N_claims_year",
      "description": "This type tracks the number of individual claim incidents associated with a policy within the current calendar or policy year period. The count includes all claim types regardless of their settlement status or monetary value.",
      "pluginType": "regex",
      "regexPattern": "\\d+",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "0",
        "1",
        "2",
        "5",
        "12",
        "25",
        "100",
        "999"
      ],
      "negativeContentExamples": [
        "-1",
        "2.5",
        "1,250.00",
        "$500",
        "N/A",
        "PENDING",
        "CLM-2024-001",
        "3.14159"
      ],
      "positiveHeaderExamples": [
        "policy_claim_count",
        "claims_ytd",
        "number_of_claims",
        "claim_incidents",
        "total_claims",
        "claim_cnt",
        "claims_count_current_year",
        "policy_claims_total"
      ],
      "negativeHeaderExamples": [
        "claim_amount",
        "claim_number",
        "policy_premium",
        "claim_status",
        "deductible_amount",
        "claim_date",
        "policy_number",
        "settlement_value"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*policy.*claim.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "policy_claim_count"
          ],
          "negativeExamples": [
            "policy_premium_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claim.*incidents.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_incidents_ytd"
          ],
          "negativeExamples": [
            "incident_severity"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*claims.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "number_of_claims"
          ],
          "negativeExamples": [
            "claim_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_count"
          ],
          "negativeExamples": [
            "claim_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claim.*cnt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_cnt"
          ],
          "negativeExamples": [
            "claim_status"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3270,
      "explanation": "This semantic type identifies numeric values representing the count of insurance claims associated with a policy. It's specifically designed for tracking claim frequency metrics in insurance datasets. The type uses a simple numeric pattern but relies heavily on header pattern matching to distinguish claim counts from other numeric insurance data like amounts, policy numbers, or dates. This is particularly useful for risk assessment, policy pricing, and claims analytics where understanding claim frequency patterns is crucial for actuarial analysis.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:26:42.179566"
    },
    {
      "resultType": "generated",
      "semanticType": "N_claims_history",
      "description": "Cumulative count of all claim incidents associated with a customer throughout their complete tenure with the insurance provider, including claims from all policies and time periods for risk assessment and pricing purposes",
      "pluginType": "regex",
      "regexPattern": "\\d{1,4}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "0",
        "3",
        "7",
        "12",
        "25",
        "48",
        "156",
        "1247"
      ],
      "negativeContentExamples": [
        "-5",
        "3.5",
        "12.75",
        "$1,250",
        "25%",
        "N/A",
        "pending",
        "12345"
      ],
      "positiveHeaderExamples": [
        "lifetime_claim_count",
        "total_claims_customer",
        "cumulative_claim_incidents",
        "customer_claim_history_total",
        "all_time_claim_count",
        "tenure_claim_total",
        "historical_claim_count",
        "aggregate_claims"
      ],
      "negativeHeaderExamples": [
        "annual_claim_count",
        "claim_amount_total",
        "monthly_claims",
        "claim_severity_score",
        "pending_claim_count",
        "claim_processing_days",
        "policy_claim_limit",
        "claim_frequency_rate"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*lifetime.*claim.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "lifetime_claim_count"
          ],
          "negativeExamples": [
            "annual_claim_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*total.*claim.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "total_claim_count"
          ],
          "negativeExamples": [
            "monthly_claim_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*cumulative.*claim.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "cumulative_claims"
          ],
          "negativeExamples": [
            "pending_claims"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*claim.*history.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_claim_history_count"
          ],
          "negativeExamples": [
            "claim_history_details"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claim.*total.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_total"
          ],
          "negativeExamples": [
            "claim_amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "count"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        }
      ],
      "priority": 3280,
      "explanation": "This semantic type identifies cumulative claim count data used in insurance analytics for risk assessment and customer profiling. It represents the total number of claim incidents a customer has filed across all their policies throughout their entire relationship with the insurance provider. This metric is crucial for underwriting decisions, premium calculations, and identifying high-risk customers. The pattern matches reasonable count values (1-4 digits) as extremely high lifetime claim counts would be unusual in most insurance contexts. The header patterns focus on identifying columns that contain lifetime, total, or cumulative claim counting data rather than monetary amounts, frequencies, or time-limited counts.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:27:18.739285"
    },
    {
      "resultType": "generated",
      "semanticType": "R_Claims_history",
      "description": "A numeric rate representing the frequency of insurance claims per unit of time, calculated by dividing total historical claims by customer relationship duration. Values are typically decimal numbers representing claims per year or other time period.",
      "pluginType": "regex",
      "regexPattern": "\\d+\\.?\\d*\\s*(claims?\\s*)?(per\\s*)?(year|month|quarter|period)?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2.5",
        "0.75",
        "1.2",
        "3.0",
        "0.33",
        "4.8",
        "1.0",
        "0.0"
      ],
      "negativeContentExamples": [
        "$2,500.00",
        "2023-01-15",
        "AUTO",
        "APPROVED",
        "John Smith",
        "-1.5",
        "N/A",
        "25%"
      ],
      "positiveHeaderExamples": [
        "claims_frequency_rate",
        "customer_claims_frequency",
        "claims_per_year",
        "annual_claim_frequency",
        "claim_freq_rate",
        "historical_claims_frequency",
        "customer_risk_frequency",
        "claim_propensity_rate"
      ],
      "negativeHeaderExamples": [
        "claim_amount",
        "total_claims",
        "claim_date",
        "customer_tenure",
        "premium_rate",
        "deductible_amount",
        "policy_number",
        "claim_status"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*claims?.*frequency.*rate.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_frequency_rate"
          ],
          "negativeExamples": [
            "claim_amount_rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*claims?.*frequency.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "customer_claims_frequency"
          ],
          "negativeExamples": [
            "customer_payment_frequency"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claims?.*per.*(year|period|time).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claims_per_year"
          ],
          "negativeExamples": [
            "payments_per_year"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*claim.*freq.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "claim_freq"
          ],
          "negativeExamples": [
            "payment_freq"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*frequency.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "frequency"
          ],
          "negativeExamples": [
            "amount"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*rate.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "rate"
          ],
          "negativeExamples": [
            "total"
          ],
          "rationale": null
        }
      ],
      "priority": 3290,
      "explanation": "This semantic type identifies claims frequency rates used in insurance and risk assessment contexts. It represents a calculated metric showing how often a customer files claims relative to their relationship duration with the insurer. The values are typically decimal numbers representing claims per time period (usually per year). This metric is crucial for risk profiling, premium calculations, and customer segmentation in insurance analytics. The pattern matches numeric values that could represent frequency rates, while the header patterns identify columns containing this specific insurance metric.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:27:52.723672"
    },
    {
      "resultType": "generated",
      "semanticType": "Type_risk",
      "description": "This type assigns a numeric risk category to classify the potential exposure and likelihood of claims for underwriting purposes. The classification system uses predefined codes to represent different risk levels from low to high exposure categories.",
      "pluginType": "regex",
      "regexPattern": "[0-9]{1,2}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "10",
        "15",
        "99"
      ],
      "negativeContentExamples": [
        "100",
        "A1",
        "LOW",
        "HIGH",
        "1.5",
        "R01",
        "MEDIUM",
        "001"
      ],
      "positiveHeaderExamples": [
        "risk_category",
        "underwriting_risk",
        "risk_code",
        "exposure_level",
        "risk_class",
        "claim_risk_category",
        "policy_risk_level",
        "risk_rating"
      ],
      "negativeHeaderExamples": [
        "credit_score",
        "age_category",
        "product_code",
        "customer_segment",
        "policy_number",
        "claim_amount",
        "premium_class",
        "territory_code"
      ],
      "confidenceThreshold": 85.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*risk.*category.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "risk_category_code"
          ],
          "negativeExamples": [
            "product_category_code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*underwriting.*risk.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "underwriting_risk_level"
          ],
          "negativeExamples": [
            "underwriting_status"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*exposure.*category.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "exposure_category"
          ],
          "negativeExamples": [
            "market_exposure"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*risk.*class.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "risk_class"
          ],
          "negativeExamples": [
            "asset_class"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*risk.*level.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "risk_level"
          ],
          "negativeExamples": [
            "service_level"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*risk.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "risk"
          ],
          "negativeExamples": [
            "discount"
          ],
          "rationale": null
        }
      ],
      "priority": 3300,
      "explanation": "This semantic type identifies numeric risk category codes used in insurance and underwriting contexts. These codes typically range from 1-99 and represent standardized risk classifications that help insurers assess potential exposure and likelihood of claims. The pattern matches 1-2 digit numbers commonly used in risk assessment systems, where lower numbers often indicate lower risk and higher numbers indicate higher risk exposure. This classification is essential for premium calculation, policy approval decisions, and portfolio risk management.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:28:24.909924"
    },
    {
      "resultType": "generated",
      "semanticType": "Area",
      "description": "Binary classification codes for geographic risk assessment of insured properties, distinguishing between area types such as urban/rural or high-risk/low-risk zones",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "U",
        "R",
        "H",
        "L",
        "1",
        "2",
        "A",
        "B",
        "URBAN",
        "RURAL",
        "HIGH",
        "LOW",
        "ZONE1",
        "ZONE2",
        "RISK_A",
        "RISK_B"
      ],
      "backout": "[A-Z0-9_]{1,8}",
      "positiveContentExamples": [
        "U",
        "R",
        "H",
        "L",
        "1",
        "2",
        "URBAN",
        "RURAL"
      ],
      "negativeContentExamples": [
        "SUBURBAN",
        "MEDIUM",
        "3",
        "MODERATE",
        "EXTREME",
        "COASTAL",
        "MOUNTAIN",
        "FLOOD_ZONE_A"
      ],
      "positiveHeaderExamples": [
        "geographic_risk_zone",
        "property_location_risk",
        "area_type_code",
        "insured_location_zone",
        "risk_zone_classification",
        "location_risk_category",
        "property_zone_type",
        "geographic_area_risk"
      ],
      "negativeHeaderExamples": [
        "postal_zone",
        "time_zone",
        "climate_zone",
        "flood_zone_detailed",
        "seismic_zone_rating",
        "hurricane_zone_level",
        "fire_risk_score",
        "property_coordinates"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*property.*geographic.*risk.*zone.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "property_geographic_risk_zone"
          ],
          "negativeExamples": [
            "property_damage_risk_assessment"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*insured.*location.*risk.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insured_location_risk_code"
          ],
          "negativeExamples": [
            "insured_vehicle_risk_factor"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*geographic.*risk.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "geographic_risk_category"
          ],
          "negativeExamples": [
            "geographic_coordinates"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*area.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "area_type_code"
          ],
          "negativeExamples": [
            "coverage_area_size"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*location.*zone.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "location_zone"
          ],
          "negativeExamples": [
            "time_zone"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*zone.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "zone"
          ],
          "negativeExamples": [
            "timezone"
          ],
          "rationale": null
        }
      ],
      "priority": 3310,
      "explanation": "This semantic type identifies binary classification codes used in insurance for geographic risk assessment of properties. It captures simple categorical distinctions like Urban/Rural (U/R), High/Low risk (H/L), or numbered zones (1/2) that help insurers quickly categorize properties based on their geographic location's risk profile. The type is designed to match concise codes rather than detailed geographic descriptions or complex risk assessments.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:28:57.315603"
    },
    {
      "resultType": "generated",
      "semanticType": "Second_driver",
      "description": "Binary indicator flag identifying insurance policies that include coverage for multiple drivers, used for premium calculations and coverage scope determination",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "TRUE",
        "FALSE",
        "TRUE",
        "FALSE",
        "TRUE",
        "FALSE",
        "YES",
        "NO",
        "YES",
        "NO",
        "YES",
        "NO",
        "Y",
        "N",
        "1",
        "0"
      ],
      "backout": "(?i)(true|false|yes|no|y|n|1|0)",
      "positiveContentExamples": [
        "true",
        "false",
        "TRUE",
        "FALSE",
        "yes",
        "no",
        "Y",
        "N",
        "1",
        "0"
      ],
      "negativeContentExamples": [
        "maybe",
        "unknown",
        "2",
        "active",
        "pending",
        "approved",
        "enabled"
      ],
      "positiveHeaderExamples": [
        "multi_driver_flag",
        "multiple_driver_indicator",
        "additional_driver_coverage",
        "secondary_driver_flag",
        "multi_driver_policy",
        "has_multiple_drivers",
        "additional_drivers_covered",
        "multi_driver_ind"
      ],
      "negativeHeaderExamples": [
        "driver_age",
        "primary_driver_name",
        "vehicle_count",
        "policy_number",
        "coverage_amount",
        "driver_license_number",
        "single_driver_policy",
        "driver_experience_years"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*multi.*driver.*flag.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "multi_driver_flag"
          ],
          "negativeExamples": [
            "single_driver_flag"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*multiple.*driver.*indicator.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "multiple_driver_indicator"
          ],
          "negativeExamples": [
            "driver_age_indicator"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*additional.*driver.*coverage.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "additional_driver_coverage"
          ],
          "negativeExamples": [
            "collision_coverage"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*multi.*driver.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "multi_driver"
          ],
          "negativeExamples": [
            "multi_vehicle"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*secondary.*driver.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "secondary_driver"
          ],
          "negativeExamples": [
            "primary_driver"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*driver.*flag.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "driver_flag"
          ],
          "negativeExamples": [
            "vehicle_flag"
          ],
          "rationale": null
        }
      ],
      "priority": 3320,
      "explanation": "This semantic type identifies binary flag fields that indicate whether an insurance policy covers multiple drivers. It's commonly used in auto insurance systems to distinguish between single-driver and multi-driver policies, which affects premium calculations, coverage scope, and risk assessment. The flag helps insurance companies properly categorize policies and apply appropriate pricing models based on the number of covered drivers. This type recognizes various boolean representations including true/false, yes/no, Y/N, and 1/0 formats commonly found in insurance databases.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:29:32.556591"
    },
    {
      "resultType": "generated",
      "semanticType": "Year_matriculation",
      "description": "Four-digit calendar year representing the original registration year of a vehicle, used for insurance underwriting, depreciation calculations, and determining appropriate coverage levels",
      "pluginType": "regex",
      "regexPattern": "(19[5-9][0-9]|20[0-9][0-9]|2100)",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023",
        "2015",
        "2008",
        "1995",
        "2020",
        "2010",
        "1987",
        "2022"
      ],
      "negativeContentExamples": [
        "23",
        "1949",
        "20230",
        "202",
        "2024-01-15",
        "Jan 2023",
        "2023.5"
      ],
      "positiveHeaderExamples": [
        "vehicle_registration_year",
        "original_reg_year",
        "model_year",
        "registration_yr",
        "car_year",
        "vehicle_year",
        "reg_year",
        "year_registered"
      ],
      "negativeHeaderExamples": [
        "registration_date",
        "expiry_year",
        "birth_year",
        "policy_year",
        "claim_year",
        "renewal_year",
        "manufacture_date",
        "inspection_year"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*registration.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_registration_year"
          ],
          "negativeExamples": [
            "vehicle_registration_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*original.*registration.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "original_registration_year"
          ],
          "negativeExamples": [
            "original_purchase_year"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*reg.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "reg_year"
          ],
          "negativeExamples": [
            "reg_date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*registration.*yr.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "registration_yr"
          ],
          "negativeExamples": [
            "registration_month"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*model.*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "model_year"
          ],
          "negativeExamples": [
            "model_name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*year.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "year"
          ],
          "negativeExamples": [
            "month"
          ],
          "rationale": null
        }
      ],
      "priority": 3330,
      "explanation": "This semantic type identifies four-digit calendar years specifically related to vehicle registration for insurance purposes. It captures the original year a vehicle was first registered, which is crucial for insurance underwriting as it helps determine vehicle age, calculate depreciation, and set appropriate coverage levels. The pattern matches years from 1950 to 2100, covering the realistic range of vehicle registration years. This differs from other year types like birth years, policy years, or general date fields by focusing specifically on the vehicle registration context used in insurance data processing.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:30:04.259548"
    },
    {
      "resultType": "generated",
      "semanticType": "Power",
      "description": "Captures the mechanical power rating of a vehicle's engine as a numeric value, typically measured in horsepower (HP) or kilowatts (kW), used for insurance risk assessment and vehicle performance evaluation.",
      "pluginType": "regex",
      "regexPattern": "\\d{1,4}(\\.\\d{1,2})?\\s*(HP|hp|Hp|hP|BHP|bhp|Bhp|KW|kW|kw|Kw|PS|ps|Ps|CV|cv|Cv)?\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "150",
        "275 HP",
        "180.5 hp",
        "220 BHP",
        "165 kW",
        "300 bhp",
        "95.2 KW",
        "425 HP"
      ],
      "negativeContentExamples": [
        "2.5L",
        "V6",
        "3500 RPM",
        "15 MPG",
        "Turbo",
        "Diesel",
        "AWD",
        "Manual"
      ],
      "positiveHeaderExamples": [
        "engine_power",
        "horsepower",
        "motor_hp",
        "power_rating",
        "bhp_max",
        "engine_kw",
        "vehicle_power",
        "max_horsepower"
      ],
      "negativeHeaderExamples": [
        "engine_size",
        "displacement",
        "cylinders",
        "fuel_type",
        "transmission",
        "torque",
        "rpm_max",
        "mpg_rating"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*engine.*power.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "engine_power_rating"
          ],
          "negativeExamples": [
            "engine_displacement"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*motor.*power.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "motor_power_hp"
          ],
          "negativeExamples": [
            "motor_oil_type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(horsepower|horse.*power).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_horsepower"
          ],
          "negativeExamples": [
            "horse_trailer_capacity"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(bhp|hp|kw|kilowatt).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "max_bhp"
          ],
          "negativeExamples": [
            "hp_printer_model"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*power.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "power"
          ],
          "negativeExamples": [
            "password"
          ],
          "rationale": null
        }
      ],
      "priority": 3350,
      "explanation": "This semantic type identifies vehicle engine power ratings used in automotive and insurance contexts. It recognizes numeric values that may be accompanied by common power unit abbreviations like HP (horsepower), BHP (brake horsepower), kW (kilowatts), PS (metric horsepower), or CV (continental horsepower). The pattern is designed to capture both integer and decimal values within realistic automotive power ranges (1-9999), making it suitable for risk assessment applications where engine power correlates with vehicle performance capabilities and insurance premiums.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:30:47.230835"
    },
    {
      "resultType": "generated",
      "semanticType": "Cylinder_capacity",
      "description": "Engine displacement capacity as a numeric measurement representing the total volume of all engine cylinders, typically expressed in liters, cubic centimeters (cc), or cubic inches. Essential for insurance classification and rating calculations based on engine size and performance characteristics.",
      "pluginType": "regex",
      "regexPattern": "(?i)^\\s*(\\d{1,2}(\\.\\d{1,2})?)\\s*(l|liter|liters|litres|litre)?\\s*$|^\\s*(\\d{3,5})\\s*(cc|cm\u00b3|cubic\\s*cm|cubic\\s*centimeter|cubic\\s*centimetre)?\\s*$|^\\s*(\\d{2,4}(\\.\\d{1,2})?)\\s*(ci|cubic\\s*inch|cubic\\s*inches|in\u00b3)?\\s*$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2.0",
        "3.5L",
        "1800cc",
        "5.7 liters",
        "2500 cc",
        "4.6 L",
        "1600",
        "6.2 litres"
      ],
      "negativeContentExamples": [
        "250 hp",
        "V8",
        "25.5 mpg",
        "4WD",
        "Turbo",
        "Manual",
        "Diesel",
        "150 kW"
      ],
      "positiveHeaderExamples": [
        "engine_displacement",
        "displacement_liters",
        "engine_size_cc",
        "motor_displacement",
        "displacement_l",
        "engine_cc",
        "displacement",
        "engine_size"
      ],
      "negativeHeaderExamples": [
        "engine_power",
        "horsepower",
        "fuel_efficiency",
        "engine_type",
        "transmission",
        "torque",
        "cylinders",
        "engine_weight"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*engine.*displacement.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "engine_displacement_liters"
          ],
          "negativeExamples": [
            "engine_horsepower"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*motor.*displacement.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "motor_displacement_cc"
          ],
          "negativeExamples": [
            "motor_type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*engine.*size.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "engine_size_l"
          ],
          "negativeExamples": [
            "engine_weight"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(displacement|engine_cc|motor_cc).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "displacement"
          ],
          "negativeExamples": [
            "transmission"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(cc|liters|litres).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "cc"
          ],
          "negativeExamples": [
            "mpg"
          ],
          "rationale": null
        }
      ],
      "priority": 3360,
      "explanation": "This semantic type identifies engine displacement values, which represent the total volume swept by all pistons in an engine's cylinders. It's commonly expressed in liters (L), cubic centimeters (cc), or cubic inches (ci). The pattern recognizes various formats including numeric values with or without units, handling common abbreviations and variations. This measurement is crucial for vehicle classification, insurance rating, emissions calculations, and performance assessments. The regex accommodates different unit representations and spacing variations commonly found in automotive datasets.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:31:24.662200"
    },
    {
      "resultType": "generated",
      "semanticType": "Value_vehicle",
      "description": "Represents the monetary worth of a vehicle as determined by market valuation methods, used for insurance coverage amounts, deductibles, and total loss thresholds in claims processing",
      "pluginType": "regex",
      "regexPattern": "(?:\\$|USD|CAD|EUR|GBP)?\\s*[0-9]{1,3}(?:,?[0-9]{3})*(?:\\.[0-9]{2})?\\s*(?:USD|CAD|EUR|GBP)?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "$25,500.00",
        "18750",
        "$32,850",
        "45000.00",
        "$8,995",
        "67500",
        "$125,000.00",
        "15250"
      ],
      "negativeContentExamples": [
        "ABC123",
        "Honda Civic",
        "VIN12345678901234567",
        "Premium"
      ],
      "positiveHeaderExamples": [
        "vehicle_value",
        "car_worth",
        "actual_cash_value",
        "market_value",
        "appraised_value",
        "kbb_value",
        "replacement_cost",
        "auto_valuation"
      ],
      "negativeHeaderExamples": [
        "vehicle_year",
        "car_payment",
        "insurance_premium",
        "deductible_amount",
        "mileage",
        "policy_number",
        "claim_amount",
        "repair_cost"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*(?:value|worth|appraisal|valuation).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_market_value"
          ],
          "negativeExamples": [
            "vehicle_registration_fee"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:car|auto|automobile).*(?:value|worth|appraisal).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "car_appraised_value"
          ],
          "negativeExamples": [
            "car_loan_payment"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:market|actual|cash|replacement).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "actual_cash_value"
          ],
          "negativeExamples": [
            "market_share_percentage"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:acv|msrp|kbb|nada).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "kbb_value"
          ],
          "negativeExamples": [
            "acv_account_number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(?:appraisal|valuation|assessment).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "insurance_appraisal"
          ],
          "negativeExamples": [
            "performance_assessment"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "value"
          ],
          "negativeExamples": [
            "volume"
          ],
          "rationale": null
        }
      ],
      "priority": 3370,
      "explanation": "This semantic type identifies monetary values specifically related to vehicle worth or valuation. It captures various formats of currency amounts that represent the market value, actual cash value, or appraised worth of vehicles. The pattern accommodates different currency symbols, comma separators for thousands, and optional decimal places. This type is essential for insurance systems to properly identify and process vehicle valuations for coverage calculations, claim settlements, and policy underwriting decisions.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:31:59.105003"
    },
    {
      "resultType": "generated",
      "semanticType": "N_doors",
      "description": "Records the number of entry doors available for passengers in a vehicle as an integer count, used for vehicle classification and insurance risk assessment",
      "pluginType": "regex",
      "regexPattern": "[1-9]|1[0-5]",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2",
        "4",
        "5",
        "3",
        "1",
        "6",
        "8",
        "12"
      ],
      "negativeContentExamples": [
        "0",
        "-1",
        "2.5",
        "20",
        "door",
        "four",
        "N/A",
        "unknown"
      ],
      "positiveHeaderExamples": [
        "door_count",
        "num_doors",
        "vehicle_doors",
        "passenger_doors",
        "entry_doors",
        "doors",
        "door_number",
        "total_doors"
      ],
      "negativeHeaderExamples": [
        "door_type",
        "door_color",
        "window_count",
        "seat_count",
        "door_handle",
        "door_material",
        "wheel_count",
        "engine_doors"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*door.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_door_count"
          ],
          "negativeExamples": [
            "vehicle_window_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*passenger.*door.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "passenger_door_count"
          ],
          "negativeExamples": [
            "passenger_seat_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*entry.*door.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "entry_doors"
          ],
          "negativeExamples": [
            "entry_points"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*num.*door.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "num_doors"
          ],
          "negativeExamples": [
            "num_wheels"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*door.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "door_count"
          ],
          "negativeExamples": [
            "seat_count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*doors.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "doors"
          ],
          "negativeExamples": [
            "floors"
          ],
          "rationale": null
        }
      ],
      "priority": 3380,
      "explanation": "This semantic type identifies vehicle door count data, which represents the number of passenger entry doors on a vehicle. This information is crucial for vehicle classification systems, insurance risk assessment, and automotive databases. The pattern matches integer values from 1 to 15, covering the realistic range from single-door vehicles (like some sports cars) to large commercial vehicles or buses. Values of 0 or above 15 are considered invalid as they fall outside practical vehicle door configurations. This data type helps distinguish between vehicle categories such as coupes (2 doors), sedans (4 doors), and larger passenger vehicles.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:32:32.178656"
    },
    {
      "resultType": "generated",
      "semanticType": "Type_fuel",
      "description": "Standardized single-letter codes used to classify vehicle fuel systems for insurance and regulatory purposes, distinguishing between gasoline, diesel, electric, hybrid, and alternative fuel sources",
      "pluginType": "list",
      "regexPattern": "",
      "listValues": [
        "G",
        "D",
        "E",
        "H",
        "P",
        "N",
        "B",
        "F",
        "L",
        "C",
        "M",
        "A",
        "O"
      ],
      "backout": "[A-Z]",
      "positiveContentExamples": [
        "G",
        "D",
        "E",
        "H",
        "P",
        "N",
        "B",
        "F"
      ],
      "negativeContentExamples": [
        "GAS",
        "DIESEL",
        "1",
        "X",
        "g",
        "GA",
        "DI",
        "EL"
      ],
      "positiveHeaderExamples": [
        "fuel_type_code",
        "vehicle_fuel_cd",
        "fuel_system_code",
        "fuel_code",
        "veh_fuel_typ_cd",
        "auto_fuel_type_code",
        "fuel_typ",
        "fuel_system_cd"
      ],
      "negativeHeaderExamples": [
        "fuel_type_description",
        "fuel_capacity",
        "engine_type_code",
        "transmission_code",
        "fuel_grade",
        "fuel_efficiency",
        "fuel_cost",
        "vehicle_type_code"
      ],
      "confidenceThreshold": 92.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*fuel.*type.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_fuel_type_code"
          ],
          "negativeExamples": [
            "vehicle_engine_type_code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*system.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel_system_code"
          ],
          "negativeExamples": [
            "fuel_system_description"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*type.*cd.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel_type_cd"
          ],
          "negativeExamples": [
            "fuel_grade_cd"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel_code"
          ],
          "negativeExamples": [
            "fuel_price"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*fuel.*typ.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "fuel_typ"
          ],
          "negativeExamples": [
            "fuel_capacity"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "code"
          ],
          "negativeExamples": [
            "description"
          ],
          "rationale": null
        }
      ],
      "priority": 3400,
      "explanation": "This semantic type identifies standardized single-letter codes used in the automotive and insurance industries to classify vehicle fuel systems. Common codes include G (Gasoline), D (Diesel), E (Electric), H (Hybrid), P (Propane/LPG), N (Natural Gas), B (Biodiesel), F (Flex Fuel), L (Liquefied Petroleum Gas), C (Compressed Natural Gas), M (Methanol), A (Alternative), and O (Other). These codes are critical for insurance risk assessment, environmental impact calculations, regulatory compliance, and fleet management systems. The standardized format ensures consistent data exchange between manufacturers, insurers, and regulatory bodies.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:33:06.305766"
    },
    {
      "resultType": "generated",
      "semanticType": "Length",
      "description": "Vehicle length measurement as a numeric value representing the total longitudinal dimension specification, used for classification, parking, storage, and operational risk assessments",
      "pluginType": "regex",
      "regexPattern": "\\d+(?:\\.\\d+)?\\s*(?:ft|feet|foot|in|inch|inches|m|meter|meters|metre|metres|mm|millimeter|millimeters|millimetre|millimetres|cm|centimeter|centimeters|centimetre|centimetres)?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "15.5 ft",
        "4.8 meters",
        "186 inches",
        "5200 mm",
        "17.2",
        "4.2 m",
        "180.5 in",
        "520 cm"
      ],
      "negativeContentExamples": [
        "15.5 mph",
        "4.8 gallons",
        "186 lbs",
        "5200 rpm",
        "ABC123",
        "2023-01-15",
        "john@email.com",
        "-15.5 ft"
      ],
      "positiveHeaderExamples": [
        "vehicle_length",
        "car_length_ft",
        "length_meters",
        "overall_length",
        "auto_length_spec",
        "len_mm",
        "vehicle_len",
        "length_dimension"
      ],
      "negativeHeaderExamples": [
        "vehicle_width",
        "car_height_ft",
        "weight_kg",
        "engine_size",
        "fuel_capacity",
        "year_manufactured",
        "vehicle_speed",
        "tire_pressure"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*vehicle.*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_length_ft"
          ],
          "negativeExamples": [
            "vehicle_width_ft"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*car.*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "car_length_meters"
          ],
          "negativeExamples": [
            "car_height_meters"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*auto.*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "auto_length_spec"
          ],
          "negativeExamples": [
            "auto_width_spec"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*overall.*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "overall_length"
          ],
          "negativeExamples": [
            "overall_width"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*len.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "len_ft"
          ],
          "negativeExamples": [
            "wid_ft"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*length.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "length"
          ],
          "negativeExamples": [
            "width"
          ],
          "rationale": null
        }
      ],
      "priority": 3410,
      "explanation": "This semantic type identifies vehicle length measurements in datasets. It captures numeric values with optional decimal places followed by common length units (feet, meters, inches, millimeters, centimeters) or standalone numeric values that represent vehicle dimensions. The pattern is designed to support various unit formats and abbreviations commonly used in automotive specifications. This type is essential for vehicle classification systems, parking management, transportation logistics, and regulatory compliance where vehicle dimensions determine operational parameters and restrictions.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:33:38.546808"
    },
    {
      "resultType": "generated",
      "semanticType": "Weight",
      "description": "Vehicle weight specification as a numeric measurement representing the total mass for classification and rating purposes, typically expressed in pounds or kilograms",
      "pluginType": "regex",
      "regexPattern": "\\d{3,6}(\\.\\d{1,2})?\\s*(lbs?|pounds?|kg|kilograms?|tons?)?",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "3500",
        "4250 lbs",
        "2850.5",
        "5200 pounds",
        "1800 kg",
        "6500.25 lbs",
        "3200 kilograms",
        "4800.0"
      ],
      "negativeContentExamples": [
        "35",
        "ABC123",
        "12 inches",
        "V8 Engine",
        "Red",
        "Toyota Camry",
        "25 mpg"
      ],
      "positiveHeaderExamples": [
        "vehicle_weight",
        "car_weight_lbs",
        "gross_vehicle_weight",
        "curb_weight",
        "weight_specification",
        "auto_weight_kg",
        "total_vehicle_weight",
        "wt_spec"
      ],
      "negativeHeaderExamples": [
        "vehicle_length",
        "cargo_weight",
        "weight_limit",
        "vehicle_height",
        "engine_weight",
        "payload_capacity",
        "towing_capacity",
        "fuel_weight"
      ],
      "confidenceThreshold": 88.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*(vehicle|car|truck|auto).*weight.*(lbs?|kg|pounds?|kilograms?|specification|spec).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_weight_lbs"
          ],
          "negativeExamples": [
            "vehicle_height_inches"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(gross|curb|dry|net|total|max|maximum).*weight.*(vehicle|auto|car).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "gross_weight_vehicle"
          ],
          "negativeExamples": [
            "gross_weight_cargo"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(vehicle|auto|car|truck).*weight.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "vehicle_weight"
          ],
          "negativeExamples": [
            "vehicle_length"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*weight.*(vehicle|auto|car|truck).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "weight_vehicle_spec"
          ],
          "negativeExamples": [
            "weight_cargo_limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(wt|weight).*(spec|specification).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "wt_specification"
          ],
          "negativeExamples": [
            "height_specification"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*(weight|wt).*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "weight"
          ],
          "negativeExamples": [
            "height"
          ],
          "rationale": null
        }
      ],
      "priority": 3420,
      "explanation": "This semantic type identifies vehicle weight specifications used for classification, insurance rating, and regulatory compliance. It captures numeric weight values that may include units like pounds, kilograms, or tons. The pattern is designed to match typical vehicle weight ranges (1000-100000+ lbs or equivalent in kg) while excluding obviously incorrect values like single/double digit numbers that wouldn't represent realistic vehicle weights. This type is crucial for automotive data analysis, insurance risk assessment, and vehicle specification databases.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "description_pattern": "P2",
      "generated_at": "2025-08-08T09:34:13.394681"
    }
  ]
}