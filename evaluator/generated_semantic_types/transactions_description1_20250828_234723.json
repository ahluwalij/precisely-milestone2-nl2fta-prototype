{
  "dataset": "transactions",
  "description_number": 1,
  "timestamp": "20250828_234723",
  "generated_types": [
    {
      "resultType": "generated",
      "semanticType": "LoginAttempts",
      "description": "The number of authentication attempts made by a customer before successfully accessing their account for the transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "3",
        "5",
        "10",
        "1",
        "7",
        "12"
      ],
      "negativeContentExamples": [
        "three",
        "five",
        "ten",
        "one",
        "seven",
        "twelve"
      ],
      "positiveHeaderExamples": [
        "Login Attempts",
        "Attempt Count"
      ],
      "negativeHeaderExamples": [
        "Failed Attempts",
        "Retry Count"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*login.*attempts.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Login Attempts"
          ],
          "negativeExamples": [
            "Failed Attempts"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempt Count"
          ],
          "negativeExamples": [
            "Retry Count"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*attempt.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Attempts"
          ],
          "negativeExamples": [
            "Retries"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*count.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Count"
          ],
          "negativeExamples": [
            "Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 4600,
      "explanation": "This semantic type identifies the number of login attempts made by a user before successfully accessing their account. It is useful for tracking authentication attempts and can help in identifying potential security issues or user behavior patterns.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "7c57a8e0-60b2-411f-ab16-5fda4987cce5"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDuration",
      "description": "The time elapsed in seconds from transaction initiation to completion, used for performance monitoring and fraud detection.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d+\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "120",
        "3600",
        "45",
        "300",
        "180",
        "600"
      ],
      "negativeContentExamples": [
        "1.5 hours",
        "two minutes",
        "3:00",
        "1 hour",
        "00:05:00",
        "five hundred"
      ],
      "positiveHeaderExamples": [
        "Transaction Duration",
        "Duration"
      ],
      "negativeHeaderExamples": [
        "Session Duration",
        "Processing Time"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Session Duration"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*secs.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Duration (secs)"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*duration.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Processing Time"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*time.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Duration"
          ],
          "negativeExamples": [
            "Session Duration"
          ],
          "rationale": null
        }
      ],
      "priority": 4610,
      "explanation": "This semantic type represents the duration of a transaction in seconds, which is crucial for performance monitoring and fraud detection. It is identified by numeric values representing seconds and specific header patterns indicating transaction-related durations.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "ae85497b-6a8b-4311-9a14-fe72cc1e790b"
    },
    {
      "resultType": "generated",
      "semanticType": "IP Address",
      "description": "The internet protocol address of the network connection used during a financial transaction, enabling digital forensics and security analysis.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "192.168.1.1",
        "10.0.0.1",
        "172.16.254.1",
        "8.8.8.8",
        "255.255.255.255",
        "127.0.0.1"
      ],
      "negativeContentExamples": [
        "192.168.1.256",
        "10.0.0.999",
        "172.16.254.300",
        "8.8.8.8.8",
        "255.255.255",
        "127.0.0.1.1"
      ],
      "positiveHeaderExamples": [
        "IP Address",
        "Source IP"
      ],
      "negativeHeaderExamples": [
        "MAC Address",
        "Address"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*ip\\s*address.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP Address"
          ],
          "negativeExamples": [
            "MAC Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*source\\s*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Source IP"
          ],
          "negativeExamples": [
            "Address"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ip.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "IP"
          ],
          "negativeExamples": [
            "MAC"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*address.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Address"
          ],
          "negativeExamples": [
            "MAC Address"
          ],
          "rationale": null
        }
      ],
      "priority": 4620,
      "explanation": "This semantic type identifies IP addresses used in network connections, which are crucial for digital forensics and security analysis in financial transactions. The regex pattern matches IPv4 addresses, ensuring accurate identification of valid IP addresses.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "815f7307-573b-490b-b5f1-5cb3f0f15bed"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionType",
      "description": "The classification of a transaction indicating whether funds are being added to or removed from an account.",
      "baseType": "STRING",
      "pluginType": "list",
      "regexPattern": null,
      "listValues": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND",
        "CHARGE",
        "REVERSAL"
      ],
      "backout": "^[A-Z_]{4,12}$",
      "positiveContentExamples": [
        "CREDIT",
        "DEBIT",
        "WITHDRAWAL",
        "DEPOSIT",
        "TRANSFER_IN",
        "TRANSFER_OUT",
        "PAYMENT",
        "REFUND"
      ],
      "negativeContentExamples": [
        "ACCOUNT",
        "METHOD",
        "USER",
        "EMAIL",
        "ADDRESS",
        "PHONE",
        "DATE",
        "NUMBER"
      ],
      "positiveHeaderExamples": [
        "Transaction Type",
        "Txn Direction",
        "Transaction",
        "Txn",
        "Type"
      ],
      "negativeHeaderExamples": [
        "Account Type",
        "Payment Method",
        "User Email",
        "Address",
        "Phone Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Type"
          ],
          "negativeExamples": [
            "Account Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*direction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Direction"
          ],
          "negativeExamples": [
            "Payment Method"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction"
          ],
          "negativeExamples": [
            "Account"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn"
          ],
          "negativeExamples": [
            "Acc"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*type.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Type"
          ],
          "negativeExamples": [
            "Method"
          ],
          "rationale": null
        }
      ],
      "priority": 4630,
      "explanation": "This semantic type is used to classify transactions based on their direction, indicating whether funds are being added to or removed from an account. It helps in identifying the nature of the transaction for financial analysis and reporting.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "1591cfd1-996b-4367-bcae-06fe2cef103c"
    },
    {
      "resultType": "generated",
      "semanticType": "CustomerAge",
      "description": "The age of the customer in years at the time of the transaction, used for demographic analysis and risk assessment.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "\\b\\d{1,3}\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "25",
        "42",
        "18",
        "65",
        "30",
        "99"
      ],
      "negativeContentExamples": [
        "-5",
        "Age: 30",
        "Thirty",
        "3.5"
      ],
      "positiveHeaderExamples": [
        "Customer Age",
        "Age"
      ],
      "negativeHeaderExamples": [
        "Account Age",
        "Years Since Opening"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*customer.*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Age"
          ],
          "negativeExamples": [
            "Account Age"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age (years)"
          ],
          "negativeExamples": [
            "Years Since Opening"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*age.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Age"
          ],
          "negativeExamples": [
            "Years"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*years.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Years"
          ],
          "negativeExamples": [
            "Months"
          ],
          "rationale": null
        }
      ],
      "priority": 4640,
      "explanation": "This semantic type represents the age of a customer in years, which is crucial for demographic analysis and risk assessment in various business contexts. It is identified by numeric values typically ranging from 0 to 120, and is often labeled in datasets with terms like \"Customer Age\" or \"Age (years)\".",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "9de14303-398a-4748-95e5-06677e0c8f89"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionID",
      "description": "A unique transaction identifier that enables tracking and referencing of individual financial transactions across banking systems.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(transaction_id|txn_id|reference|ref_id)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "123456",
        "2023-01-01",
        "John Doe",
        "user@example.com",
        "1234-5678-9012-3456",
        "01/01/2023"
      ],
      "positiveHeaderExamples": [
        "Transaction ID",
        "TX Reference",
        "Ref ID",
        "Txn ID",
        "Reference",
        "Transaction_ID"
      ],
      "negativeHeaderExamples": [
        "User ID",
        "Transaction Date",
        "Account Number",
        "Account Balance",
        "Customer Name",
        "Email Address"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction ID"
          ],
          "negativeExamples": [
            "User ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "TXN ID"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*reference.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "TX Reference"
          ],
          "negativeExamples": [
            "Account Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*ref_id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Ref ID"
          ],
          "negativeExamples": [
            "Account Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        }
      ],
      "priority": 4650,
      "explanation": "This semantic type is used to identify unique transaction identifiers in banking systems. These identifiers are crucial for tracking and referencing individual transactions, ensuring accurate record-keeping and facilitating financial audits.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "0eb1c654-be97-4609-ac6c-b19860c47764"
    },
    {
      "resultType": "generated",
      "semanticType": "MerchantID",
      "description": "A unique code identifying the merchant or business entity involved in a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(?:merchant|business|entity)[-_ ]?(?:id|code)\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "Store-12345",
        "Vendor-67890",
        "Customer-00123",
        "Product-98765",
        "Order-54321",
        "Invoice-67890"
      ],
      "positiveHeaderExamples": [
        "Merchant ID",
        "Merchant Code",
        "Business ID",
        "Entity Code",
        "Merchant Identifier",
        "Business Entity ID"
      ],
      "negativeHeaderExamples": [
        "Store Name",
        "Vendor Name",
        "Customer ID",
        "Product Code",
        "Order Number",
        "Invoice ID"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*merchant[_-]?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*merchant[_-]?code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant Code"
          ],
          "negativeExamples": [
            "Vendor Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*merchant.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant ID"
          ],
          "negativeExamples": [
            "Store Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Merchant Code"
          ],
          "negativeExamples": [
            "Vendor Name"
          ],
          "rationale": null
        }
      ],
      "priority": 4660,
      "explanation": "This semantic type is used to identify unique codes associated with merchants or business entities in financial transactions. It helps in categorizing and processing transaction data by linking it to specific merchants or businesses.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "3def5673-5ce9-4861-8c28-9a3e485ca26b"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionAmount",
      "description": "The monetary value involved in a financial transaction, representing the amount being transferred, debited, or credited.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b\\d{1,3}(?:,\\d{3})*(?:\\.\\d{2})?\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1,234.56",
        "100.00",
        "5,678.90",
        "0.99",
        "12,345.67",
        "987,654.32"
      ],
      "negativeContentExamples": [
        "1234,56",
        "100,00",
        "5.678,90",
        "0,99",
        "12.345,67",
        "987.654,32"
      ],
      "positiveHeaderExamples": [
        "Transaction Amount",
        "Amount",
        "Amount",
        "Value",
        "Transaction Value",
        "Payment Amount"
      ],
      "negativeHeaderExamples": [
        "Transaction Date",
        "Balance",
        "Account Number",
        "Customer ID",
        "Invoice Date",
        "Order Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Amount"
          ],
          "negativeExamples": [
            "Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*usd.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount (USD)"
          ],
          "negativeExamples": [
            "Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 4670,
      "explanation": "This semantic type represents the monetary value involved in financial transactions, such as amounts being transferred, debited, or credited. It is crucial for identifying and processing financial data accurately in various applications, including accounting, banking, and e-commerce.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "d9eed117-7750-459b-9bc4-37b2405e79b4"
    },
    {
      "resultType": "generated",
      "semanticType": "TransactionDate",
      "description": "The date and time when a financial transaction occurred, used for chronological tracking and reporting purposes.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "2023-10-15T14:30:00Z",
        "2022-05-01T08:45:30+02:00",
        "2021-12-31T23:59:59-05:00",
        "2020-07-20T12:00:00.000Z",
        "2019-11-11T11:11:11.111+01:00",
        "2018-03-03T03:03:03-03:00"
      ],
      "negativeContentExamples": [
        "2023/10/15 14:30:00",
        "15-10-2023 14:30",
        "2023-10-15",
        "14:30:00",
        "Transaction ID: 12345",
        "Created on 2023-10-15"
      ],
      "positiveHeaderExamples": [
        "Transaction Date",
        "Txn Timestamp"
      ],
      "negativeHeaderExamples": [
        "Transaction ID",
        "Date Created"
      ],
      "confidenceThreshold": 95.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*transaction.*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*timestamp.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Date Created"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*txn.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Txn Timestamp"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Transaction ID"
          ],
          "rationale": null
        }
      ],
      "priority": 4680,
      "explanation": "This semantic type is used to identify and classify data that represents the date and time of financial transactions. It is crucial for chronological tracking and reporting in financial datasets. The regex pattern is designed to match ISO 8601 date-time formats, which are commonly used in transaction records.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "087699b6-5ca8-4f41-be53-7ca40d23533e"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountID",
      "description": "A bank account identifier that uniquely represents a customer's financial account within the banking institution.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i).*account.*id.*|.*acct.*id.*|.*account.*number.*",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "John Doe",
        "Balance: $1000",
        "2023-10-01",
        "Transaction ID: 12345",
        "Customer Name",
        "Account Balance"
      ],
      "positiveHeaderExamples": [
        "Account ID",
        "Customer Account Code",
        "Acct ID",
        "Account Number",
        "Account Identifier",
        "Account No"
      ],
      "negativeHeaderExamples": [
        "Account Balance",
        "Customer Name",
        "Transaction Date",
        "Opening Date",
        "Balance ID",
        "Customer ID"
      ],
      "confidenceThreshold": 97.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account ID"
          ],
          "negativeExamples": [
            "Account Balance"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*customer.*account.*code.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Customer Account Code"
          ],
          "negativeExamples": [
            "Customer Name"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*acct.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Acct ID"
          ],
          "negativeExamples": [
            "Balance ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*account.*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Number"
          ],
          "negativeExamples": [
            "Transaction Number"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "ID"
          ],
          "negativeExamples": [
            "Name"
          ],
          "rationale": null
        }
      ],
      "priority": 4690,
      "explanation": "This semantic type is used to identify columns or data values that represent a unique identifier for a bank account. It is crucial for distinguishing individual accounts within a banking system, ensuring accurate tracking and management of financial transactions and customer information.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "cc296a98-43ae-4918-81da-bfeb821cc79b"
    },
    {
      "resultType": "generated",
      "semanticType": "AccountBalance",
      "description": "The current monetary balance in the customer's account at the time of the transaction, expressed in the account's base currency.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^\\d+(\\.\\d{1,2})?$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "1000.00",
        "250.50",
        "0.99",
        "123456.78",
        "500",
        "75.25"
      ],
      "negativeContentExamples": [
        "1000,00",
        "250.5.0",
        "abc",
        "1234.567",
        "-500",
        "75.2a"
      ],
      "positiveHeaderExamples": [
        "Account Balance",
        "Current Balance",
        "Balance",
        "Account Current Balance",
        "Customer Balance",
        "Available Balance"
      ],
      "negativeHeaderExamples": [
        "Balance Change",
        "Credit Limit",
        "Transaction Amount",
        "Interest Rate",
        "Loan Amount",
        "Deposit"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*account.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Account Balance"
          ],
          "negativeExamples": [
            "Balance Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*current.*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Current Balance"
          ],
          "negativeExamples": [
            "Credit Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*balance.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Balance"
          ],
          "negativeExamples": [
            "Limit"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*amount.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Amount"
          ],
          "negativeExamples": [
            "Change"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*value.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Value"
          ],
          "negativeExamples": [
            "Rate"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*number.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Number"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 4700,
      "explanation": "This semantic type represents the current monetary balance in a customer's account, typically expressed in the account's base currency. It is used to identify and classify data fields that store account balance information, which is crucial for financial transactions and account management.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "5778933e-8c43-4c07-8dbd-e0c5bd4cce6c"
    },
    {
      "resultType": "generated",
      "semanticType": "DeviceID",
      "description": "A unique identifier for the electronic device used to initiate or authorize a financial transaction.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "[A-Fa-f0-9]{8,32}",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "ABCDEF1234567890",
        "12345678ABCDEF12",
        "FEDCBA9876543210",
        "0011223344556677"
      ],
      "negativeContentExamples": [
        "12345",
        "ABCDEFGH",
        "1234-5678-ABCD",
        "Device123",
        "CustomerID123",
        "123456789012345678901234567890123"
      ],
      "positiveHeaderExamples": [
        "Device ID",
        "D‑ID",
        "Device Identifier",
        "Device Identification",
        "DeviceID",
        "Device-Id"
      ],
      "negativeHeaderExamples": [
        "Customer ID",
        "Device Type",
        "Transaction ID",
        "Order ID",
        "Product ID",
        "Serial Number"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*device.*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*d-?id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "D‑ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*device.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Customer ID"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*id.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Device ID"
          ],
          "negativeExamples": [
            "Device Type"
          ],
          "rationale": null
        }
      ],
      "priority": 4710,
      "explanation": "This semantic type is used to identify unique device identifiers that are typically alphanumeric strings used in financial transactions. These identifiers are crucial for tracking and authorizing transactions initiated by electronic devices.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "fb26e5ad-1e34-4cbb-b8a6-f0b922edeb64"
    },
    {
      "resultType": "generated",
      "semanticType": "Location",
      "description": "The geographic location where a financial transaction was initiated or processed, typically represented as a city name.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)^[A-Za-z]+(?:[\\s-][A-Za-z]+)*$",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [
        "New York",
        "Los Angeles",
        "Chicago",
        "San Francisco",
        "Miami",
        "Dallas"
      ],
      "negativeContentExamples": [
        "12345",
        "40.7128° N",
        "10001"
      ],
      "positiveHeaderExamples": [
        "Location",
        "Branch Location",
        "City",
        "Place",
        "Area",
        "Location Name"
      ],
      "negativeHeaderExamples": [
        "Latitude",
        "Country Code",
        "Postal Code",
        "Region",
        "Zone",
        "State"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*branch.*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Branch Location"
          ],
          "negativeExamples": [
            "Latitude"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*location.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Location"
          ],
          "negativeExamples": [
            "Country Code"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*city.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "City"
          ],
          "negativeExamples": [
            "State"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*place.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Place"
          ],
          "negativeExamples": [
            "Region"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*area.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Area"
          ],
          "negativeExamples": [
            "Zone"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*name.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Name"
          ],
          "negativeExamples": [
            "Code"
          ],
          "rationale": null
        }
      ],
      "priority": 4720,
      "explanation": "This semantic type is used to identify city names that represent the location where a financial transaction was initiated or processed. It is useful in datasets where geographic analysis of transactions is required, such as in financial reporting or market analysis.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "e65f54a1-4a23-4348-9df0-62b82c338f6d"
    },
    {
      "resultType": "generated",
      "semanticType": "PreviousTransactionDate",
      "description": "The timestamp of the most recent transaction that occurred before the current transaction on the same account.",
      "baseType": "STRING",
      "pluginType": "regex",
      "regexPattern": "(?i)\\b(?:previous|last)\\s+transaction\\s+date\\b",
      "listValues": [],
      "backout": null,
      "positiveContentExamples": [],
      "negativeContentExamples": [
        "2023-10-01T14:30:00Z",
        "2023-09-16 12:00:00",
        "2023/08/21 08:45:00",
        "16-09-2023 14:30",
        "02-Aug-2023 12:00",
        "21/07/2023 08:45"
      ],
      "positiveHeaderExamples": [
        "Previous Transaction Date",
        "Last Transaction Date",
        "Prior Transaction Date",
        "Previous Date of Transaction",
        "Last Date of Transaction",
        "Prior Date of Transaction"
      ],
      "negativeHeaderExamples": [
        "Next Transaction Date",
        "Original Date",
        "Future Transaction Date",
        "Initial Transaction Date",
        "Upcoming Transaction Date",
        "First Transaction Date"
      ],
      "confidenceThreshold": 90.0,
      "headerPatterns": [
        {
          "regExp": "(?i).*previous\\s+transaction\\s+date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Previous Transaction Date"
          ],
          "negativeExamples": [
            "Next Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*last\\s+transaction\\s+date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Last Transaction Date"
          ],
          "negativeExamples": [
            "Original Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*transaction\\s+date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Transaction Date"
          ],
          "negativeExamples": [
            "Next Transaction Date"
          ],
          "rationale": null
        },
        {
          "regExp": "(?i).*date.*",
          "confidence": 99,
          "mandatory": false,
          "positiveExamples": [
            "Date"
          ],
          "negativeExamples": [
            "Next Date"
          ],
          "rationale": null
        }
      ],
      "priority": 4730,
      "explanation": "This semantic type is used to identify the date and time of the most recent transaction that occurred before the current transaction on the same account. It is useful for financial analysis, auditing, and tracking transaction history.",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "3ed05027-5ce8-4d75-a590-b0bdb2e62040"
    },
    {
      "resultType": "error",
      "semanticType": "Channel",
      "description": null,
      "baseType": "STRING",
      "pluginType": null,
      "regexPattern": null,
      "listValues": null,
      "backout": null,
      "positiveContentExamples": null,
      "negativeContentExamples": null,
      "positiveHeaderExamples": null,
      "negativeHeaderExamples": null,
      "confidenceThreshold": 0.0,
      "headerPatterns": null,
      "priority": 4740,
      "explanation": "Failed to parse Claude response - no valid JSON or XML found",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "5b2b85bd-3a08-497d-9ba0-cb7394adc5c5"
    },
    {
      "resultType": "error",
      "semanticType": "CustomerOccupation",
      "description": null,
      "baseType": "STRING",
      "pluginType": null,
      "regexPattern": null,
      "listValues": null,
      "backout": null,
      "positiveContentExamples": null,
      "negativeContentExamples": null,
      "positiveHeaderExamples": null,
      "negativeHeaderExamples": null,
      "confidenceThreshold": 0.0,
      "headerPatterns": null,
      "priority": 4750,
      "explanation": "Failed to parse Claude response - no valid JSON or XML found",
      "existingTypeMatch": null,
      "existingTypeDescription": null,
      "existingTypePattern": null,
      "existingTypeHeaderPatterns": null,
      "existingTypeIsBuiltIn": false,
      "suggestedAction": null,
      "comparison": null,
      "correlationId": "98ead469-45d1-4ebe-a107-bf379aaa8154"
    }
  ]
}