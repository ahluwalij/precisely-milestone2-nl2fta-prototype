[
  {
    "resultType": "generated",
    "semanticType": "min",
    "description": "Free-form narrative or descriptive text intended for human reading. Typically multi-word sentences or phrases conveying context, remarks, explanations, or notes. Excludes structured identifiers, dates, amounts, or single-token codes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b([ ,;:./-]+\\b[A-Za-z]{2,}\\b){1,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9320,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|order|case).*(description|notes|comments|narrative|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(case|support|ticket).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_notes"
        ],
        "negativeExamples": [
          "id"
        ]
      },
      {
        "regExp": "(?i).*(user|customer|applicant).*(comments|comment|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_comments"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*(description|desc|details|remarks|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "quantity"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached document before tomorrow.",
      "Customer reported intermittent login issues after the update.",
      "The package arrived damaged and requires immediate inspection.",
      "Notes indicate delayed response due to network outage.",
      "This item is discontinued and will not be restocked.",
      "Add a brief summary of the changes made in this release.",
      "Comments: user experienced a timeout during checkout.",
      "Description provided by the applicant is incomplete."
    ],
    "negativeContentExamples": [
      "2024-08-15",
      "$19.99",
      "ID12345",
      "1234567890",
      "N/A",
      "OK",
      "Pending",
      "3 items"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Details",
      "Remarks",
      "Narrative Text",
      "Additional Notes",
      "Product Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Quantity",
      "Amount",
      "Email",
      "Phone"
    ],
    "explanation": "This semantic type identifies unstructured, human-readable narrative fields such as descriptions, notes, and comments. It is useful for separating free-text context from structured identifiers, dates, or numeric measures in datasets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:37.138955"
  },
  {
    "resultType": "generated",
    "semanticType": "date",
    "description": "Standard Unix epoch timestamp in seconds, represented as a 9\u201310 digit positive integer without delimiters. This matches integer seconds since 1970-01-01T00:00:00Z and explicitly excludes millisecond (13-digit) values and formatted date/time strings.",
    "pluginType": "regex",
    "regexPattern": "\\b\\d{9,10}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9060,
    "headerPatterns": [
      {
        "regExp": "(?i).*unix.*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Formatted Date"
        ]
      },
      {
        "regExp": "(?i).*epoch.*second.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Seconds"
        ],
        "negativeExamples": [
          "Time"
        ]
      },
      {
        "regExp": "(?i).*epoch.*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*[\\s_\\-]ts\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_ts"
        ],
        "negativeExamples": [
          "test"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      }
    ],
    "positiveContentExamples": [
      "315532800",
      "631152000",
      "915148800",
      "946684800",
      "1000000000",
      "1234567890",
      "1609459200",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "946684800.0",
      "1,609,459,200",
      "1609459200Z",
      "01609459200",
      "2021-01-01",
      "170406720",
      "-1609459200"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Epoch Seconds",
      "Unix Time Seconds",
      "Created Timestamp"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Created Date",
      "UTC Time",
      "ISO Date"
    ],
    "explanation": "This semantic type identifies Unix epoch timestamps expressed in seconds, suitable for detecting numeric fields that represent time as integer seconds since the Unix epoch. It is useful for parsing and converting timestamps into human-readable dates or for time-based computations while avoiding misclassification of millisecond timestamps or formatted date/time strings.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:39.445893"
  },
  {
    "resultType": "generated",
    "semanticType": "state",
    "description": "Complete American state designation: full United States state names spelled out (e.g., California, New York, Rhode Island). Excludes abbreviations, postal codes, territories, or districts; values must be the full state name.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New Hampshire|New Jersey|New Mexico|New York|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9140,
    "headerPatterns": [
      {
        "regExp": "(?i).*(united states|usa|us).*state.*name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "US State Name"
        ],
        "negativeExamples": [
          "US State Code"
        ]
      },
      {
        "regExp": "(?i).*(united states|usa|us).*state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State"
        ],
        "negativeExamples": [
          "State Tax"
        ]
      },
      {
        "regExp": "(?i).*state.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*state.*",
        "confidence": 92,
        "mandatory": false,
        "positiveExamples": [
          "State"
        ],
        "negativeExamples": [
          "County"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New York",
      "Rhode Island",
      "North Dakota",
      "South Carolina",
      "West Virginia",
      "New Mexico",
      "Illinois"
    ],
    "negativeContentExamples": [
      "NewYork",
      "Washington D.C.",
      "District of Columbia",
      "Puerto Rico",
      "CA",
      "United States",
      "Californi",
      "New York City"
    ],
    "positiveHeaderExamples": [
      "State",
      "State Name",
      "US State",
      "US State Name",
      "United States State",
      "American State Name",
      "US St Name"
    ],
    "negativeHeaderExamples": [
      "State Code",
      "Country",
      "County",
      "Province",
      "Region",
      "Status",
      "State Tax"
    ],
    "explanation": "This semantic type targets cells containing full United States state names only. It is useful for normalizing, validating, and joining datasets on spelled-out state names and for distinguishing full names from two-letter postal codes or other regional terms.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:41.468906"
  },
  {
    "resultType": "generated",
    "semanticType": "domain",
    "description": "Complete web address (URL) used to access a network resource via HTTP, HTTPS, or FTP. Supports optional subdomains, ports, paths, queries, and fragments, but requires a scheme.\nExcludes bare domains, email addresses, and local/file paths to ensure only fully qualified URLs are identified.",
    "pluginType": "regex",
    "regexPattern": "\\b((https?|ftp)://)((www)\\.)?[A-Za-z0-9][A-Za-z0-9\\-]{0,61}[A-Za-z0-9](\\.[A-Za-z]{2,63})+(:[0-9]{2,5})?(/[A-Za-z0-9._~:/?#\\[\\]@!$&'()*+,;=%-]*)?",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9340,
    "headerPatterns": [
      {
        "regExp": "(?i).*(website|web).*(address|url).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Web Address"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      },
      {
        "regExp": "(?i).*(landing|page|resource).*(url|uri).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Landing Page URL"
        ],
        "negativeExamples": [
          "File Path"
        ]
      },
      {
        "regExp": "(?i).*(uniform resource|uri).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Resource URI"
        ],
        "negativeExamples": [
          "Domain Name"
        ]
      },
      {
        "regExp": "(?i).*(hyperlink|href|link).*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Hyperlink"
        ],
        "negativeExamples": [
          "IP Address"
        ]
      },
      {
        "regExp": "(?i).*url.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "URL"
        ],
        "negativeExamples": [
          "Domain Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "https://example.com",
      "https://www.example.org/docs/index.html",
      "http://sub.example.co.uk/path/page?x=1&y=two",
      "https://example.com:8080/api/v2/status",
      "ftp://files.example.net/downloads/file.zip",
      "https://blog.example.io/?utm_source=newsletter#top",
      "http://example.travel/catalog/item-123?ref=home"
    ],
    "negativeContentExamples": [
      "www.example.com",
      "example.com/path",
      "http:/example.com",
      "https://example",
      "https://example..com",
      "mailto:user@example.com",
      "file:///var/www/index.html",
      "https://example .com/page"
    ],
    "positiveHeaderExamples": [
      "URL",
      "Website",
      "Web Address",
      "Website URL",
      "Page URL",
      "Landing Page URL",
      "Resource URI"
    ],
    "negativeHeaderExamples": [
      "Domain Name",
      "Email Address",
      "File Path",
      "IP Address",
      "Username",
      "Image Path",
      "Folder"
    ],
    "explanation": "This type identifies fully qualified web addresses used to locate network resources on the web, ensuring a scheme is present to distinguish from bare domains or other identifiers. Use it to detect and validate URL fields such as website links, landing page URLs, and resource URIs in datasets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:43.265452"
  },
  {
    "resultType": "generated",
    "semanticType": "location",
    "description": "GPS Position: comma-separated latitude-longitude pair. Accepts signed integers or decimals for latitude followed by a comma and longitude, allowing optional whitespace; latitude within -90 to 90 and longitude within -180 to 180.",
    "pluginType": "regex",
    "regexPattern": "[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)\\s*,\\s*[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|[1-9]?\\d(\\.\\d+)?)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9110,
    "headerPatterns": [
      {
        "regExp": "(?i).*(gps|geo).*coordinate[s]?.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "GPS Coordinates"
        ],
        "negativeExamples": [
          "GPS Address"
        ]
      },
      {
        "regExp": "(?i).*(lat|latitude)[^a-z0-9]+(long|longitude).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Lat Long"
        ],
        "negativeExamples": [
          "Latitude"
        ]
      },
      {
        "regExp": "(?i).*(map|location).*coordinate[s]?.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Location Coordinates"
        ],
        "negativeExamples": [
          "Location Address"
        ]
      },
      {
        "regExp": "(?i).*(lat[^a-z0-9]*long|latlong|ll).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "LatLong"
        ],
        "negativeExamples": [
          "Longitude"
        ]
      },
      {
        "regExp": "(?i).*coordinate.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Coordinates"
        ],
        "negativeExamples": [
          "Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "37.7749,-122.4194",
      "-33.8688,151.2093",
      "51.5074, -0.1278",
      "0,0",
      "+45.0, -93.2",
      "-90, 180",
      "12.345678,98.765432",
      "89.9999,179.9999"
    ],
    "negativeContentExamples": [
      "91,0",
      "-45 73",
      "45.0,-181",
      "95.123, 12.3",
      "12.3, -",
      "12.3, 34.5.6",
      "lat:12, lon:34",
      "12.34;56.78"
    ],
    "positiveHeaderExamples": [
      "Coordinates",
      "Lat Long",
      "GPS Coordinates",
      "Location Coordinates",
      "LatLong",
      "Map Coordinates"
    ],
    "negativeHeaderExamples": [
      "Latitude",
      "Longitude",
      "Address",
      "GeoPoint",
      "Location",
      "Street Address",
      "Postal Code"
    ],
    "explanation": "This semantic type identifies comma-separated latitude and longitude pairs commonly used for geospatial positioning. It supports signed integers or decimals, optional whitespace around the comma, and enforces valid numeric ranges for latitude and longitude. Typical use cases include mapping, geocoding, and spatial analytics where a single field stores both latitude and longitude.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:43.612032"
  },
  {
    "resultType": "generated",
    "semanticType": "id",
    "description": "record_key: unique alphanumeric code for entity identification",
    "pluginType": "regex",
    "regexPattern": "\\b(?=[A-Za-z0-9_-]{6,32}\\b)[A-Za-z0-9_-]*[A-Za-z][A-Za-z0-9_-]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9050,
    "headerPatterns": [
      {
        "regExp": "(?i).*record.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "record_id"
        ],
        "negativeExamples": [
          "record_date"
        ]
      },
      {
        "regExp": "(?i).*entity.*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "entity_identifier"
        ],
        "negativeExamples": [
          "entity_status"
        ]
      },
      {
        "regExp": "(?i).*unique.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "unique name"
        ]
      },
      {
        "regExp": "(?i).*(uid|id|ident).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "name"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "code"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "A1B2C3",
      "9Z7X5K",
      "CUST-000123",
      "user_7fA9Q2",
      "ACCNT-4D5E6F",
      "ID_ABC12345",
      "OBJ-92c7b1",
      "P1Q2R3S4"
    ],
    "negativeContentExamples": [
      "123456",
      "abcde",
      "A_B",
      "1234-5678",
      "A!B2C3",
      "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
      "0000_0000"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "record_id",
      "entity_identifier",
      "uid",
      "customer_id",
      "user_id"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "status",
      "amount",
      "email",
      "category"
    ],
    "explanation": "This semantic type captures generic alphanumeric identifiers used as record keys or entity IDs. It expects 6\u201332 characters composed of letters, digits, underscores, or hyphens, and requires at least one letter to avoid misclassifying purely numeric values. Typical use cases include database primary keys, user IDs, and system-generated identifiers where the column header indicates an identifier or code.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:44.547758"
  },
  {
    "resultType": "generated",
    "semanticType": "start",
    "description": "Unix epoch timestamp represented as whole seconds since 1970-01-01 00:00:00 UTC. Accepts only 10-digit integer values with no signs, separators, or fractional parts. Does not accept milliseconds (13 digits) or formatted date/time strings.",
    "pluginType": "regex",
    "regexPattern": "\\b[0-9]{10}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9380,
    "headerPatterns": [
      {
        "regExp": "(?i).*unix.*timestamp.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      },
      {
        "regExp": "(?i).*epoch.*time.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(epoch|unix).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Time"
        ],
        "negativeExamples": [
          "Formatted Date"
        ]
      },
      {
        "regExp": "(?i).*\\bts\\b.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Unix TS"
        ],
        "negativeExamples": [
          "ISO 8601"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Formatted Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "1000000000",
      "1234567890",
      "1420070400",
      "1609459200",
      "1697049600",
      "1700000000",
      "2147483647",
      "2524608000"
    ],
    "negativeContentExamples": [
      "1697049600000",
      "1697049600Z",
      "1,697,049,600",
      "1697049600.0",
      "-1697049600",
      "946684800",
      "99999999999",
      "169704960O"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Unix Time",
      "Epoch Seconds",
      "POSIX Timestamp",
      "Unix TS"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Datetime",
      "ISO 8601",
      "Start Time",
      "Human Readable Time"
    ],
    "explanation": "This semantic type identifies columns containing Unix epoch timestamps in seconds. It uses a strict 10-digit numeric pattern to reduce ambiguity with milliseconds and formatted timestamps. Header patterns prioritize explicit mentions of 'unix' or 'epoch' alongside 'timestamp' or 'time', then consider abbreviations and finally the primitive 'timestamp' term for broad coverage while maintaining precision.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:45.841602"
  },
  {
    "resultType": "generated",
    "semanticType": "parent",
    "description": "A full personal name consisting of a given name followed by a family name, separated by a single space. Supports internal hyphens or apostrophes within each name token.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-zA-Z'\u2019-]* [A-Z][a-zA-Z'\u2019-]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9370,
    "headerPatterns": [
      {
        "regExp": "(?i).*full[ _-]?name.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Full Name"
        ],
        "negativeExamples": [
          "First Name"
        ]
      },
      {
        "regExp": "(?i).*person[ _-]?name.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Person Name"
        ],
        "negativeExamples": [
          "Full Name"
        ]
      },
      {
        "regExp": "(?i).*contact[ _-]?name.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Contact Name"
        ],
        "negativeExamples": [
          "Company Name"
        ]
      },
      {
        "regExp": "(?i).*full.?name.*",
        "confidence": 91,
        "mandatory": true,
        "positiveExamples": [
          "Customer Fullname"
        ],
        "negativeExamples": [
          "First Name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Mary-Jane Watson",
      "James O'Connor",
      "Sarah Lee",
      "Jean-Luc Picard",
      "Peter O\u2019Toole",
      "Chloe De-Luca",
      "Alan McArthur"
    ],
    "negativeContentExamples": [
      "Smith, John",
      "John A. Smith",
      "John",
      "J. Smith",
      "John  Smith",
      "John-Smith",
      "Mary Ann Smith",
      "John_Smith"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Contact Name",
      "Customer Fullname",
      "User Name",
      "Employee Full Name",
      "Applicant Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Username",
      "Company Name",
      "Account ID",
      "Street Name",
      "Phone Number"
    ],
    "explanation": "Identifies columns where values are full personal names composed of exactly two tokens (given and family name) separated by a single space, allowing internal hyphens or apostrophes. Useful for datasets storing a single combined person name rather than separate first/last fields; tuned to reduce false positives through token and capitalization structure.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:47.169312"
  },
  {
    "resultType": "generated",
    "semanticType": "comment",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\u2019\\-]{1,}\\s+[A-Za-z][A-Za-z0-9'\u2019\\-]{1,}[\\sA-Za-z0-9'\u2019\\-,.!?:;()]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9200,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|user|client).*(comment|comments|note|notes).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Customer Comments"
        ],
        "negativeExamples": [
          "Order Comments"
        ]
      },
      {
        "regExp": "(?i).*(internal|agent).*(note|notes|memo|memos).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Internal Notes"
        ],
        "negativeExamples": [
          "Shipping Notes"
        ]
      },
      {
        "regExp": "(?i).*(comment|comments|remark|remarks|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Description"
        ]
      },
      {
        "regExp": "(?i).*(description|desc|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Comments"
        ]
      },
      {
        "regExp": "(?i).*(text|txt).*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please ship to the updated address.",
      "Customer reported a clicking noise on startup.",
      "Payment received; processing order now.",
      "This item arrived damaged and needs replacement.",
      "Meeting rescheduled to next Monday afternoon.",
      "Works as expected, no further action required.",
      "Note for support: reproduce after reboot.",
      "User requested expedited delivery, if possible."
    ],
    "negativeContentExamples": [
      "OK",
      "2024-05-10",
      "12345",
      "A12-345",
      "ID 98765",
      "$19.99",
      "john.smith@example.com",
      "N/A"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Customer Comments",
      "Internal Notes",
      "Free Text",
      "Additional Details",
      "Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status",
      "Email",
      "SKU",
      "Code"
    ],
    "explanation": "Free-form narrative or descriptive text commonly found in comment, notes, or description fields. This type captures multi-word human-readable text rather than structured identifiers, codes, or numeric/date values. Appropriate for fields intended to hold user-entered notes, feedback, or narrative descriptions.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:47.328604"
  },
  {
    "resultType": "generated",
    "semanticType": "type",
    "description": "Text content representing unrestricted narrative or descriptive text intended for human reading, typically consisting of multiple words and sentences rather than structured codes or numbers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z']{2,}\\s+[A-Za-z][A-Za-z']{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9030,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|product|issue).*(description|note|comment|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_issue_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Additional Notes"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|comment|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "cust_id"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "The customer reported a rattling sound during operation.",
      "Please handle with care; fragile components inside.",
      "Returned item due to incorrect size and color.",
      "Notes: package arrived late but undamaged.",
      "This field captures any additional context from the user.",
      "Payment delayed because the invoice was not received.",
      "User feedback indicates interest in extended warranty options."
    ],
    "negativeContentExamples": [
      "OK thanks",
      "in progress",
      "N/A reason",
      "2023-07-15",
      "A quick",
      "12345",
      "yes",
      "A12 B34"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Additional Notes",
      "General Comments",
      "Issue Narrative"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Amount",
      "Status",
      "Email"
    ],
    "explanation": "This semantic type identifies columns intended for free-form narrative or descriptive text, as opposed to structured identifiers, codes, or purely numeric values. It is useful for fields like descriptions, notes, and comments where multi-word human-readable content is expected.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:47.479736"
  },
  {
    "resultType": "generated",
    "semanticType": "part",
    "description": "Unrestricted narrative or descriptive text fields containing free-form sentences or phrases intended for human reading. Typically multi-word content that conveys descriptions, notes, remarks, or comments without a strict structural format.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z']+\\b([ ,;:\u2013-]+\\b[A-Za-z][A-Za-z']+\\b){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9210,
    "headerPatterns": [
      {
        "regExp": "(?i).*long.*description.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Long Description"
        ],
        "negativeExamples": [
          "Description"
        ]
      },
      {
        "regExp": "(?i).*detailed.*notes.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Notes"
        ],
        "negativeExamples": [
          "Notes"
        ]
      },
      {
        "regExp": "(?i).*public.*comments.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Public Comments"
        ],
        "negativeExamples": [
          "Comments"
        ]
      },
      {
        "regExp": "(?i).*(narrative|remarks|comments|notes|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Narrative Text"
        ],
        "negativeExamples": [
          "Product Code"
        ]
      },
      {
        "regExp": "(?i).*(desc|rmks|cmts|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Item Desc"
        ],
        "negativeExamples": [
          "Qty"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent outage during peak hours",
      "Includes all accessories and original packaging materials",
      "Please handle with care due to fragile components",
      "The device was installed yesterday without issues",
      "Further investigation is required to confirm root cause",
      "Provide a concise summary of the observed behavior",
      "This item shows minor cosmetic wear consistent with use"
    ],
    "negativeContentExamples": [
      "Short note",
      "See attached",
      "ID 45219",
      "2023-10-05",
      "Blue",
      "Price: $12.99",
      "John Doe"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Notes",
      "Long Description",
      "Public Comments",
      "Narrative Text",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "SKU",
      "Quantity",
      "Amount",
      "Code"
    ],
    "explanation": "This semantic type captures free-form narrative content such as descriptions, notes, remarks, and comments. Use it to identify columns and cells that contain human-readable, multi-word text without a rigid structure, distinct from identifiers, dates, or numeric amounts.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:48.706350"
  },
  {
    "resultType": "generated",
    "semanticType": "note",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z']{1,}( [A-Za-z0-9][A-Za-z0-9'/_-]{1,}){4,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9090,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(customer|internal|case|order|ticket)[ _-]?(notes?|comments?|description|desc)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Notes"
        ],
        "negativeExamples": [
          "Customer ID"
        ]
      },
      {
        "regExp": "(?i).*\\b(notes?|comments?|description|desc|remarks|memo)[ _-]?(text|details?)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description Text"
        ],
        "negativeExamples": [
          "Price Details"
        ]
      },
      {
        "regExp": "(?i).*\\b(internal|private|agent|staff)[ _-]?(notes?|comments?)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Internal Comments"
        ],
        "negativeExamples": [
          "Internal ID"
        ]
      },
      {
        "regExp": "(?i).*\\b(desc|descr|cmts?|cmt|note[_-]?txt|comment[_-]?txt)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*\\b(note|notes|comment|comments|description|desc)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer requested expedited shipping for this order.",
      "Please deliver to the side entrance after 5 pm.",
      "Payment received; apply credit to next invoice.",
      "Item arrived damaged, requesting replacement and return label.",
      "Follow up with client regarding project timeline changes.",
      "Leave package with the front desk if recipient is unavailable.",
      "Meeting rescheduled due to scheduling conflict next week.",
      "Notes include special handling and fragile packaging instructions."
    ],
    "negativeContentExamples": [
      "See note",
      "OK to ship",
      "Pending",
      "2024-03-01 update",
      "INV-12345 delayed",
      "ID 9983 24",
      "N/A",
      "Call me"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Internal Notes",
      "Customer Comments",
      "Order Description",
      "Remarks",
      "Memo"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Email",
      "Status",
      "Phone"
    ],
    "explanation": "This semantic type identifies free-form narrative or descriptive text fields typically used for comments, notes, or descriptions. It favors multi-word entries that resemble sentences or detailed remarks rather than short codes or identifiers. Use this to capture unstructured explanatory content and annotations across datasets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:52.047616"
  },
  {
    "resultType": "generated",
    "semanticType": "topic",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'\u2019-]*\\b([ ,.;:!?-]+\\b[A-Za-z][A-Za-z'\u2019-]*\\b){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9460,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|service).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Product ID"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|internal).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Comments"
        ],
        "negativeExamples": [
          "Customer ID"
        ]
      },
      {
        "regExp": "(?i).*(detailed|additional).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Notes"
        ],
        "negativeExamples": [
          "Additional Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|remarks|description).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Discount Amount"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "Message"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached document and let me know your thoughts.",
      "The customer reported intermittent connectivity issues over the weekend.",
      "This policy outlines the procedures for submitting reimbursement claims.",
      "A brief overview of the project timeline is provided below.",
      "The package arrived damaged, and the contents were partially missing.",
      "Notes from the meeting include action items and follow-up owners.",
      "Please contact support if additional details or clarification are required.",
      "The installation steps are listed below with warnings and precautions."
    ],
    "negativeContentExamples": [
      "In progress",
      "Pending approval",
      "N/A",
      "2024-08-11",
      "Approved",
      "See attachment",
      "Needs review by QA",
      "Contact: John Doe"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Detailed Notes",
      "Customer Comments",
      "Free Text",
      "Additional Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Invoice Number",
      "Country Code",
      "Quantity",
      "Email"
    ],
    "explanation": "Identifies narrative or descriptive free-text fields such as product descriptions, comments, and notes. The value regex requires at least five alphabetic words separated by common punctuation or spaces to capture substantive text while avoiding short labels, codes, and identifiers. Header patterns progress from specific business contexts to the primitive term 'text' to support robust schema-driven detection.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:52.509545"
  },
  {
    "resultType": "generated",
    "semanticType": "value",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "(\\b[A-Za-z]{2,}\\b[ ]+){3,}\\b[A-Za-z]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9430,
    "headerPatterns": [
      {
        "regExp": "(?i).*product.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*customer.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmt|cmts|remark|remarks|note).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "code"
        ]
      }
    ],
    "positiveContentExamples": [
      "The shipment was delayed due to severe weather conditions.",
      "Customer reported intermittent connectivity issues over the weekend.",
      "Please handle with care; fragile items are included in this order.",
      "This account has been inactive since last quarter and requires review.",
      "Payment received in full; no outstanding balance remains.",
      "Item arrived damaged with scratches on the left panel.",
      "The meeting has been rescheduled to next week after approval.",
      "Packaging should include user guide and accessory kit."
    ],
    "negativeContentExamples": [
      "OK",
      "Paid",
      "n/a",
      "2021-05-10 delivered",
      "A quick note",
      "REF-12345",
      "http://example.com",
      "42 units"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Customer Comments",
      "Internal Notes",
      "Free Text",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Quantity",
      "SKU",
      "Zip Code",
      "Status"
    ],
    "explanation": "This semantic type targets free-form narrative or descriptive text commonly found in description, notes, or comments fields. The value pattern prefers multi-word, sentence-like content by requiring at least four alphabetic words, reducing false positives from IDs, codes, or short labels. Header patterns prioritize strongly indicative names (e.g., product_description, customer_comments) down to a primitive match on text, ensuring robust identification while keeping conflicts with structured fields low.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:52.754868"
  },
  {
    "resultType": "generated",
    "semanticType": "name",
    "description": "Full personal name composed of a given/first name and a family/last name separated by a single space. Each part starts with an uppercase letter followed by lowercase letters and may include one internal hyphen or apostrophe. This excludes middle names/initials, suffixes/prefixes, and single-token names.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]+([\\-'][A-Za-z]+)? [A-Z][a-z]+([\\-'][A-Za-z]+)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9020,
    "headerPatterns": [
      {
        "regExp": "(?i).*full[ _-]?name.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Full Name"
        ],
        "negativeExamples": [
          "First Name"
        ]
      },
      {
        "regExp": "(?i).*(person|people)[ _-]?name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Person Name"
        ],
        "negativeExamples": [
          "Company Name"
        ]
      },
      {
        "regExp": "(?i).*customer[ _-]?name.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Customer Name"
        ],
        "negativeExamples": [
          "Customer Email"
        ]
      },
      {
        "regExp": "(?i).*cust[ _-]?name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "cust_name"
        ],
        "negativeExamples": [
          "cust_id"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Maria Garcia",
      "Anne-Marie O'Neill",
      "David Lee",
      "Jean-Pierre Dupont",
      "Oona O'Brien",
      "Luca Rossi",
      "Sarah Connor"
    ],
    "negativeContentExamples": [
      "John",
      "Smith, John",
      "John A. Smith",
      "J Smith",
      "John  Smith",
      "John-Smith",
      "Mary-Jane",
      "SMITH JOHN"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Customer Name",
      "Applicant Name",
      "Passenger Name",
      "Legal Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Username",
      "Company Name",
      "Middle Name",
      "Billing Address"
    ],
    "explanation": "This semantic type identifies full personal names consisting of exactly two tokens: first and last name separated by a single space. It enforces leading uppercase letters and allows a single internal hyphen or apostrophe in each token to handle common real-world name forms. It intentionally excludes records with middle names/initials, suffixes/prefixes, or formats like 'Last, First' to avoid ambiguity and reduce overlap with other name-related types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:53.851667"
  },
  {
    "resultType": "generated",
    "semanticType": "frequency",
    "description": "Unrestricted narrative or descriptive text intended for notes, comments, or descriptions. Typical values are multi-word sentences or phrases conveying human-readable information.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z']+\\b([ ,;:/\\-()\"'&]+\\b[A-Za-z][A-Za-z']+\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9250,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|case|ticket).*(description|notes|comments|remark|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(project|issue|record|entry).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_notes"
        ],
        "negativeExamples": [
          "project_code"
        ]
      },
      {
        "regExp": "(?i).*(free[ _]?text|remarks|commentary|cmts|desc).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed).*(text|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_text"
        ],
        "negativeExamples": [
          "long_date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent errors when saving the form.",
      "Leave a gift at the front desk; the courier will collect tomorrow morning.",
      "Handle with care \u2014 fragile glass inside the package.",
      "This item requires manual review before approval.",
      "User notes indicate repeated login failures after update.",
      "Deliver to side entrance near the loading bay.",
      "Payment was delayed due to bank holiday.",
      "The system should auto-archive records older than one year."
    ],
    "negativeContentExamples": [
      "Pending",
      "Needs review",
      "OK",
      "2024-08-15",
      "12345",
      "Item-12345",
      "Ship ASAP",
      "ID 98765"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Customer Description",
      "Order Notes",
      "Issue Comments",
      "Long Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Status",
      "Quantity",
      "Code",
      "Email"
    ],
    "explanation": "This semantic type targets free-form narrative text commonly found in fields like Description, Notes, or Comments. It emphasizes multi-word, human-readable phrases or sentences rather than structured codes, dates, or identifiers, and is configured with a cautious threshold and high priority to minimize conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:54.162333"
  },
  {
    "resultType": "generated",
    "semanticType": "code",
    "description": "Record_key: unique alphanumeric code for entity identification. Values contain letters and digits, optionally grouped with hyphens, and must include at least one letter. Purely numeric sequences and values with unsupported symbols are excluded.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b([a-z][a-z0-9]{3,15}|[a-z][a-z0-9]{1,5}-[a-z0-9]{2,8}(-[a-z0-9]{2,8})?|[0-9]{2,6}-[a-z][a-z0-9]{1,7}(-[a-z0-9]{2,8})?)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9230,
    "headerPatterns": [
      {
        "regExp": "(?i).*(record).*\\b(key|id|identifier|code)\\b.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "record_key"
        ],
        "negativeExamples": [
          "record_count"
        ]
      },
      {
        "regExp": "(?i).*(entity|object|resource).*\\b(id|identifier|code)\\b.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "entity_id"
        ],
        "negativeExamples": [
          "entity_name"
        ]
      },
      {
        "regExp": "(?i).*(unique|primary).*\\b(id|identifier|key)\\b.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "primary_email"
        ]
      },
      {
        "regExp": "(?i).*\\b(id|identifier)\\b.*",
        "confidence": 91,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*\\bcode\\b.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "code"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "A1B2C3",
      "X9Z7K2",
      "ABC1234",
      "ID9K4M7",
      "USR-0001",
      "2023-AB12",
      "QA-7F3K-99",
      "PROD-A12B"
    ],
    "negativeContentExamples": [
      "2023-04-05",
      "ABC",
      "123456",
      "A_1234",
      "code-",
      "AB12-CD-",
      "A1B2-C3D4-E5F6-G7",
      "ZYXWVU-123456789"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "Record Key",
      "Entity ID",
      "Resource Identifier",
      "Primary Key",
      "Customer Code"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "Status",
      "Username",
      "Email",
      "Count",
      "Version"
    ],
    "explanation": "This semantic type detects general-purpose alphanumeric record keys used to identify entities across datasets. It targets codes containing letters and digits, optionally split by hyphens, while rejecting purely numeric values, date-like strings, and tokens with unsupported characters.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:54.585530"
  },
  {
    "resultType": "generated",
    "semanticType": "district",
    "description": "Portuguese territory: district administrative unit. Identifies values that are the official names of the 18 mainland Portuguese distritos (districts), e.g., LISBOA, PORTO, SET\u00daBAL.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "AVEIRO",
      "BEJA",
      "BRAGA",
      "BRAGAN\u00c7A",
      "CASTELO BRANCO",
      "COIMBRA",
      "\u00c9VORA",
      "FARO",
      "GUARDA",
      "LEIRIA",
      "LISBOA",
      "PORTALEGRE",
      "PORTO",
      "SANTAR\u00c9M",
      "SET\u00daBAL",
      "VIANA DO CASTELO",
      "VILA REAL",
      "VISEU"
    ],
    "backout": "^[A-Z\u00c0-\u00dd]{2,12}( [A-Z\u00c0-\u00dd]{2,12}){0,3}$",
    "confidenceThreshold": 97,
    "priority": 9410,
    "headerPatterns": [
      {
        "regExp": "(?i).*portuguese.*district.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Portuguese District"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*distrito.*portugal.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Distrito Portugal"
        ],
        "negativeExamples": [
          "Region"
        ]
      },
      {
        "regExp": "(?i).*(pt|portugal).*dist.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "PT District"
        ],
        "negativeExamples": [
          "City"
        ]
      },
      {
        "regExp": "(?i).*(administrative|territorial).*district.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Administrative District PT"
        ],
        "negativeExamples": [
          "Province"
        ]
      },
      {
        "regExp": "(?i).*(district|distrito).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "District"
        ],
        "negativeExamples": [
          "Country"
        ]
      }
    ],
    "positiveContentExamples": [
      "LISBOA",
      "PORTO",
      "SET\u00daBAL",
      "\u00c9VORA",
      "BRAGAN\u00c7A",
      "SANTAR\u00c9M",
      "VIANA DO CASTELO",
      "CASTELO BRANCO"
    ],
    "negativeContentExamples": [
      "LISBON",
      "MADEIRA",
      "A\u00c7ORES",
      "PORTO DISTRICT",
      "SETUBAL",
      "EVORA",
      "VILA REAL DE SANTO ANT\u00d3NIO",
      "BRAGANCA"
    ],
    "positiveHeaderExamples": [
      "Distrito",
      "District",
      "Portuguese District",
      "PT District",
      "Distrito Portugal",
      "Administrative District PT",
      "Territorial District",
      "District (PT)"
    ],
    "negativeHeaderExamples": [
      "Country",
      "Region",
      "City",
      "Province",
      "State",
      "County",
      "Municipality",
      "Parish"
    ],
    "explanation": "This semantic type represents the 18 official mainland Portuguese districts and is implemented as a finite list for high precision matching. The backout pattern constrains fallback recognition to uppercase alphabetic tokens (including diacritics) with up to four words, reflecting the shape of Portuguese district names. Header patterns progress from specific Portuguese-district phrases to the primitive concept of district/distrito.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:56.598216"
  },
  {
    "resultType": "generated",
    "semanticType": "region",
    "description": "Full United States state names written out in plain text (e.g., California, New York, Rhode Island). Intended to recognize the complete state designation rather than abbreviations or codes.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New York|New Jersey|New Mexico|New Hampshire|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9400,
    "headerPatterns": [
      {
        "regExp": "(?i).*us[_ ]?state[_ ]?name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State Name"
        ],
        "negativeExamples": [
          "US State Code"
        ]
      },
      {
        "regExp": "(?i).*(full|complete)[_ ]?state[_ ]?name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Full State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*(us|usa)[_ ]?state.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US State"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*state[_ ]?name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "State Name"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New York",
      "North Dakota",
      "Rhode Island",
      "West Virginia",
      "Massachusetts",
      "Texas",
      "Hawaii"
    ],
    "negativeContentExamples": [
      "CA",
      "NewYork",
      "Washington D.C.",
      "Puerto Rico",
      "New York State",
      "Dakota",
      "Mass",
      "U.S. State"
    ],
    "positiveHeaderExamples": [
      "State",
      "State Name",
      "US State",
      "US State Name",
      "Full State Name",
      "American State Name",
      "State Full Name",
      "United States State Name"
    ],
    "negativeHeaderExamples": [
      "State Code",
      "Country",
      "County",
      "Province",
      "Region",
      "ZIP Code",
      "Abbrev State",
      "ISO State Code"
    ],
    "explanation": "This semantic type identifies full United States state names as typically found in address or geographic datasets, excluding abbreviations and codes. Use it to classify columns where the data consists of spelled-out US state names for normalization, validation, or enrichment workflows.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:58.307164"
  },
  {
    "resultType": "generated",
    "semanticType": "filename",
    "description": "A file identifier representing a standalone file name that includes an extension for file system reference. It excludes directory paths, URLs, or scheme prefixes and focuses solely on the base name plus extension.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 _.-]{0,100}\\.[A-Za-z0-9]{1,8}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9390,
    "headerPatterns": [
      {
        "regExp": "(?i).*file.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "File Name"
        ],
        "negativeExamples": [
          "File Path"
        ]
      },
      {
        "regExp": "(?i).*filename.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Filename"
        ],
        "negativeExamples": [
          "File Number"
        ]
      },
      {
        "regExp": "(?i).*document.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Document Name"
        ],
        "negativeExamples": [
          "Document Type"
        ]
      },
      {
        "regExp": "(?i).*fname.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "FName"
        ],
        "negativeExamples": [
          "Frame"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Extension"
        ]
      }
    ],
    "positiveContentExamples": [
      "report.pdf",
      "Q1_summary-final.xlsx",
      "photo 01.jpg",
      "archive.tar.gz",
      "README.md",
      "data-2024-10-01.csv",
      "contract_v2.docx",
      "presentation.final.pptx"
    ],
    "negativeContentExamples": [
      "C:\\Temp\\report.pdf",
      "/home/user/photo.jpg",
      "noextension",
      ".hidden",
      "report.",
      "budget_2024",
      "image.jpeg?",
      "folder/subfolder/"
    ],
    "positiveHeaderExamples": [
      "Filename",
      "File Name",
      "Document Name",
      "FName",
      "File",
      "Name",
      "Original Filename"
    ],
    "negativeHeaderExamples": [
      "File Path",
      "Folder",
      "Extension",
      "Document Type",
      "Path",
      "File Number",
      "URI"
    ],
    "explanation": "This semantic type detects standalone file names that include an extension, such as 'report.pdf' or 'data.csv'. It intentionally excludes full paths, URIs, or directory indicators, focusing on the base name plus extension common in file system references.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:58.342478"
  },
  {
    "resultType": "generated",
    "semanticType": "country",
    "description": "Nation Name: English country designation",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]+( [A-Z][a-z]+){0,3}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9130,
    "headerPatterns": [
      {
        "regExp": "(?i).*country.*name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Country Name"
        ],
        "negativeExamples": [
          "Country Code"
        ]
      },
      {
        "regExp": "(?i).*(nation|national).*name.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Nation Name"
        ],
        "negativeExamples": [
          "Nation Code"
        ]
      },
      {
        "regExp": "(?i).*nation.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Nation"
        ],
        "negativeExamples": [
          "State"
        ]
      },
      {
        "regExp": "(?i).*(ctry|cntry).*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "Ctry"
        ],
        "negativeExamples": [
          "City"
        ]
      },
      {
        "regExp": "(?i).*country.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Country"
        ],
        "negativeExamples": [
          "State"
        ]
      }
    ],
    "positiveContentExamples": [
      "France",
      "United Kingdom",
      "United States",
      "South Africa",
      "New Zealand",
      "Dominican Republic",
      "Papua New Guinea",
      "Sri Lanka"
    ],
    "negativeContentExamples": [
      "US",
      "U.S.",
      "United_States",
      "United States of America",
      "Trinidad and Tobago",
      "Bosnia and Herzegovina",
      "Cote d'Ivoire",
      "Republic of the Congo"
    ],
    "positiveHeaderExamples": [
      "Country",
      "Country Name",
      "Nation",
      "Ctry",
      "Cntry",
      "Country of Birth",
      "Billing Country",
      "Country/Region"
    ],
    "negativeHeaderExamples": [
      "Country Code",
      "State",
      "City",
      "ISO Country Code",
      "Province",
      "Region",
      "Territory",
      "Postal Code"
    ],
    "explanation": "Represents full country names in English as they typically appear in datasets, focusing on capitalized word tokens that form a nation\u2019s name. Useful for identifying columns containing country names in customer records, geographic attributes, survey responses, and similar contexts. The header patterns emphasize explicit mentions of country/nation to reduce confusion with codes or subnational entities.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:01:58.778671"
  },
  {
    "resultType": "generated",
    "semanticType": "area",
    "description": "Text content: unrestricted narrative or descriptive text intended for long-form notes, comments, or descriptions where structure is not constrained by a fixed format.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]*\\b([ \\t]+[A-Za-z][A-Za-z'-]*\\b){4,}([ \\t,.;:!?()\\\"]+[A-Za-z][A-Za-z'-]*\\b)*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9450,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|customer|account).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(description|descriptions).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(notes|note|comments|comment|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "prod_code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "This item arrived quickly and exceeded my expectations.",
      "Provide a detailed summary of the changes introduced in this release.",
      "Customer reported intermittent issues during peak usage hours.",
      "The following notes capture outstanding tasks and follow-up actions.",
      "An overview describing the project scope, assumptions, and limitations.",
      "Use this field to record any additional comments or context.",
      "Packaging was secure; no visible damage upon delivery.",
      "This description outlines the key features and known constraints."
    ],
    "negativeContentExamples": [
      "Updated by admin",
      "Order 12345 shipped",
      "To be confirmed",
      "OK, works fine",
      "John Smith, Manager",
      "AB-123-XY-99",
      "Price: 19.99 USD",
      "Pending - awaiting review"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Description",
      "Review Notes",
      "User Comments",
      "Long Text",
      "Additional Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Customer Name",
      "Status Code",
      "Quantity",
      "Phone Number",
      "SKU"
    ],
    "explanation": "This semantic type identifies long-form, unstructured free-text fields commonly used for descriptions, comments, notes, or narrative context. It emphasizes multi-word natural language content rather than codes, numbers, or short labels, using a pattern that expects at least five alphabetic words and allows common punctuation. It is broad by nature, so a higher threshold and lower priority are set to minimize conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:01.917424"
  },
  {
    "resultType": "generated",
    "semanticType": "treatment",
    "description": "Free-form narrative or descriptive text intended for notes, comments, or descriptions. Suitable for unstructured text fields that commonly contain sentences, phrases, and multi-word explanations across domains.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'\u2019\\-]{1,}\\b(\\s+\\b[A-Za-z0-9][A-Za-z0-9'\u2019\\-.,;:!?()]{1,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9350,
    "headerPatterns": [
      {
        "regExp": "(?i).*(case|record|order|incident).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_description"
        ],
        "negativeExamples": [
          "case_id"
        ]
      },
      {
        "regExp": "(?i).*(detailed|long|additional|free).*(description|notes|comments|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Long Description"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*(summary|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Narrative"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|remark|memo).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "demo"
        ]
      },
      {
        "regExp": "(?i).*(comments?|notes?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Commerce"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "id"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer requested expedited processing due to upcoming travel.",
      "No issues observed; continue routine monitoring and provide updates weekly.",
      "Package arrived damaged, photographs attached for reference.",
      "The patient reported mild discomfort after the procedure, improving overnight.",
      "Please contact the supplier to confirm availability and lead times.",
      "Work completed successfully; awaiting client approval for deployment.",
      "Delays were caused by weather conditions across the region.",
      "User indicated that password reset resolved the access problem."
    ],
    "negativeContentExamples": [
      "A note",
      "Short note.",
      "ID: 12345",
      "2024-05-01",
      "$12.99",
      "OK",
      "12345 units",
      "ACME-01"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Long Description",
      "Additional Notes",
      "Detailed Comments",
      "Narrative",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Amount",
      "Status",
      "Phone",
      "Email"
    ],
    "explanation": "This semantic type targets unstructured, multi-word narrative fields commonly used for descriptions, comments, and notes. The regex requires at least three tokens and accommodates typical punctuation to distinguish narrative text from terse identifiers, dates, amounts, and codes. High threshold and priority reduce conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:01.921424"
  },
  {
    "resultType": "generated",
    "semanticType": "category",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b([ ]+\\b[A-Za-z]{2,}\\b){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9070,
    "headerPatterns": [
      {
        "regExp": "(?i).*(long|detailed|full)[ _-]*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Long Description"
        ],
        "negativeExamples": [
          "description_date"
        ]
      },
      {
        "regExp": "(?i).*item[ _-]*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Item Description"
        ],
        "negativeExamples": [
          "item_code"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "unit_price"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|cmt|remark|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "id_code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "The product features a durable alloy frame and includes two interchangeable lenses.",
      "Customer reported intermittent connectivity when the device is placed near a microwave.",
      "This policy outlines responsibilities and procedures for routine maintenance and repairs.",
      "Please provide a detailed summary of the findings and attach relevant screenshots.",
      "Order arrived earlier than expected and the packaging was in excellent condition.",
      "Use this field to capture any special instructions provided by the client.",
      "Additional comments explain unusual delays and clarify outstanding customer concerns."
    ],
    "negativeContentExamples": [
      "Blue chair with wheels",
      "Initial setup complete",
      "John Smith",
      "Invoice 2024-08-11",
      "GTX-9000",
      "20 kg",
      "High quality item only",
      "Notes: approved"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Long Description",
      "Item Description",
      "Detailed Notes",
      "Free Text",
      "Additional Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Quantity",
      "Zip Code",
      "Phone Number",
      "Invoice Number"
    ],
    "explanation": "This semantic type targets freeform narrative or descriptive fields that contain multi-word text suitable for notes, comments, or descriptions. The value pattern requires a run of at least five alphabetic words to distinguish rich text from short labels, codes, or identifiers. Header patterns prioritize specific description variants, then move to category terms and common abbreviations, ending with the primitive term 'text'. High threshold and low priority reduce conflicts with more specific semantic types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:05.147184"
  },
  {
    "resultType": "generated",
    "semanticType": "population",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'()-]{2,}\\b( [A-Za-z][A-Za-z0-9'()-]{2,}\\b){2,}[A-Za-z0-9 ,.;:'\"()/-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9270,
    "headerPatterns": [
      {
        "regExp": "(?i).*text.*content.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text_content"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*free.*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*comment.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Quantity"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "User reported intermittent failures during startup.",
      "Contains BPA-free materials and recyclable packaging.",
      "Refund was issued on 2021-04-01 after verification.",
      "This item is made from 100% organic cotton and feels soft to the touch.",
      "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
      "Customer notes indicate delays due to weather conditions.",
      "Please refer to the attached guidelines for detailed procedures.",
      "The population data reflects an upward trend over the last decade."
    ],
    "negativeContentExamples": [
      "Payment due",
      "N/A - see above",
      "Address: 123 Main St.",
      "OK",
      "ID: 45821",
      "2021-04-01",
      "Needs review",
      "To be confirmed"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Text",
      "text_content",
      "free_text",
      "product_description",
      "review_comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Amount",
      "Quantity",
      "PostalCode",
      "InvoiceNumber"
    ],
    "explanation": "This semantic type targets free-form narrative fields such as descriptions, comments, and notes. The pattern requires at least three space-separated words beginning with letters and allows common punctuation, which helps distinguish narrative text from short labels, codes, dates, or identifiers. It is intentionally broad, so a high threshold and low priority reduce conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:05.305529"
  },
  {
    "resultType": "generated",
    "semanticType": "year",
    "description": "A time span represented by two four-digit years indicating a start year and an end year, separated by a hyphen, en dash, em dash, slash, or the word 'to' with spaces. Intended for fields that store multi-year durations rather than single-year values.",
    "pluginType": "regex",
    "regexPattern": "\\b([12][0-9]{3})\\s*(-|\u2013|\u2014|/)\\s*([12][0-9]{3})\\b|\\b([12][0-9]{3})\\s+to\\s+([12][0-9]{3})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9150,
    "headerPatterns": [
      {
        "regExp": "(?i).*year.*range.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Year Range"
        ],
        "negativeExamples": [
          "Year"
        ]
      },
      {
        "regExp": "(?i).*start.*year.*end.*year.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "start_year_end_year"
        ],
        "negativeExamples": [
          "start_year"
        ]
      },
      {
        "regExp": "(?i).*date.*range.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Date Range"
        ],
        "negativeExamples": [
          "Single Date"
        ]
      },
      {
        "regExp": "(?i).*duration.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Duration"
        ],
        "negativeExamples": [
          "Month"
        ]
      },
      {
        "regExp": "(?i).*(years|yrs).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Years"
        ],
        "negativeExamples": [
          "Year"
        ]
      },
      {
        "regExp": "(?i).*range.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "range"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "1999-2005",
      "2001\u20132004",
      "2010/2012",
      "1987 to 1990",
      "1900 - 1901",
      "2020\u20142023",
      "1975 / 1980",
      "1800 to 1899"
    ],
    "negativeContentExamples": [
      "1999",
      "1999-05",
      "99-2005",
      "1999 to2005",
      "1999/05/01",
      "2010\u2013",
      "20102012",
      "FY2010-12"
    ],
    "positiveHeaderExamples": [
      "Year Range",
      "Years",
      "Date Range",
      "start_year_end_year",
      "Duration",
      "Range of Years",
      "Project Duration",
      "Range"
    ],
    "negativeHeaderExamples": [
      "Year",
      "Month",
      "Single Date",
      "Start Date",
      "End Year",
      "Fiscal Year",
      "Birthdate",
      "Age"
    ],
    "explanation": "This semantic type identifies fields that represent a span of years, such as project durations, coverage periods, or historical eras, formatted as two four-digit years with a clear separator (hyphen, dash, slash, or the word 'to'). It is useful for distinguishing multi-year periods from single-year fields and more granular date fields.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:05.522081"
  },
  {
    "resultType": "generated",
    "semanticType": "class",
    "description": "Unrestricted narrative or descriptive text intended for free-form entry, such as comments, notes, or descriptions. Values are typically multi-word phrases or sentences rather than structured codes or identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b\\s+\\b[A-Za-z]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9280,
    "headerPatterns": [
      {
        "regExp": "(?i).*(free|long|unstructured)[-_ ]?text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(detailed|extended)[-_ ]?description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Description"
        ],
        "negativeExamples": [
          "Quantity"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmt|note|rem).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Desc"
        ],
        "negativeExamples": [
          "Code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please provide a detailed overview of the incident.",
      "Customer reported intermittent connectivity issues.",
      "Notes: Shipment delayed due to weather.",
      "Item arrived with minor scratches on the surface.",
      "This field contains free-form remarks entered by users.",
      "Updated description after quality review.",
      "Additional context for troubleshooting steps.",
      "User comments regarding packaging and delivery."
    ],
    "negativeContentExamples": [
      "ID-3421",
      "2025-07-01",
      "$59.99",
      "OK",
      "Title_Summary",
      "A-12",
      "SKU 12345",
      "Q&A"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Free Text",
      "Detailed Description",
      "User Comments",
      "Remarks",
      "Long Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Code",
      "SKU",
      "Zip",
      "Amount"
    ],
    "explanation": "This type captures free-form narrative text commonly found in comment, notes, or description fields. It is intended to distinguish multi-word textual content from structured identifiers, dates, prices, or codes, helping classifiers route unstructured text to appropriate processing such as NLP or summarization.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:08.161236"
  },
  {
    "resultType": "generated",
    "semanticType": "result",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z']{2,}\\b([ \\t,;:.!?()\"'\u2019\\-]+\\b[A-Za-z][A-Za-z']{2,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9360,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|user|account|order).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|remarks|rmks|cmts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_remarks"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "ID"
        ]
      }
    ],
    "positiveContentExamples": [
      "The customer reported intermittent errors when saving the form.",
      "Package arrived damaged; requesting replacement and expedited shipping.",
      "Please review the attached report and summarize key findings.",
      "User notes indicate frequent timeouts during peak hours.",
      "This section outlines the scope, objectives, and assumptions.",
      "Unexpected behavior observed after the latest software update.",
      "Add a brief summary of progress since the last meeting."
    ],
    "negativeContentExamples": [
      "See above",
      "Pending review",
      "OK to ship",
      "Awaiting info",
      "call back",
      "v2 release",
      "draft"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Order Comments",
      "User Notes",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Email",
      "Zip Code"
    ],
    "explanation": "This semantic type identifies free-form narrative or descriptive text typically found in comment, notes, or description fields. It favors longer multi-word text containing several alphabetic words and common punctuation, and excludes terse labels or codes to avoid false positives. High threshold and priority are set to reduce conflicts, given the broad nature of narrative text.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:10.743148"
  },
  {
    "resultType": "generated",
    "semanticType": "height",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\"()\\-,:;/&%!?]{2,}[ ]+[A-Za-z][A-Za-z0-9'\"()\\-,:;/&%!?]{2,}([ ]+[A-Za-z0-9][A-Za-z0-9'\"()\\-,:;/&%!?]{1,})*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9310,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*order.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_notes"
        ],
        "negativeExamples": [
          "order_date"
        ]
      },
      {
        "regExp": "(?i).*support.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "support_comments"
        ],
        "negativeExamples": [
          "support_code"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent crashes after update.",
      "Please deliver to the back entrance after 5 PM.",
      "Item arrived damaged; requesting replacement.",
      "Payment pending approval by finance team.",
      "User noted slow performance on large files.",
      "Leave package at reception if office is closed.",
      "This project has been postponed until next quarter.",
      "The device emits a buzzing noise when powered on."
    ],
    "negativeContentExamples": [
      "ID 12345",
      "2024-05-12",
      "19.99",
      "ABC-123",
      "N/A",
      "OK",
      "PENDING",
      "10x faster"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Order_Notes",
      "Customer_Description",
      "Support_Comments",
      "Case_Description",
      "Free_Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Quantity",
      "Code",
      "Phone",
      "Zip"
    ],
    "explanation": "This semantic type identifies free-form narrative fields that contain multi-word descriptive text such as descriptions, notes, and comments. It is designed to capture sentences and phrases with natural language, including punctuation, rather than structured identifiers, dates, or codes.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:10.744300"
  },
  {
    "resultType": "generated",
    "semanticType": "rank",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b[ ,;:.!?'\\-]+\\b[A-Za-z]{2,}\\b[ ,;:.!?'\\-]+\\b[A-Za-z0-9]{2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9000,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(customer|client).*(notes|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "client_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|remarks|memo|comment|comments|note|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "prod_code"
        ]
      },
      {
        "regExp": "(?i).*details.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_details"
        ],
        "negativeExamples": [
          "order_date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Package arrived early and in perfect condition.",
      "Customer requested expedited processing for this order.",
      "Item color appears slightly different than expected.",
      "Please contact the client before shipping tomorrow.",
      "Return approved after verifying photos and receipts.",
      "User reports intermittent issues during checkout.",
      "Notes indicate prior damage was properly documented.",
      "Payment posted successfully but invoice still open."
    ],
    "negativeContentExamples": [
      "OK",
      "Pending",
      "Great product",
      "Note: pending",
      "A B C",
      "2023-04-01",
      "ID-12345",
      "15.00"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Customer Notes",
      "User Comments",
      "Details",
      "Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Order Number",
      "Customer ID",
      "Postal Code",
      "Phone",
      "SKU"
    ],
    "explanation": "This semantic type targets free-form narrative fields commonly used for descriptions, notes, comments, and other unstructured text. The detection favors multi-word strings with natural-language tokens and common punctuation while avoiding matches on short labels, codes, dates, or numeric-only values.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:11.548497"
  },
  {
    "resultType": "generated",
    "semanticType": "field",
    "description": "Unrestricted narrative or descriptive text intended to capture free-form content such as descriptions, notes, comments, or other long-form fields. Values typically contain multiple words, sentences, and punctuation rather than structured codes or identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\u2019,-]{1,}\\s+[A-Za-z][A-Za-z0-9'\u2019,-]{1,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9100,
    "headerPatterns": [
      {
        "regExp": "(?i).*text[ _-]*content.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text_content"
        ],
        "negativeExamples": [
          "user_id"
        ]
      },
      {
        "regExp": "(?i).*(content|body).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "content"
        ],
        "negativeExamples": [
          "invoice_date"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|txt|msg).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "id"
        ]
      }
    ],
    "positiveContentExamples": [
      "The package includes a charger, cable, and user manual.",
      "Please deliver to the back entrance after 5 pm.",
      "Customer reported intermittent connectivity issues.",
      "This policy applies to all full-time employees.",
      "Handle with care; fragile glass components inside.",
      "The meeting was postponed due to weather conditions.",
      "Include any additional notes relevant to this record.",
      "Returns are accepted within 30 days of purchase."
    ],
    "negativeContentExamples": [
      "2024-07-15",
      "user@example.com",
      "12345",
      "N/A",
      "Yes",
      "Hello",
      "Hello,world",
      "SKU-3921"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Text",
      "Details",
      "Remarks",
      "Narrative",
      "Body"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "Quantity",
      "Latitude",
      "Postal Code",
      "SKU"
    ],
    "explanation": "This semantic type targets free-form narrative or descriptive fields such as descriptions, comments, and notes. The value regex favors multi-word text with alphabetic tokens, reducing false positives from codes, IDs, or single tokens. Because the domain is broad, a high confidence threshold and low priority are used to minimize conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:11.548661"
  },
  {
    "resultType": "generated",
    "semanticType": "status",
    "description": "Free-form narrative or descriptive text content typically found in description, notes, or comments fields. Intended for multi-word, human-readable explanations rather than short labels or codes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\\-]*[.,;:!?']?( [A-Za-z0-9][A-Za-z0-9'\\-]*[.,;:!?']?){2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9300,
    "headerPatterns": [
      {
        "regExp": "(?i).*(status|ticket|case).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "status_description"
        ],
        "negativeExamples": [
          "status_code"
        ]
      },
      {
        "regExp": "(?i).*(order|customer|account).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments|remark|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Invoice Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmt|note|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "status"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent connectivity during peak hours.",
      "Left voicemail; awaiting response from client.",
      "Requires manual review due to missing signature.",
      "Payment received in full on 07/12; closing case.",
      "Package delivered to front desk, signed by receptionist.",
      "User requested password reset via portal.",
      "No additional comments at this time.",
      "Follow-up scheduled for next Tuesday."
    ],
    "negativeContentExamples": [
      "Open",
      "Closed",
      "Needs review",
      "Pending customer",
      "ID 12345",
      "N/A",
      "OK",
      "2023-07-04"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Customer Comments",
      "Order Notes",
      "Case Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Status Code",
      "Order Number",
      "Email"
    ],
    "explanation": "This semantic type identifies columns containing free-form narrative text such as descriptions, notes, and comments. It targets multi-word human-readable content and avoids short status labels, codes, or identifiers by requiring at least three words.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:12.811968"
  },
  {
    "resultType": "generated",
    "semanticType": "city",
    "description": "Municipal area designation representing a city or town name, typically written in title case and consisting of one to four words. Values are alphabetic words separated by single spaces without punctuation or digits.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]{1,}( [A-Z][a-z]{1,}){0,3}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9190,
    "headerPatterns": [
      {
        "regExp": "(?i).*(shipping|billing|home)[ _-]*city.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Shipping City"
        ],
        "negativeExamples": [
          "Shipping Country"
        ]
      },
      {
        "regExp": "(?i).*location[ _-]*(city|town).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Location City"
        ],
        "negativeExamples": [
          "Location State"
        ]
      },
      {
        "regExp": "(?i).*(residence|current|destination)[ _-]*(city|town).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Destination Town"
        ],
        "negativeExamples": [
          "Destination Postal Code"
        ]
      },
      {
        "regExp": "(?i).*(cty|municipality|muni).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "cty"
        ],
        "negativeExamples": [
          "cnty"
        ]
      },
      {
        "regExp": "(?i).*city.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "City"
        ],
        "negativeExamples": [
          "Country"
        ]
      }
    ],
    "positiveContentExamples": [
      "New York",
      "Los Angeles",
      "San Francisco",
      "Chicago",
      "Saint Louis",
      "Fort Worth",
      "Kansas City",
      "New Haven"
    ],
    "negativeContentExamples": [
      "los angeles",
      "San-Francisco",
      "St. Louis",
      "New York, NY",
      "Paris 7",
      "City of London",
      "123 Springfield",
      "London/Westminster"
    ],
    "positiveHeaderExamples": [
      "City",
      "Town",
      "Location",
      "Shipping City",
      "Billing City",
      "Destination Town",
      "Residence City",
      "City Name"
    ],
    "negativeHeaderExamples": [
      "Country",
      "State",
      "ZIP Code",
      "County",
      "Province",
      "Address Line",
      "Postal Code",
      "Latitude"
    ],
    "explanation": "This semantic type identifies city or town names as municipal location names. It targets title-cased alphabetic tokens separated by single spaces, avoiding numbers and punctuation to reduce confusion with addresses or codes. Typical use cases include extracting or validating the city component in addresses, user profiles, and location metadata.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:14.246313"
  },
  {
    "resultType": "generated",
    "semanticType": "language",
    "description": "Spoken language: full name of a natural language written in English (e.g., English, Mandarin Chinese, Haitian Creole). Values are typically one to five capitalized words and may include spaces, hyphens, or apostrophes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]{1,20}([ '-][A-Z][a-z]{1,20}){0,4}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9440,
    "headerPatterns": [
      {
        "regExp": "(?i).*spoken.*language.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Spoken Language Name"
        ],
        "negativeExamples": [
          "Spoken Language Code"
        ]
      },
      {
        "regExp": "(?i).*language.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Language Name"
        ],
        "negativeExamples": [
          "Language Code"
        ]
      },
      {
        "regExp": "(?i).*(primary|preferred).*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Primary Language"
        ],
        "negativeExamples": [
          "Programming Language"
        ]
      },
      {
        "regExp": "(?i).*spoken.*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Spoken Language"
        ],
        "negativeExamples": [
          "Programming Language"
        ]
      },
      {
        "regExp": "(?i).*lang.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Lang Name"
        ],
        "negativeExamples": [
          "Lang Code"
        ]
      },
      {
        "regExp": "(?i).*language.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Language"
        ],
        "negativeExamples": [
          "Dialect"
        ]
      }
    ],
    "positiveContentExamples": [
      "English",
      "Spanish",
      "Mandarin Chinese",
      "Haitian Creole",
      "Old Church Slavonic",
      "Tok Pisin",
      "Brazilian Portuguese"
    ],
    "negativeContentExamples": [
      "english",
      "spanish",
      "zh",
      "en-US",
      "FR",
      "programming language",
      "language"
    ],
    "positiveHeaderExamples": [
      "Language",
      "Language Name",
      "Spoken Language",
      "Primary Language",
      "Preferred Language",
      "Customer Language"
    ],
    "negativeHeaderExamples": [
      "Language Code",
      "Country",
      "Dialect",
      "Programming Language",
      "Locale",
      "Language Preference Code",
      "Country Language Code"
    ],
    "explanation": "This semantic type identifies cells containing full English names of natural languages, typically presented as capitalized words with optional spaces, hyphens, or apostrophes. It intentionally excludes language codes and terms that imply non-spoken or coded representations.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:14.310898"
  },
  {
    "resultType": "generated",
    "semanticType": "notes",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}\\b [A-Za-z]{3,}\\b [A-Za-z]{3,}\\b [A-Za-z]{3,}\\b([ A-Za-z0-9,.;:'\"()\\-\\/&]+)?",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9330,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|project|internal)[ _-]?(notes|comments|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(record|entry|item|case)[ _-]?(notes|comments|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_comments"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|remarks|remark|cmt|cmts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(description|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported recurring login errors today.",
      "Package arrived damaged during transit inspection.",
      "Please provide additional context regarding billing issue.",
      "Notes indicate maintenance scheduled after holiday.",
      "User feedback suggests interface performance needs improvement.",
      "Meeting summary captures outstanding tasks and dependencies.",
      "Description clarifies warranty coverage and replacement terms.",
      "Technician observed temperature fluctuations under load."
    ],
    "negativeContentExamples": [
      "No further details",
      "See prior note",
      "Pending review",
      "OK to ship",
      "Resolved",
      "N/A",
      "3 damaged boxes",
      "Great work team"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "customer_notes",
      "internal_comments",
      "project_description",
      "remarks",
      "case_comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "status",
      "quantity",
      "address",
      "email",
      "code"
    ],
    "explanation": "This semantic type identifies free-form narrative text typically found in description, notes, or comments fields. It expects multi-word prose suitable for capturing unstructured context, observations, or explanations, and is best used for columns intended for human-readable remarks.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:14.688827"
  },
  {
    "resultType": "generated",
    "semanticType": "time",
    "description": "Epoch seconds (standard Unix timestamp in seconds). Values are positive 9\u201310 digit integers without separators, representing seconds since 1970-01-01T00:00:00Z.",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9][0-9]{8,9}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9040,
    "headerPatterns": [
      {
        "regExp": "(?i).*unix.*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Unix Time"
        ]
      },
      {
        "regExp": "(?i).*epoch.*seconds.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Seconds"
        ],
        "negativeExamples": [
          "Epoch Milliseconds"
        ]
      },
      {
        "regExp": "(?i).*epoch.*time.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Run Time"
        ]
      },
      {
        "regExp": "(?i).*\\bts\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ts_epoch"
        ],
        "negativeExamples": [
          "tspan"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      }
    ],
    "positiveContentExamples": [
      "315532800",
      "631152000",
      "946684800",
      "978307200",
      "1000000000",
      "1609459200",
      "1704067200",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1609459200000",
      "1704067200Z",
      "1,704,067,200",
      "+1704067200",
      "1704067200.0",
      "0123456789",
      "12345678",
      "12345678901"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Epoch Seconds",
      "POSIX Timestamp",
      "epoch_seconds",
      "timestamp_unix"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Time Zone",
      "Epoch Milliseconds",
      "Unix Time Zone",
      "Format"
    ],
    "explanation": "Identifies values that are Unix epoch timestamps measured in whole seconds. This type is useful for detecting raw integer timestamps that represent absolute points in time and can be converted to readable dates in UTC.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:18.235906"
  },
  {
    "resultType": "generated",
    "semanticType": "model",
    "description": "Free-form narrative or descriptive text intended to capture unrestricted, human-written content such as descriptions, comments, notes, or narratives. Values are typically multi-word phrases or sentences and not structured identifiers or codes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z']{2,}\\s+[A-Za-z][A-Za-z']{2,}\\s+[A-Za-z][A-Za-z']{2,}\\s+[A-Za-z][A-Za-z']{2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9240,
    "headerPatterns": [
      {
        "regExp": "(?i).*product.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*customer.*comments?.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(detailed|long).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_description"
        ],
        "negativeExamples": [
          "short_code"
        ]
      },
      {
        "regExp": "(?i).*(desc|remarks|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "notes"
        ],
        "negativeExamples": [
          "order_number"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "This product exceeded expectations in build quality and finish.",
      "Customer reported intermittent failures during extended usage.",
      "The item arrived well packaged and in excellent condition.",
      "Detailed description of the issue and steps taken to reproduce.",
      "Notes include observed behavior across multiple scenarios.",
      "Comments highlight areas for improvement and future enhancements.",
      "Narrative text summarizing context and outlining key decisions."
    ],
    "negativeContentExamples": [
      "Good quality",
      "N/A",
      "Model X-200",
      "OK",
      "2024-05-12",
      "fast, sturdy",
      "Good and durable",
      "desc"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Customer Comments",
      "Detailed Description",
      "Free Text",
      "Narrative"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Code",
      "Amount",
      "Quantity",
      "Status"
    ],
    "explanation": "This semantic type identifies free-form narrative or descriptive text fields that contain multi-word human-written content such as product descriptions, user comments, or internal notes. It is useful to distinguish long-form text from structured identifiers, numeric values, dates, or short labels, enabling downstream processing like NLP, summarization, or sentiment analysis.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:18.712125"
  },
  {
    "resultType": "generated",
    "semanticType": "race",
    "description": "Full descriptive racial or ethnic group designation as it would appear in person-level demographic data. Values are written-out categories (not codes) such as \"Black or African American\" or \"Middle Eastern or North African\".",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(white|caucasian|black or african american|african american|black|asian|hispanic or latino|hispanic|latino|latina|latinx|native hawaiian or other pacific islander|native hawaiian|other pacific islander|pacific islander|american indian or alaska native|american indian|alaska native|native american|middle eastern or north african|middle eastern|north african|two or more races|multiracial|biracial|mixed race)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9220,
    "headerPatterns": [
      {
        "regExp": "(?i).*racial.*group.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Racial Group"
        ],
        "negativeExamples": [
          "Race Code"
        ]
      },
      {
        "regExp": "(?i).*race.*and.*ethnic.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Race and Ethnicity"
        ],
        "negativeExamples": [
          "Nationality"
        ]
      },
      {
        "regExp": "(?i).*(racial|ethnic).*category.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Racial Category"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*(ethnicity|ethnic).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Ethnicity"
        ],
        "negativeExamples": [
          "Race Code"
        ]
      },
      {
        "regExp": "(?i).*\\brace\\b.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Race"
        ],
        "negativeExamples": [
          "Race Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "White",
      "Caucasian",
      "Black or African American",
      "Asian",
      "American Indian or Alaska Native",
      "Native Hawaiian or Other Pacific Islander",
      "Hispanic or Latino",
      "Middle Eastern or North African"
    ],
    "negativeContentExamples": [
      "WHT",
      "BLK",
      "HISP",
      "Hispanic/Latino",
      "Two or more",
      "Middle-East",
      "USA",
      "Race Code"
    ],
    "positiveHeaderExamples": [
      "Race",
      "Ethnicity",
      "Racial Group",
      "Race and Ethnicity",
      "Racial Category",
      "Ethnic Group",
      "Race/Ethnicity",
      "Demographic Race"
    ],
    "negativeHeaderExamples": [
      "Race Code",
      "Nationality",
      "Country",
      "Ethnic Code",
      "Country of Origin",
      "Citizenship",
      "ISO Country Code",
      "Event Race"
    ],
    "explanation": "This semantic type identifies person-level demographic fields that store written-out racial or ethnic categories rather than compact codes. It focuses on common descriptive labels and multi-word phrases used in datasets to represent race and ethnicity.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:19.222232"
  },
  {
    "resultType": "generated",
    "semanticType": "title",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9 ,.;:'\"()\\-_/&%?!]* [A-Za-z0-9][A-Za-z0-9 ,.;:'\"()\\-_/&%?!]* [A-Za-z0-9][A-Za-z0-9 ,.;:'\"()\\-_/&%?!]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9080,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|customer|item|case|issue|record).*(description|details|note|notes|comment|comments|remark|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(extended|long|free).*(description|notes|comments|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "extended_description"
        ],
        "negativeExamples": [
          "extended_warranty"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|cmts|cmt|rmk|rmks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "prod_code"
        ]
      },
      {
        "regExp": "(?i).*(text|message|memo|summary|overview).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_summary"
        ],
        "negativeExamples": [
          "issue_date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Subscription"
        ]
      }
    ],
    "positiveContentExamples": [
      "Package arrived damaged on the left corner.",
      "Customer reported intermittent connectivity issues.",
      "Includes charger, case, and original packaging.",
      "Payment pending; awaiting approval from finance.",
      "Handle with care: fragile glass components.",
      "Replaced under warranty after inspection.",
      "Notes: requires supervisor sign-off before release.",
      "This description spans multiple thoughts, concise yet informative."
    ],
    "negativeContentExamples": [
      "Pending",
      "See attached",
      "OK",
      "N/A",
      "12345",
      "Error-17",
      "2024-05-01",
      "Title: Summary"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Item Details",
      "Case Remarks",
      "Extended Description",
      "Issue Summary",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Count",
      "Quantity",
      "Status",
      "Category"
    ],
    "explanation": "This semantic type captures free-form descriptive text fields commonly used for narratives, notes, comments, and details. The value pattern favors multi-word content to distinguish narrative text from short labels or codes, and header patterns focus on common column names for description-like fields. High threshold and lower priority reduce conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:20.369752"
  },
  {
    "resultType": "generated",
    "semanticType": "weight",
    "description": "Free-form narrative or descriptive text intended for human reading, such as descriptions, notes, and comments. Typically consists of multiple words with punctuation, not constrained to a fixed schema or code list.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b([ \\t,.;:()'\"/\\-]+\\b[A-Za-z]{2,}\\b){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9120,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|customer|issue)[ _-]*(description|comment|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(description|comments?|notes?)[ _-]*(text|field|detail|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description_text"
        ],
        "negativeExamples": [
          "price_text"
        ]
      },
      {
        "regExp": "(?i).*(desc|remarks|comment|note|annotation|narrative).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "status"
        ]
      },
      {
        "regExp": "(?i).*(free[ _-]*text|long[ _-]*text|body).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "free_space"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent delays during checkout.",
      "Package arrived damaged; requesting replacement.",
      "No issues observed after the latest update.",
      "Call back scheduled for next Tuesday afternoon.",
      "Payment received in full; account is current.",
      "User requests access to the analytics dashboard.",
      "Please handle with care; fragile components inside.",
      "Meeting rescheduled due to weather conditions."
    ],
    "negativeContentExamples": [
      "N/A",
      "None",
      "OK",
      "TBD",
      "Issue resolved",
      "Needs review",
      "2024-05-01",
      "$19.99"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Internal Notes",
      "Customer Comments",
      "Detail Text",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status",
      "Email",
      "Phone",
      "Zip Code"
    ],
    "explanation": "This semantic type detects free-form descriptive text commonly found in Description, Notes, or Comments fields. The value pattern requires at least three alphabetic words, allowing common punctuation and spaces, to distinguish narrative text from short labels, codes, dates, or numeric values. Header patterns progress from specific domain variants through common synonyms to a primitive 'text' term to capture a broad range of column names while maintaining high specificity through threshold and priority settings.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:26.185484"
  },
  {
    "resultType": "generated",
    "semanticType": "owner",
    "description": "full_name: first and family name combined with space",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[a-z][a-z.'-]{1,39} [a-z][a-z.'-]{1,39}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9260,
    "headerPatterns": [
      {
        "regExp": "(?i).*(full[ _-]+name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Full Name"
        ],
        "negativeExamples": [
          "First Name"
        ]
      },
      {
        "regExp": "(?i).*(person|owner)[ _-]+name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Person Name"
        ],
        "negativeExamples": [
          "Company Name"
        ]
      },
      {
        "regExp": "(?i).*(contact|customer|user)[ _-]+name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "User Name"
        ],
        "negativeExamples": [
          "Username"
        ]
      },
      {
        "regExp": "(?i).*(cust|usr)[ _-]+name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Cust Name"
        ],
        "negativeExamples": [
          "Account Name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Mary-Jane O'Connor",
      "St. John",
      "Anne-Marie Brown",
      "Peter O'Brien",
      "Sarah Lee",
      "Jean-Luc Martin",
      "Robert McDonald"
    ],
    "negativeContentExamples": [
      "John",
      "John A. Smith",
      "Smith, John",
      "J. Smith",
      "John  Smith",
      "John-Smith",
      "John O\u2019Neil",
      "Anne_Marie Brown"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Owner Name",
      "Contact Name",
      "Customer Name",
      "User Name",
      "Primary Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Company Name",
      "Account Number",
      "Username",
      "Given Name",
      "Surname"
    ],
    "explanation": "Represents a person's full name as exactly two tokens: first (given) name and family (surname), separated by a single space. Each token may include letters plus internal apostrophes, hyphens, or periods (e.g., O'Connor, St. John), but does not allow digits or additional words. This type is useful for datasets where names are stored as a single field with clear first-and-last structure for matching, linking, or identity resolution.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:27.271813"
  },
  {
    "resultType": "generated",
    "semanticType": "rating",
    "description": "Unstructured narrative or descriptive text content found in columns such as descriptions, notes, comments, or feedback. Intended to capture long-form, free-text fields rather than codes, identifiers, or numeric ratings.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Za-z][A-Za-z'\u2019.\\-]*\\s+){4,}[A-Za-z][A-Za-z'\u2019.\\-]*[.!?]?",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9480,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|service).*(description|desc|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(customer|client|user).*(comments|comment|feedback|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|remarks|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(free[ _]?text|narrative|long[ _]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "zip_code"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "The product arrived earlier than expected and works perfectly.",
      "Customer support resolved my issue quickly and professionally.",
      "This document outlines the steps required to complete the process.",
      "I appreciate the clear instructions and the friendly tone throughout.",
      "Overall, the experience was smooth and exceeded my expectations.",
      "Please include all relevant attachments and a brief summary of findings.",
      "The interface feels intuitive, though a dark mode option would help."
    ],
    "negativeContentExamples": [
      "Excellent product",
      "Works great",
      "5",
      "2024-03-15",
      "N/A",
      "Good quality overall",
      "Fast shipping",
      "OK"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Customer Comments",
      "Internal Notes",
      "Free Text",
      "Review Notes"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Email",
      "Quantity",
      "Zip Code",
      "Rating",
      "Phone Number"
    ],
    "explanation": "This semantic type identifies free-text narrative fields commonly used for descriptive content such as descriptions, notes, comments, and feedback. The value pattern requires multiple words to minimize false positives from short labels, codes, or numeric entries, making it suitable for detecting long-form textual content in datasets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:29.460560"
  },
  {
    "resultType": "generated",
    "semanticType": "position",
    "description": "Position title: professional role or occupation designation, typically indicating a person's job or function within an organization.",
    "pluginType": "regex",
    "regexPattern": "\\b(Manager|Director|Engineer|Analyst|Developer|Consultant|Officer|Specialist|Coordinator|Assistant|Administrator|Technician|Architect|Supervisor|Representative|Executive|Scientist|Professor|Nurse|Attorney|Accountant|Designer|Planner|Researcher|Editor|Producer|Operator|Inspector|Clerk|Agent|Pharmacist|Therapist|Chef|Driver|Pilot|Mechanic|Welder|Electrician|Carpenter|Plumber|Physician|Surgeon|Intern|Associate|President|VP|CFO|CEO|COO|CTO|CIO|CISO)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9290,
    "headerPatterns": [
      {
        "regExp": "(?i).*job.*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Job Title"
        ],
        "negativeExamples": [
          "Job Type"
        ]
      },
      {
        "regExp": "(?i).*(employee|staff).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Employee Title"
        ],
        "negativeExamples": [
          "Employee ID"
        ]
      },
      {
        "regExp": "(?i).*(position|role).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Position Title"
        ],
        "negativeExamples": [
          "Position Code"
        ]
      },
      {
        "regExp": "(?i).*(occupation|profession).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Occupation"
        ],
        "negativeExamples": [
          "Company"
        ]
      },
      {
        "regExp": "(?i).*(position|role).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Position"
        ],
        "negativeExamples": [
          "Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Senior Software Engineer",
      "Marketing Manager",
      "Data Analyst",
      "Chief Financial Officer",
      "Vice President, Operations",
      "VP Sales",
      "Sales Representative",
      "Project Coordinator"
    ],
    "negativeContentExamples": [
      "Management",
      "Engineering",
      "Finance Lead",
      "Operations Team",
      "Staff Level 2",
      "Consultancy",
      "Owner",
      "Office Admin"
    ],
    "positiveHeaderExamples": [
      "Job Title",
      "Position",
      "Occupation",
      "Position Title",
      "Employee Title",
      "Role Title",
      "pos_title",
      "Staff Title"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Company",
      "Salary",
      "Job Type",
      "Employee ID",
      "Department",
      "Location",
      "POS Terminal"
    ],
    "explanation": "This type identifies job or role titles for individuals, such as common occupational designations found in HR and staffing datasets. Matching relies on the presence of widely used title keywords (e.g., Manager, Engineer, Director) or executive abbreviations (e.g., VP, CEO). It is best used for columns that explicitly store a person's position or role rather than free-form descriptive text.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:29.530720"
  },
  {
    "resultType": "generated",
    "semanticType": "cost",
    "description": "Unrestricted narrative or descriptive text, typically multi-word free-form content such as comments, notes, or descriptions. Suitable for fields capturing human-written explanations, instructions, or remarks.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}[A-Za-z0-9'()/%\\-]* [A-Za-z]{2,}[A-Za-z0-9'()/%\\-]* [A-Za-z0-9 ,.;:'\"()/%\\-]*[A-Za-z]{2,}[A-Za-z0-9'()/%\\-]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9420,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*item.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "item_notes"
        ],
        "negativeExamples": [
          "items_sold"
        ]
      },
      {
        "regExp": "(?i).*order.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_comments"
        ],
        "negativeExamples": [
          "order_number"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent issues during installation.",
      "Handle with care; fragile components inside.",
      "Package delayed due to weather; delivery rescheduled.",
      "Please contact support if the problem persists after reboot.",
      "High priority task requiring manager approval before close.",
      "Quality check completed; no defects observed.",
      "Includes charger, cable, and user guide.",
      "Refund issued; see transaction details in portal."
    ],
    "negativeContentExamples": [
      "ID 12345",
      "2024-07-15",
      "N/A",
      "OK thanks",
      "INV-00981 overdue",
      "$12.99",
      "A12 B34",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "customer_description",
      "item_notes",
      "order_comments",
      "remarks",
      "text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "customer_id",
      "items_sold",
      "order_number",
      "status",
      "sku"
    ],
    "explanation": "This semantic type targets free-form narrative fields that contain multi-word descriptive text, such as descriptions, comments, and notes. It uses a conservative regex emphasizing at least three words with alphabetic content to avoid misclassifying identifiers or codes. The high confidence threshold and priority reduce conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:32.731555"
  },
  {
    "resultType": "generated",
    "semanticType": "description",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,} [A-Za-z]{2,} [A-Za-z]{2,}[A-Za-z0-9 ,.;:'\"-]*",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9010,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|order).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(customer|case|ticket).*(notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_notes"
        ],
        "negativeExamples": [
          "case_number"
        ]
      },
      {
        "regExp": "(?i).*(desc|detail|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "item_desc"
        ],
        "negativeExamples": [
          "item_code"
        ]
      },
      {
        "regExp": "(?i).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "postal_code"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Red cotton shirt with button front",
      "Lightly used office chair in good condition",
      "Customer reported intermittent connectivity issues",
      "Spacious two-bedroom apartment near downtown",
      "Includes charger, case, and original packaging",
      "The device failed to start after latest update",
      "Handmade ceramic mug with matte glaze",
      "Provide a short overview of the project goals"
    ],
    "negativeContentExamples": [
      "OK",
      "Blue cotton",
      "N/A",
      "SKU-12345",
      "12345",
      "Model X200 Pro",
      "5 year warranty",
      "Date: 2024-05-01"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Item Description",
      "Order Notes",
      "Case Comments",
      "Product Details",
      "Customer Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Quantity",
      "Code",
      "Amount",
      "Number"
    ],
    "explanation": "This semantic type identifies free-form narrative or descriptive text fields commonly used for explanations, details, notes, or comments. The value pattern expects at least three alphabetic words separated by spaces, which helps distinguish natural-language descriptions from short labels, codes, or identifiers. Use this to classify columns that store human-readable descriptions, notes, comments, or details rather than structured codes or numeric identifiers.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:33.704267"
  },
  {
    "resultType": "generated",
    "semanticType": "abbreviation",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9]{2,}\\s+[A-Za-z0-9]{2,}\\s+[A-Za-z0-9][A-Za-z0-9 ,.;:'\\\"()\\-\\/&%!?]{10,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9570,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|product|record).*(description|desc).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_description"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*(internal|private|public).*(notes?|comments?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "internal_code"
        ]
      },
      {
        "regExp": "(?i).*(additional|general|free).*(text|notes?|comments?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_text"
        ],
        "negativeExamples": [
          "additional_fee"
        ]
      },
      {
        "regExp": "(?i).*(desc|notes?|comments?).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Great product with excellent build quality.",
      "Customer reported intermittent issues when charging.",
      "Handle with care; fragile contents inside.",
      "Requires supervisor approval before release.",
      "Updated per client feedback on color and fit.",
      "Includes user manual and warranty information.",
      "Packaged securely to avoid transit damage.",
      "Replacement requested due to missing accessories."
    ],
    "negativeContentExamples": [
      "Good quality",
      "See details",
      "N/A",
      "OK",
      "Item-12345",
      "12/05/2024",
      "Yes",
      "Approved"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Customer Description",
      "Internal Notes",
      "Public Comments",
      "Additional Text",
      "General Notes"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status Code",
      "Postal Code",
      "Phone Number",
      "SKU"
    ],
    "explanation": "This semantic type represents free-form narrative or descriptive text fields commonly used for explanations, remarks, notes, and comments. It captures multi-word, sentence-like content rather than compact identifiers or codes, and is typically longer than short labels.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:33.756047"
  },
  {
    "resultType": "generated",
    "semanticType": "order",
    "description": "Unrestricted narrative or descriptive text commonly found in free-form fields such as descriptions, notes, or comments associated with an order or record. This type captures multi-word, sentence-like content rather than structured codes or identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\u2019\\-]{1,}\\b([ \\t,.;:!?\\-]+\\b[A-Za-z0-9][A-Za-z0-9'\u2019\\-]{1,}\\b){3,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9490,
    "headerPatterns": [
      {
        "regExp": "(?i).*(order|ord).*(description|desc|note|notes|comment|comments|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(order|ord).*(details|detail|remarks|remark|instructions).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_details"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(additional|customer|item).*(notes|comments|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_remarks"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|cmt|memo|rmk).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "quantity"
        ]
      },
      {
        "regExp": "(?i).*(description|note|notes|comment|comments|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "SKU"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer requested gift wrap with handwritten note.",
      "Package arrived damaged; requesting replacement and refund.",
      "Please deliver after 5 PM; gate code provided below.",
      "Add extra foam padding to protect fragile items.",
      "Color preference is navy blue, not black.",
      "Need expedited shipping due to upcoming event.",
      "Include invoice without pricing in the box.",
      "Item fits true to size according to previous purchase."
    ],
    "negativeContentExamples": [
      "Damaged",
      "Needs replacement",
      "Leave at door",
      "Ok",
      "2024-03-07 shipped",
      "see notes",
      "n/a",
      "ID 45678"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Order Description",
      "Order Notes",
      "Item Comments",
      "Additional Text",
      "Customer Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Order Number",
      "Customer Name",
      "Quantity",
      "SKU",
      "Created At"
    ],
    "explanation": "This semantic type targets free-form textual fields that capture narratives, comments, and descriptions, particularly in the context of orders or records. It is designed to recognize multi-word, sentence-like content rather than structured identifiers or numeric fields, and is guided by header cues such as description, notes, and comments.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:34.650822"
  },
  {
    "resultType": "generated",
    "semanticType": "family",
    "description": "family_name: inherited surname identifying family lineage",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Za-z]{2,}(( |-|')[A-Za-z]{2,}){0,2}|[A-Za-z]'[A-Za-z]+(( |-|)[A-Za-z]{2,}){0,2})\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9170,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\bfamily[ _-]*name\\b.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "Family Name"
        ],
        "negativeExamples": [
          "Family Size"
        ]
      },
      {
        "regExp": "(?i).*\\blast[ _-]*name\\b.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Last Name"
        ],
        "negativeExamples": [
          "Last Login"
        ]
      },
      {
        "regExp": "(?i).*\\bsurname\\b.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Surname"
        ],
        "negativeExamples": [
          "Given Name"
        ]
      },
      {
        "regExp": "(?i).*\\blname\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "LName"
        ],
        "negativeExamples": [
          "Line Name"
        ]
      },
      {
        "regExp": "(?i).*\\bname\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Username"
        ]
      }
    ],
    "positiveContentExamples": [
      "Smith",
      "O'Connor",
      "McDonald",
      "De la Cruz",
      "van der Berg",
      "Saint-Clair",
      "D'Amico",
      "Ng"
    ],
    "negativeContentExamples": [
      "Smith Jr.",
      "O''Connor",
      "O\u2019Connor",
      "Johnson-Smith-Allen",
      "Li-",
      "O'",
      "O Connor",
      "Garc\u00eda"
    ],
    "positiveHeaderExamples": [
      "Last Name",
      "Surname",
      "Family Name",
      "Last_Name",
      "LName",
      "Applicant Surname",
      "Customer Last Name",
      "Family Surname"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Full Name",
      "Middle Name",
      "Given Name",
      "Username",
      "Display Name",
      "Contact Name",
      "Account Name"
    ],
    "explanation": "This semantic type targets inherited surnames (family names) as they commonly appear in person records. It supports single-word surnames and multi-part surnames with spaces, hyphens, or apostrophes, while excluding suffixes and extraneous punctuation. Use this type to identify columns specifically collecting last/family names rather than full names or given names.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:35.122386"
  },
  {
    "resultType": "generated",
    "semanticType": "county",
    "description": "US subdivision: local county jurisdiction",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[A-Za-z][A-Za-z.'-]*([ -][A-Za-z][A-Za-z.'-]*){0,4} County\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9160,
    "headerPatterns": [
      {
        "regExp": "(?i).*(us|usa).*county.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US County Name"
        ],
        "negativeExamples": [
          "US County Code"
        ]
      },
      {
        "regExp": "(?i).*(county|cnty).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "County Name"
        ],
        "negativeExamples": [
          "County Code"
        ]
      },
      {
        "regExp": "(?i).*(us|usa).*county.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "US County"
        ],
        "negativeExamples": [
          "US Country"
        ]
      },
      {
        "regExp": "(?i).*\\b(cnty|co)\\b.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Cnty Name"
        ],
        "negativeExamples": [
          "Company Name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "City"
        ]
      }
    ],
    "positiveContentExamples": [
      "Orange County",
      "St. Louis County",
      "Prince George's County",
      "DeKalb County",
      "New Castle County",
      "Queen Anne's County",
      "Santa Fe County",
      "Los Alamos County"
    ],
    "negativeContentExamples": [
      "Orange",
      "Orange Co.",
      "County of Orange",
      "Orange Parish",
      "Los Angeles",
      "County: Orange",
      "Orange Cnty",
      "Orange Co"
    ],
    "positiveHeaderExamples": [
      "County",
      "County Name",
      "US County",
      "US County Name",
      "County of Residence",
      "Home County",
      "Resident County",
      "County Name (US)"
    ],
    "negativeHeaderExamples": [
      "State",
      "FIPS Code",
      "City",
      "County Code",
      "Country",
      "Company",
      "County Seat",
      "Province"
    ],
    "explanation": "This semantic type identifies values that are names of US counties, represented as one or more alphabetic tokens ending with the word 'County'. It supports common punctuation within names (apostrophes, hyphens, periods) and typical multi-word county names. It is useful for classifying locality-level administrative units in US datasets and for aligning with geographic hierarchies below the state level.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:35.485868"
  },
  {
    "resultType": "generated",
    "semanticType": "end",
    "description": "epoch_seconds: standard Unix timestamp in seconds",
    "pluginType": "regex",
    "regexPattern": "\\b[1-9][0-9]{9}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9690,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\bunix\\b.*\\btimestamp\\b.*\\bseconds\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp Seconds"
        ],
        "negativeExamples": [
          "Unix Timestamp"
        ]
      },
      {
        "regExp": "(?i).*\\bepoch\\b.*\\bseconds\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Seconds"
        ],
        "negativeExamples": [
          "Epoch Time"
        ]
      },
      {
        "regExp": "(?i).*\\bunix\\b.*\\btimestamp\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "Unix Time"
        ]
      },
      {
        "regExp": "(?i).*\\bepoch\\b.*\\btime\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Epoch Time"
        ],
        "negativeExamples": [
          "Time"
        ]
      },
      {
        "regExp": "(?i).*\\bts\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "event_ts"
        ],
        "negativeExamples": [
          "event_id"
        ]
      },
      {
        "regExp": "(?i).*\\btimestamp\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "1000000000",
      "1234567890",
      "1356998400",
      "1582934400",
      "1672531199",
      "1704067200",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1704067200000",
      "1,704,067,200",
      "1704067200.0",
      "01704067200",
      "170406720",
      "17040672000",
      "-1704067200",
      "2024-01-01 00:00:00"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "Unix Timestamp Seconds",
      "Epoch Seconds",
      "event_ts",
      "ts"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "Milliseconds",
      "Created At",
      "UTC Offset",
      "Timezone"
    ],
    "explanation": "Identifies fields containing Unix epoch timestamps expressed in whole seconds since 1970-01-01T00:00:00Z. Values are strictly 10-digit integers with no separators, signs, or fractional parts, which helps distinguish them from milliseconds or formatted dates.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:39.803245"
  },
  {
    "resultType": "generated",
    "semanticType": "price",
    "description": "Unrestricted narrative or descriptive text intended for human reading, such as product descriptions, comments, or notes. Typical content includes multiple words and sentences conveying context or explanations.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'/-]{2,}( [A-Za-z0-9][A-Za-z0-9'/-]{1,}){2,}([,.!?])?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9510,
    "headerPatterns": [
      {
        "regExp": "(?i).*comment.*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment_text"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*long.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(internal|public).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_notes"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmnt|txt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "item_desc"
        ],
        "negativeExamples": [
          "Quantity"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Comments"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer requested expedited shipping due to upcoming event.",
      "Package left at front desk with receptionist as per instructions.",
      "Replace the cracked screen protector during next service visit.",
      "Item shows minor wear on edges; functions as expected.",
      "Please contact the client to confirm preferred appointment time.",
      "Includes power adapter and original packaging where available.",
      "Delayed by weather; rescheduled for delivery on Friday."
    ],
    "negativeContentExamples": [
      "Confirmed",
      "Quick update",
      "Invoice 12345",
      "07/15/2025",
      "A-12345",
      "OK",
      "123456"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "long_description",
      "comment_text",
      "internal_notes",
      "item_desc",
      "free_text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Amount",
      "Account",
      "Status",
      "Category"
    ],
    "explanation": "This semantic type captures free-form narrative fields containing multiple words, typically sentences or phrases that provide context, explanations, or remarks. It is useful for identifying columns intended for human-readable notes or descriptions and avoiding confusion with structured identifiers, dates, or numeric measures.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:42.466199"
  },
  {
    "resultType": "generated",
    "semanticType": "age",
    "description": "years_old: numerical age in completed years since birth",
    "pluginType": "regex",
    "regexPattern": "\\b(120|1[01][0-9]|[1-9]?[0-9])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9500,
    "headerPatterns": [
      {
        "regExp": "(?i).*(person[ _-]*age|patient[ _-]*age|customer[ _-]*age).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Person Age"
        ],
        "negativeExamples": [
          "Birth Year"
        ]
      },
      {
        "regExp": "(?i).*demograph.*age.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "Demographic Age"
        ],
        "negativeExamples": [
          "Date of Birth"
        ]
      },
      {
        "regExp": "(?i).*age[ _-]*yrs?.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Age Yrs"
        ],
        "negativeExamples": [
          "Service Years"
        ]
      },
      {
        "regExp": "(?i).*(years?[ _-]*old|yrs[ _-]*old).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Years Old"
        ],
        "negativeExamples": [
          "Years Employed"
        ]
      },
      {
        "regExp": "(?i).*age.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Age"
        ],
        "negativeExamples": [
          "Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "0",
      "1",
      "5",
      "18",
      "21",
      "64",
      "99",
      "120"
    ],
    "negativeContentExamples": [
      "121",
      "130",
      "-5",
      "3.5",
      "20 years",
      "08",
      "2019",
      "1,0"
    ],
    "positiveHeaderExamples": [
      "Age",
      "Person Age",
      "Years Old",
      "Patient Age",
      "Age Years",
      "Age Yrs",
      "Demographic Age"
    ],
    "negativeHeaderExamples": [
      "Birth Year",
      "Date of Birth",
      "Name",
      "Years Employed",
      "Service Years",
      "Tenure Years",
      "Year of Manufacture"
    ],
    "explanation": "This type identifies integer ages in completed years, typically ranging from newborns (0) to advanced ages. It is useful for demographic, clinical, and customer profile data where the value is a whole number of years without units.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:44.293826"
  },
  {
    "resultType": "generated",
    "semanticType": "day",
    "description": "Numeric calendar day within a month, represented as integers 1\u201331, optionally zero-padded (01\u201309). Intended for standalone day-of-month fields without month or year context.",
    "pluginType": "regex",
    "regexPattern": "\\b(0?[1-9]|[12][0-9]|3[01])\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 96,
    "priority": 9620,
    "headerPatterns": [
      {
        "regExp": "(?i).*day[ _-]*of[ _-]*month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Day of Month"
        ],
        "negativeExamples": [
          "Day Name"
        ]
      },
      {
        "regExp": "(?i).*(calendar[ _-]*day|day[ _-]*number|day[ _-]*num).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Day Number"
        ],
        "negativeExamples": [
          "Month Number"
        ]
      },
      {
        "regExp": "(?i).*date[ _-]*number.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Date Number"
        ],
        "negativeExamples": [
          "Order Number"
        ]
      },
      {
        "regExp": "(?i).*(dom|dayno|day_no|daynumber|daynum).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "DOM"
        ],
        "negativeExamples": [
          "DOW"
        ]
      },
      {
        "regExp": "(?i).*day.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Day"
        ],
        "negativeExamples": [
          "Weekday"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "2",
      "07",
      "09",
      "15",
      "28",
      "30",
      "31"
    ],
    "negativeContentExamples": [
      "0",
      "00",
      "32",
      "3rd",
      "12a",
      "05a",
      "201",
      "0007"
    ],
    "positiveHeaderExamples": [
      "Day",
      "Day of Month",
      "Date Number",
      "Day Number",
      "DOM",
      "Day Num",
      "Calendar Day",
      "DayNo"
    ],
    "negativeHeaderExamples": [
      "Month",
      "Year",
      "Day Name",
      "Weekday",
      "Day of Week",
      "Month Day Name",
      "Month Number",
      "Week Number"
    ],
    "explanation": "This semantic type identifies day-of-month integers ranging from 1 to 31, with optional leading zeros (01\u201309). It is suited for columns representing the numeric day component separate from month and year. It excludes day-of-week names and any values with additional characters or out-of-range numbers.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:49.877276"
  },
  {
    "resultType": "generated",
    "semanticType": "species",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'()\\-.,]{2,}\\s+[A-Za-z0-9'()\\-.,]{2,}\\s+[A-Za-z0-9'()\\-.,]{2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9640,
    "headerPatterns": [
      {
        "regExp": "(?i).*(item|product).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Item Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(customer|user).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Comments"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*internal.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Internal Notes"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "General Comments"
        ],
        "negativeExamples": [
          "Quantity"
        ]
      },
      {
        "regExp": "(?i).*(desc|cmts|rmks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Prod Desc"
        ],
        "negativeExamples": [
          "SKU"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Phone Number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Compact portable speaker with clear sound",
      "High-performance laptop with 16GB memory",
      "Stainless steel water bottle, 1 liter capacity",
      "Customer reported intermittent network outages",
      "Warm, sunny conditions throughout the afternoon",
      "Handcrafted oak table with natural finish",
      "Lightweight running shoes for daily training",
      "Notes indicate minor scratches on back panel"
    ],
    "negativeContentExamples": [
      "Good",
      "Hello world",
      "2023-04-05",
      "ABC-12345",
      "$19.99",
      "7/4/2025",
      "Room 12B",
      "Invoice 12345"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Item Description",
      "Product Notes",
      "General Comments",
      "Detailed Description",
      "Internal Notes"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Zip Code",
      "Phone Number",
      "SKU",
      "Invoice Number"
    ],
    "explanation": "This semantic type identifies free-form, multi-word descriptive text commonly found in fields like descriptions, notes, or comments. It favors narrative phrases with at least three tokens, helping distinguish longer text from codes, dates, and identifiers.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:52.045753"
  },
  {
    "resultType": "generated",
    "semanticType": "reference",
    "description": "record_key: unique alphanumeric code for entity identification",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[A-Z0-9]{8,20}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9650,
    "headerPatterns": [
      {
        "regExp": "(?i).*record.*key.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "record_key"
        ],
        "negativeExamples": [
          "record_count"
        ]
      },
      {
        "regExp": "(?i).*entity.*id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "entity_id"
        ],
        "negativeExamples": [
          "entity_name"
        ]
      },
      {
        "regExp": "(?i).*reference.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "reference_code"
        ],
        "negativeExamples": [
          "ref_id"
        ]
      },
      {
        "regExp": "(?i).*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Identifier"
        ],
        "negativeExamples": [
          "Description"
        ]
      },
      {
        "regExp": "(?i).*\\bid\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "Name"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "code"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "A1B2C3D4",
      "9Z7X5Y3W",
      "REF2023A1",
      "K4M8P2Q6",
      "Q9L7T5R3P2",
      "USERID99",
      "X1Y2Z3W4V5",
      "AB12CD34EF56"
    ],
    "negativeContentExamples": [
      "A1B2C3D",
      "ABCD-1234",
      "A1B2 C3D4",
      "ref_2023A1",
      "ABCDE",
      "ABCD1234EFGH5678IJKLM",
      "ID-123456",
      "ab12cd34_ef"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "record_key",
      "entity_id",
      "reference_code",
      "record_identifier",
      "primary_id"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "record_count",
      "entity_name",
      "status"
    ],
    "explanation": "This semantic type recognizes compact alphanumeric record keys used to uniquely identify entities across datasets. It targets single-token identifiers of 8\u201320 alphanumeric characters without separators. Use this type for columns labeled as IDs, identifiers, references, or record keys where values are dense codes rather than human-readable text.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:52.630644"
  },
  {
    "resultType": "generated",
    "semanticType": "department",
    "description": "Full, spelled-out names of U.S. states as complete designations (e.g., California, New York). Excludes abbreviations, codes, territories, and names with additional qualifiers or punctuation.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(Alabama|Alaska|Arizona|Arkansas|California|Colorado|Connecticut|Delaware|Florida|Georgia|Hawaii|Idaho|Illinois|Indiana|Iowa|Kansas|Kentucky|Louisiana|Maine|Maryland|Massachusetts|Michigan|Minnesota|Mississippi|Missouri|Montana|Nebraska|Nevada|New York|New Jersey|New Mexico|New Hampshire|North Carolina|North Dakota|Ohio|Oklahoma|Oregon|Pennsylvania|Rhode Island|South Carolina|South Dakota|Tennessee|Texas|Utah|Vermont|Virginia|Washington|West Virginia|Wisconsin|Wyoming)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9660,
    "headerPatterns": [
      {
        "regExp": "(?i).*us.*state.*name.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "US State Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*(us|u\\.s\\.|usa).*state.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "US State"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*state.*name.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "State Name"
        ],
        "negativeExamples": [
          "County Name"
        ]
      },
      {
        "regExp": "(?i).*state.*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "State"
        ],
        "negativeExamples": [
          "State Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "California",
      "New York",
      "North Dakota",
      "Rhode Island",
      "Hawaii",
      "Massachusetts",
      "Texas",
      "Washington"
    ],
    "negativeContentExamples": [
      "CA",
      "NewYork",
      "Washinton",
      "N. Dakota",
      "North-Dakota",
      "Jersey",
      "United States",
      "Puerto Rico"
    ],
    "positiveHeaderExamples": [
      "State",
      "State Name",
      "US State",
      "US State Name",
      "American State",
      "Full State Name"
    ],
    "negativeHeaderExamples": [
      "State Code",
      "Country",
      "County",
      "Province",
      "Region",
      "Street"
    ],
    "explanation": "This semantic type identifies full, spelled-out U.S. state names to support standardization, validation, and geo-aggregation tasks. It intentionally excludes postal codes (e.g., CA), abbreviations, territories, and values containing extra qualifiers (e.g., appended words or punctuation) to avoid ambiguity.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:56.087040"
  },
  {
    "resultType": "generated",
    "semanticType": "series",
    "description": "text_content: unrestricted narrative or descriptive text. Intended for multi-word, free-form notes, comments, and descriptions rather than structured codes or identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z]+(\\s+[A-Za-z0-9'\"()/-]+){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9770,
    "headerPatterns": [
      {
        "regExp": "(?i).*(narrative|unstructured|free)[ _-]*(text|description).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "narrative_text"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(product|customer|case|ticket|order)[ _-]*(description|notes|comments).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(descr|desc|remarks|memo|comment|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments|remarks|memo).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Quantity"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reports intermittent failure when device is under load over several minutes.",
      "This item arrived damaged; packaging was torn and contents were missing.",
      "Patient denies chest pain but notes shortness of breath during evening walks.",
      "The project scope includes redesigning the landing page and optimizing images.",
      "User feedback indicates confusion around the new onboarding flow.",
      "Please provide a detailed breakdown of costs and proposed timelines for review.",
      "Notes from call: vendor will ship replacement units by end of week.",
      "Background: legacy system interfaces with three external APIs with differing authentication."
    ],
    "negativeContentExamples": [
      "Approved",
      "N/A",
      "Pending review",
      "2024-05-12",
      "SKU-29384",
      "19.99",
      "OK",
      "See details"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Case Notes",
      "User Comments",
      "Detailed Description",
      "Narrative Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Order ID",
      "Postal Code",
      "Phone Number",
      "Email"
    ],
    "explanation": "This semantic type targets free-form, multi-word narrative content typically found in description, notes, comments, or remark fields. The detection favors strings with multiple tokens indicative of sentences or long-form text, reducing false positives from short labels, codes, dates, or numeric values. Header patterns progress from specific variants (e.g., narrative_text, product_description) to the primitive term text to identify likely columns containing unstructured descriptions.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:57.032495"
  },
  {
    "resultType": "generated",
    "semanticType": "duration",
    "description": "Unrestricted narrative or descriptive text intended for human reading, such as descriptions, notes, or comments. Useful for capturing qualitative details, observations, and remarks that do not follow a strict code or numeric format.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9 ,.;:!?\"'()/\\-]{24,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9550,
    "headerPatterns": [
      {
        "regExp": "(?i).*free.*text.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text_description"
        ],
        "negativeExamples": [
          "transaction_description"
        ]
      },
      {
        "regExp": "(?i).*detailed.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_notes"
        ],
        "negativeExamples": [
          "billing_notes"
        ]
      },
      {
        "regExp": "(?i).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "commenter_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_desc"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "summary"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please review the attached report and provide feedback by Friday.",
      "Customer reported intermittent errors during login after update.",
      "This item shows minor wear consistent with light, careful use.",
      "Notes indicate approval contingent upon budget confirmation.",
      "The meeting covered timelines, risks, and mitigation strategies.",
      "Comments: system performance improved after index rebuild.",
      "Description: handcrafted finish with subtle texture and sheen.",
      "Additional remarks include shipping delays due to weather."
    ],
    "negativeContentExamples": [
      "Short note.",
      "OK",
      "2021-04-05 14:22",
      "N/A",
      "1234567890 1234567890 123",
      "Approved",
      "Done - see email",
      "REF: A12-44"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Free Text Description",
      "Detailed Notes",
      "Product Desc",
      "Additional Comments",
      "General Notes"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Commenter ID",
      "Product Code",
      "Txn Date",
      "Unit Price",
      "Record Number"
    ],
    "explanation": "This semantic type identifies free-form narrative fields that store human-readable descriptions, notes, or comments. It is intentionally broad and relies on header semantics and a minimum-length text pattern to avoid misclassifying short labels or codes. Typical use cases include product descriptions, support ticket notes, review comments, and internal annotations.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:02:58.851038"
  },
  {
    "resultType": "generated",
    "semanticType": "created",
    "description": "epoch_seconds: standard Unix timestamp in seconds. Represents a 10-digit integer count of seconds since 1970-01-01T00:00:00Z, commonly used for created timestamps.",
    "pluginType": "regex",
    "regexPattern": "\\b\\d{10}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9710,
    "headerPatterns": [
      {
        "regExp": "(?i).*created.*(unix|epoch).*(timestamp|time|ts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "created_unix_timestamp"
        ],
        "negativeExamples": [
          "formatted_date"
        ]
      },
      {
        "regExp": "(?i).*(creation|created).*(timestamp|ts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "created_timestamp"
        ],
        "negativeExamples": [
          "created_date"
        ]
      },
      {
        "regExp": "(?i).*(unix|epoch).*(timestamp|time|ts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unix Timestamp"
        ],
        "negativeExamples": [
          "ISO Date"
        ]
      },
      {
        "regExp": "(?i).*(created|creation).*(epoch|ts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "creation_ts"
        ],
        "negativeExamples": [
          "time_created"
        ]
      },
      {
        "regExp": "(?i).*timestamp.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Timestamp"
        ],
        "negativeExamples": [
          "Time"
        ]
      }
    ],
    "positiveContentExamples": [
      "1234567890",
      "1501545600",
      "1609459200",
      "1672531200",
      "1697040000",
      "1451606400",
      "1104537600",
      "2147483647"
    ],
    "negativeContentExamples": [
      "1697040000000",
      "169704000",
      "16970400000",
      "1609459200.0",
      "1_609_459_200",
      "1609-459-200",
      "+1609459200",
      "1609459200Z"
    ],
    "positiveHeaderExamples": [
      "Timestamp",
      "Unix Timestamp",
      "Epoch Time",
      "created_timestamp",
      "created_unix_ts",
      "creation_epoch"
    ],
    "negativeHeaderExamples": [
      "Date",
      "Time",
      "Formatted Date",
      "timestamp_ms",
      "ISO Date",
      "created_date"
    ],
    "explanation": "Identifies fields containing Unix epoch time in seconds (10-digit integers), especially for 'created' event timestamps. Useful for parsing and validating numeric second-level timestamps and distinguishing them from formatted dates or millisecond-based timestamps.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:00.117506"
  },
  {
    "resultType": "generated",
    "semanticType": "version",
    "description": "record_key: unique alphanumeric code for entity identification",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9]{8,12}(-[A-Za-z0-9]{4,8})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9600,
    "headerPatterns": [
      {
        "regExp": "(?i).*record[_ ]?key.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Record Key"
        ],
        "negativeExamples": [
          "Record Name"
        ]
      },
      {
        "regExp": "(?i).*unique[_ ]?id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "Unique Name"
        ]
      },
      {
        "regExp": "(?i).*entity[_ ]?id.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Entity ID"
        ],
        "negativeExamples": [
          "Entity Name"
        ]
      },
      {
        "regExp": "(?i).*identifier.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Identifier"
        ],
        "negativeExamples": [
          "Description"
        ]
      },
      {
        "regExp": "(?i).*\\bid\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ID"
        ],
        "negativeExamples": [
          "Name"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Code"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "A9F3X7B2",
      "RK29M7L3",
      "T5HV29LQ",
      "X1Y2Z3A4",
      "Q7N5L3P9",
      "JN4D8S9Q-2P9L",
      "C9M1N3Q8-7H5K",
      "ZY12XW89"
    ],
    "negativeContentExamples": [
      "A9F3X7",
      "1234-5678",
      "A9F3_X7B2",
      "A9F3 X7B2",
      "A9F3X7B2-",
      "-A9F3X7B2",
      "A9F3X7B2-1",
      "A9F3X7B2--1A2B"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "Record Key",
      "Entity ID",
      "ID Code",
      "Unique Identifier",
      "Object ID"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "Status",
      "Count",
      "Version",
      "Email",
      "Address"
    ],
    "explanation": "This semantic type targets generic entity record keys or unique alphanumeric identifiers that are typically stored as compact tokens with optional single hyphen separation. It is useful for columns containing unique keys used to join or reference entities across systems, especially when header names include terms like ID, identifier, record key, or code.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:00.267732"
  },
  {
    "resultType": "generated",
    "semanticType": "month",
    "description": "calendar_month: number from 1-12 representing month of year. Represents the month-of-year as an integer using either 1\u201312 or zero-padded 01\u201312.",
    "pluginType": "list",
    "regexPattern": null,
    "listValues": [
      "01",
      "02",
      "03",
      "04",
      "05",
      "06",
      "07",
      "08",
      "09",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12"
    ],
    "backout": "^(0?[1-9]|1[0-2])$",
    "confidenceThreshold": 98,
    "priority": 9720,
    "headerPatterns": [
      {
        "regExp": "(?i).*calendar.*month.*number.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Calendar Month Number"
        ],
        "negativeExamples": [
          "Month Name"
        ]
      },
      {
        "regExp": "(?i).*month.*number.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Month Number"
        ],
        "negativeExamples": [
          "Month Name"
        ]
      },
      {
        "regExp": "(?i).*(numeric|num).*month.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Numeric Month"
        ],
        "negativeExamples": [
          "Number of Months"
        ]
      },
      {
        "regExp": "(?i).*month.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Month"
        ],
        "negativeExamples": [
          "Year"
        ]
      },
      {
        "regExp": "(?i).*number.*",
        "confidence": 93,
        "mandatory": true,
        "positiveExamples": [
          "Number"
        ],
        "negativeExamples": [
          "Month"
        ]
      }
    ],
    "positiveContentExamples": [
      "1",
      "2",
      "7",
      "9",
      "10",
      "11",
      "12",
      "03"
    ],
    "negativeContentExamples": [
      "0",
      "13",
      "1.0",
      "001",
      "Jan",
      "2021-01",
      "5/2021",
      "12-"
    ],
    "positiveHeaderExamples": [
      "Month",
      "Month Number",
      "Numeric Month",
      "Calendar Month Number",
      "Month Num",
      "Mth Number"
    ],
    "negativeHeaderExamples": [
      "Month Name",
      "Day",
      "Year",
      "Quarter",
      "Week",
      "Month Code"
    ],
    "explanation": "This semantic type identifies calendar month values represented numerically as 1\u201312, including zero-padded forms 01\u201309. It is useful for datasets storing month-of-year as an integer rather than a textual name or a full date.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:03.085621"
  },
  {
    "resultType": "generated",
    "semanticType": "definition",
    "description": "Unrestricted narrative or descriptive text content intended to capture free-form descriptions, notes, remarks, or comments. Values typically contain multiple words, sentences, and punctuation rather than structured codes or numeric identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}[ \\t,.;:!?-]+[A-Za-z]{2,}[ \\t,.;:!?-]+[A-Za-z]{2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9590,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|order|ticket|customer)[ _-](description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed)[ _-](description|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "long_id"
        ]
      },
      {
        "regExp": "(?i).*(description|descriptions).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(notes|remarks|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(desc|rmks|cmts|note).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "desc"
        ],
        "negativeExamples": [
          "code"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "status"
        ]
      }
    ],
    "positiveContentExamples": [
      "This item requires special handling due to fragile materials.",
      "Customer reported intermittent failures during startup.",
      "Use a damp cloth to clean; avoid abrasive cleaners.",
      "Eligible for refund within 30 days of purchase.",
      "The meeting was rescheduled to next week after review.",
      "Includes step-by-step instructions and safety notes.",
      "High-priority because it affects multiple users.",
      "A brief summary of the process is provided below."
    ],
    "negativeContentExamples": [
      "Pending",
      "See notes",
      "OK",
      "2024-01-15",
      "ID-88372",
      "$19.99",
      "john.doe@example.com",
      "v2.1.0"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "order_description",
      "long_description",
      "desc",
      "text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "status",
      "quantity",
      "email",
      "code"
    ],
    "explanation": "This semantic type targets free-form descriptive fields such as descriptions, notes, remarks, and comments. It is detected through multi-word natural language patterns in content and common header terms that indicate narrative text. Use it to identify columns intended for human-readable explanations rather than structured identifiers or numeric values.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:05.945643"
  },
  {
    "resultType": "generated",
    "semanticType": "route",
    "description": "Complete street name: full English street designation with type (e.g., Main Street, Oak Ave, SE Valley Parkway). Excludes house numbers and unit designators; focuses solely on the named thoroughfare and its suffix.",
    "pluginType": "regex",
    "regexPattern": "\\b((N|S|E|W|NE|NW|SE|SW)\\s+)?((\\d{1,2}(st|nd|rd|th))|([A-Z][a-z]+))(?:\\s+[A-Z][a-z]+|\\s+\\d{1,2}(st|nd|rd|th)){0,4}\\s+(Street|St|Road|Rd|Avenue|Ave|Boulevard|Blvd|Lane|Ln|Drive|Dr|Court|Ct|Terrace|Ter|Place|Pl|Way|Highway|Hwy|Parkway|Pkwy|Circle|Cir|Square|Sq|Trail|Trl)\\b(\\s+(N|S|E|W|NE|NW|SE|SW))?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9680,
    "headerPatterns": [
      {
        "regExp": "(?i).*(street|road|avenue|boulevard|lane|drive|court|terrace|place|way|highway|parkway|circle|square|trail|route)[ _-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street Name"
        ],
        "negativeExamples": [
          "House Number"
        ]
      },
      {
        "regExp": "(?i).*(street|road|avenue|boulevard|lane|drive|court|terrace|place|way|highway|parkway|circle|square|trail|route).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street"
        ],
        "negativeExamples": [
          "City"
        ]
      },
      {
        "regExp": "(?i).*(st|rd|ave|blvd|ln|dr|ct|ter|pl|hwy|pkwy|cir|sq|trl)[ _-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "St Name"
        ],
        "negativeExamples": [
          "State Code"
        ]
      },
      {
        "regExp": "(?i).*route[ _-]*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Route Name"
        ],
        "negativeExamples": [
          "ZIP Code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Main Street",
      "Oak Avenue",
      "Westlake Boulevard",
      "7th Avenue",
      "N Pine Road",
      "Maple Lane",
      "Cedar Drive",
      "SE Valley Parkway"
    ],
    "negativeContentExamples": [
      "123 Main",
      "Main Str",
      "Boulevard of the Allies",
      "Rue de Rivoli",
      "Elmstra\u00dfe",
      "The Mall",
      "5th",
      "HWY 50"
    ],
    "positiveHeaderExamples": [
      "Street Name",
      "Road Name",
      "Street",
      "Avenue Name",
      "St Name",
      "Route Name",
      "Boulevard",
      "Street_Name"
    ],
    "negativeHeaderExamples": [
      "House Number",
      "City",
      "ZIP Code",
      "Address Line 1",
      "State",
      "Country",
      "Latitude",
      "Email Address"
    ],
    "explanation": "This semantic type detects full English street thoroughfare names that include a street-type suffix (e.g., Street, Rd, Ave, Blvd, Ln). It allows optional leading or trailing cardinal directions (e.g., N, SE) and numeric ordinals as the first token (e.g., 7th Avenue). It excludes house numbers, unit designators, and free-form address lines, focusing strictly on the named route portion.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:05.971922"
  },
  {
    "resultType": "generated",
    "semanticType": "season",
    "description": "Business quarter: a three-month fiscal or calendar period denoted by a quarter number (Q1\u2013Q4), optionally paired with a year and/or fiscal year prefix (FY). Typical values include forms like Q3, 2024 Q1, FY2023 Q2, and Quarter 4.\nThis type focuses on quarter-period labels. It does not include months, half-years, or full year labels.",
    "pluginType": "regex",
    "regexPattern": "\\bQ[1-4]\\b|\\bQ[1-4]\\s*[-/ ]\\s*(FY\\s*)?\\d{2,4}\\b|\\b((FY|FQ)\\s*)?\\d{2,4}\\s*[-/ ]\\s*Q[1-4]\\b|\\b\\d{2,4}\\s*Q[1-4]\\b|\\b(Quarter|Qtr)\\s*[1-4](\\s*\\d{2,4})?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9700,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(fiscal|fy|financial)\\b.*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "FY Quarter"
        ],
        "negativeExamples": [
          "Financial Year"
        ]
      },
      {
        "regExp": "(?i).*\\byear\\b.*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Year Quarter"
        ],
        "negativeExamples": [
          "Year Month"
        ]
      },
      {
        "regExp": "(?i).*\\b(quarterly|qtr)\\b.*\\bperiod\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Quarterly Period"
        ],
        "negativeExamples": [
          "Monthly Period"
        ]
      },
      {
        "regExp": "(?i).*\\b(business|reporting)\\b.*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Business Quarter"
        ],
        "negativeExamples": [
          "Reporting Month"
        ]
      },
      {
        "regExp": "(?i).*\\bquarter\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Quarter"
        ],
        "negativeExamples": [
          "Full Year"
        ]
      }
    ],
    "positiveContentExamples": [
      "Q1",
      "Q4 2023",
      "2024 Q2",
      "FY2021 Q3",
      "Q2 FY2020",
      "2023-Q1",
      "Q3/2022",
      "19Q2"
    ],
    "negativeContentExamples": [
      "Quarter",
      "Q0 2023",
      "Q5",
      "2023 Q13",
      "FY23/24 Q1",
      "H1 2023",
      "2023-03",
      "2023Q3A"
    ],
    "positiveHeaderExamples": [
      "Quarter",
      "Year Quarter",
      "Quarterly Period",
      "FY Quarter",
      "Business Quarter",
      "Qtr Period",
      "Reporting Quarter"
    ],
    "negativeHeaderExamples": [
      "Half Year",
      "Month",
      "Full Year",
      "Quarterly Revenue",
      "Qtr Sales",
      "Year-Month",
      "Fiscal Year Start"
    ],
    "explanation": "This semantic type identifies business quarter labels used to denote a three-month reporting period, optionally including a calendar year or fiscal year indicator. It supports common representations such as Qn, Year-Qn, Qn-Year, FYYear Qn, and spelled-out Quarter/Qtr forms. Use it to classify columns holding quarter-period identifiers rather than specific dates or month indicators.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:09.722664"
  },
  {
    "resultType": "generated",
    "semanticType": "alias",
    "description": "text_content: unrestricted narrative or descriptive text used for human-readable descriptions, notes, remarks, or comments. Intended to capture multi-word freeform text rather than structured codes or identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'()-]{1,}( [A-Za-z0-9'()-]{2,}){2,}[A-Za-z0-9 ,.;:'\\\"!?()/-]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9580,
    "headerPatterns": [
      {
        "regExp": "(?i).*product.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*detailed.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_notes"
        ],
        "negativeExamples": [
          "notes_count"
        ]
      },
      {
        "regExp": "(?i).*customer.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_comments"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*additional.*remarks.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_remarks"
        ],
        "negativeExamples": [
          "additional_charges"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "number"
        ]
      }
    ],
    "positiveContentExamples": [
      "This product is made from durable materials suitable for outdoor use.",
      "Customer reported an intermittent error after the last update.",
      "Use this field to capture any additional context provided by the user.",
      "The contractor completed the work ahead of schedule despite delays.",
      "Notes: replace the gasket and retest the unit in 24 hours.",
      "A brief description of the incident and attempted remediation steps.",
      "Comments include user feedback and follow-up actions required.",
      "Provide a summary of the changes and their potential impact on operations."
    ],
    "negativeContentExamples": [
      "N/A",
      "SKU-12345",
      "john.doe@example.com",
      "https://example.org/help",
      "12/31/2024",
      "Approved",
      "Item 7",
      "A1B2C3"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Customer Comments",
      "Additional Notes",
      "Free Text",
      "General Remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "SKU",
      "Email",
      "Quantity",
      "Code",
      "Number"
    ],
    "explanation": "This semantic type identifies freeform narrative text fields such as descriptions, notes, comments, or remarks. It uses a value pattern that requires three or more words and allows typical punctuation, helping distinguish narrative text from short labels, codes, or identifiers. Header patterns prioritize common column naming conventions for descriptive text to improve detection accuracy.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:09.840561"
  },
  {
    "resultType": "generated",
    "semanticType": "author",
    "description": "Full person name for an author, consisting of first and family name separated by a single space. Allows internal hyphens and apostrophes within each token and expects exactly two tokens.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]+ [A-Za-z][A-Za-z'-]+\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9520,
    "headerPatterns": [
      {
        "regExp": "(?i).*author.*full.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Author Full Name"
        ],
        "negativeExamples": [
          "Author Email"
        ]
      },
      {
        "regExp": "(?i).*author.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "author_name"
        ],
        "negativeExamples": [
          "Person Name"
        ]
      },
      {
        "regExp": "(?i).*byline.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Byline Author"
        ],
        "negativeExamples": [
          "Tagline"
        ]
      },
      {
        "regExp": "(?i).*author.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Article Author"
        ],
        "negativeExamples": [
          "Full Name"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "Alice Walker",
      "John Smith",
      "Mary-Jane O'Neil",
      "Jean-Luc Picard",
      "D'Arcy Wretzky",
      "Carol Ann",
      "Marco Polo",
      "Sara O'Brien"
    ],
    "negativeContentExamples": [
      "John",
      "John Q Public",
      "J Smith",
      "John Smith Jr.",
      "John  Smith",
      "John_Smith",
      "O'Neil",
      "Smith, John"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Author Full Name",
      "author_name",
      "Byline Author",
      "Author",
      "Article Author"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "Author Email",
      "Customer Name",
      "Filename",
      "Display Name",
      "Contributor ID"
    ],
    "explanation": "Identifies two-token personal names for authors, where the first and last names are separated by a single space. Useful for columns representing the byline or credited author in documents, articles, or publications, with support for hyphens and apostrophes within each token.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:12.680518"
  },
  {
    "resultType": "generated",
    "semanticType": "role",
    "description": "position_title: professional role or occupation designation. Examples include job/position titles such as Software Engineer, Director of Operations, or Vice President of Sales.",
    "pluginType": "regex",
    "regexPattern": "\\b((([A-Za-z][A-Za-z.&+/'-]*\\s+){0,3})?(accountant|administrator|analyst|architect|assistant|associate|attorney|buyer|cashier|chef|chemist|clerk|consultant|coordinator|counsel|designer|developer|director|driver|editor|engineer|executive|instructor|lawyer|librarian|manager|mechanic|nurse|officer|operator|owner|partner|pharmacist|physician|planner|president|principal|producer|professor|programmer|receptionist|scientist|specialist|supervisor|teacher|technician|therapist|writer|founder|chair|chairman|chairwoman)(\\s+(of|for|and|&|/|-)\\s+[A-Za-z][A-Za-z.&/\\- ]{2,})?)\\b|\\b(CFO|CEO|CTO|COO|CIO|CMO|CHRO|CPO|CRO|CCO|CDO|CAO|CISO|GM|VP|SVP|EVP)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 97,
    "priority": 9610,
    "headerPatterns": [
      {
        "regExp": "(?i).*job.*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Job Title"
        ],
        "negativeExamples": [
          "Company"
        ]
      },
      {
        "regExp": "(?i).*(position|occupation|role).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Position Title"
        ],
        "negativeExamples": [
          "Name"
        ]
      },
      {
        "regExp": "(?i).*(employee|staff).*(position|role).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Employee Role"
        ],
        "negativeExamples": [
          "Salary"
        ]
      },
      {
        "regExp": "(?i).*\\b(pos|occ)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Occ"
        ],
        "negativeExamples": [
          "Department"
        ]
      },
      {
        "regExp": "(?i).*title.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Title"
        ],
        "negativeExamples": [
          "Name"
        ]
      }
    ],
    "positiveContentExamples": [
      "Software Engineer",
      "Senior Accountant",
      "Vice President of Sales",
      "Chief Marketing Officer",
      "Director of Operations",
      "Data Analyst",
      "Product Manager",
      "Registered Nurse"
    ],
    "negativeContentExamples": [
      "Marketing Department",
      "Salary Grade 7",
      "Full-Time",
      "Bachelor of Science",
      "New York",
      "Company Name",
      "Engineering",
      "Annual Budget"
    ],
    "positiveHeaderExamples": [
      "Job Title",
      "Position",
      "Occupation",
      "Position Title",
      "Employee Role",
      "Job Role",
      "Role Title",
      "Title"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Company",
      "Salary",
      "Department",
      "Country",
      "Employee ID",
      "Hire Date",
      "Email"
    ],
    "explanation": "This semantic type identifies job or position titles used to describe a person's professional role, such as Engineer, Manager, Director, or C-level acronyms like CEO and CFO. It is useful for classifying columns that store occupation or role designations in HR, recruiting, or organizational datasets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:16.415807"
  },
  {
    "resultType": "generated",
    "semanticType": "creator",
    "description": "A full human name consisting of exactly two parts: given (first) name and family (last) name separated by a single space. Each part begins with an uppercase letter and may include internal hyphens or apostrophes.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z][a-z]+([-'][A-Za-z]+)* [A-Z][a-z]+([-'][A-Za-z]+)*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9760,
    "headerPatterns": [
      {
        "regExp": "(?i).*(creator[ _-]?full[ _-]?name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Creator Full Name"
        ],
        "negativeExamples": [
          "First Name"
        ]
      },
      {
        "regExp": "(?i).*(creator[ _-]?name|person[ _-]?name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Person Name"
        ],
        "negativeExamples": [
          "Last Name"
        ]
      },
      {
        "regExp": "(?i).*(full[ _-]?name|fullname).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Full Name"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "User ID"
        ]
      }
    ],
    "positiveContentExamples": [
      "John Smith",
      "Anne-Marie Johnson",
      "Jean-Luc Picard",
      "D'Arcy Wretzky",
      "Mary O'Neill",
      "Li Wei",
      "Sarah Connor",
      "Peter VanDyke"
    ],
    "negativeContentExamples": [
      "john smith",
      "John SMITH",
      "J Smith",
      "John P Smith",
      "John  Smith",
      "Smith, John",
      "John-Smith",
      "Carlos de Souza"
    ],
    "positiveHeaderExamples": [
      "Full Name",
      "Name",
      "Person Name",
      "Creator Name",
      "Creator Full Name",
      "Submitter Name",
      "Owner Name",
      "Contact Name"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Email Address",
      "User ID",
      "Given Name",
      "Surname",
      "Account Number",
      "Date of Birth"
    ],
    "explanation": "This semantic type identifies two-token personal full names formatted as First Last, allowing internal hyphens and apostrophes within each token. It is useful for fields that store a single, complete personal name rather than separate first and last name columns.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:17.947838"
  },
  {
    "resultType": "generated",
    "semanticType": "max",
    "description": "Free-form narrative or descriptive text intended for human reading, typically composed of multiple words, sentences, or paragraphs. Suitable for notes, descriptions, comments, and other unrestricted text content.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}[ ]+[A-Za-z]{2,}[ ]+[A-Za-z0-9 ,.;:'\"()\\-!?]{10,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9730,
    "headerPatterns": [
      {
        "regExp": "(?i).*(long[ _-]?description|comment[ _-]?text|free[ _-]?text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comment_text"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(desc|remark|remarks|feedback).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "remarks"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(details|narrative|summary).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "summary"
        ],
        "negativeExamples": [
          "Quantity"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "The item arrived in good condition and was packaged securely.",
      "Customer reported intermittent connectivity issues after the update.",
      "Please contact support if symptoms persist beyond 48 hours.",
      "This dataset includes quarterly metrics and a brief methodology summary.",
      "Project scope covers design, implementation, and user training.",
      "Notes indicate a slight discoloration near the top-left corner.",
      "Replacement is scheduled pending manager approval next week.",
      "Leave the door unlocked; maintenance will visit between 2 and 4 pm."
    ],
    "negativeContentExamples": [
      "Short note",
      "Damaged item",
      "See above",
      "10/12/2024",
      "29.99",
      "INV-0045",
      "john.doe@example.com",
      "SKU A12B"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Long_Description",
      "comment_text",
      "remarks",
      "free_text",
      "Summary"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Status",
      "Country",
      "Code",
      "Amount"
    ],
    "explanation": "This semantic type identifies columns that store unrestricted, human-readable narrative or descriptive text. It is useful for fields like descriptions, notes, comments, or summaries where content length and structure vary widely and may include punctuation and numbers.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:19.696169"
  },
  {
    "resultType": "generated",
    "semanticType": "company",
    "description": "Business Name: registered corporate entity designation. Detects organization names that include a legal or corporate designator such as Inc, LLC, Ltd, Corp, Company, PLC, GmbH, etc.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Za-z0-9][A-Za-z0-9&'\u2019.\\-,]{1,})( [A-Za-z0-9][A-Za-z0-9&'\u2019.\\-,]{1,}){0,5} (Company|Co|Co\\.|Corporation|Corp|Corp\\.|Incorporated|Inc|Inc\\.|Limited|Ltd|Ltd\\.|LLC|LLP|PLC|GmbH|AG|BV|NV|S\\.A\\.|SAS)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9740,
    "headerPatterns": [
      {
        "regExp": "(?i).*company.*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Company Name"
        ],
        "negativeExamples": [
          "Stock Symbol"
        ]
      },
      {
        "regExp": "(?i).*(registered|legal).*(company|business).*(name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Legal Business Name"
        ],
        "negativeExamples": [
          "Employee Count"
        ]
      },
      {
        "regExp": "(?i).*(company|corporation|organization).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "Organization"
        ],
        "negativeExamples": [
          "Industry"
        ]
      },
      {
        "regExp": "(?i).*\\b(co|corp|org|biz)\\b.*",
        "confidence": 90,
        "mandatory": true,
        "positiveExamples": [
          "Corp"
        ],
        "negativeExamples": [
          "Ticker"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Industry"
        ]
      }
    ],
    "positiveContentExamples": [
      "Initech, Inc.",
      "Globex Corporation",
      "Wayne Enterprises LLC",
      "Stark Industries Ltd",
      "Acme Co.",
      "Umbrella GmbH",
      "3M Company",
      "Blue Sky PLC"
    ],
    "negativeContentExamples": [
      "Acme",
      "Globex Corporate",
      "Wayne Enterprises Division",
      "Stark Industries Dept",
      "Umbrella Group",
      "Blue Sky Holdings",
      "3M Co-Op",
      "Initech Incorporatedness"
    ],
    "positiveHeaderExamples": [
      "Company Name",
      "Organization",
      "Corporation",
      "Business Name",
      "Legal Business Name",
      "Registered Company Name",
      "Corporate Name",
      "Company"
    ],
    "negativeHeaderExamples": [
      "Stock Symbol",
      "Industry",
      "Employee Count",
      "Ticker",
      "Sector",
      "Headcount",
      "Product Name",
      "Customer Name"
    ],
    "explanation": "This semantic type identifies legal business entity names that explicitly include a corporate designator (e.g., Inc, LLC, Ltd, Corp, Company, PLC, GmbH). It is suitable for columns containing registered company or corporate names and helps distinguish organizations from individuals or other non-legal labels.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:21.682593"
  },
  {
    "resultType": "generated",
    "semanticType": "width",
    "description": "Free-form narrative or descriptive text content intended for human-readable fields such as descriptions, notes, and comments. Typical values are multi-word phrases or sentences that may include punctuation.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z][a-zA-Z]+([ ,.'\";:!?()\\/-]+[a-zA-Z][a-zA-Z]+){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9870,
    "headerPatterns": [
      {
        "regExp": "(?i).*product.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*customer.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_number"
        ]
      },
      {
        "regExp": "(?i).*(internal|review).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_comments"
        ],
        "negativeExamples": [
          "internal_code"
        ]
      },
      {
        "regExp": "(?i).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported an intermittent error during login.",
      "Please provide additional details about the requested feature.",
      "Shipment arrived damaged; packaging was torn on one side.",
      "This report summarizes the quarterly performance and key risks.",
      "Follow-up call scheduled for next week with the client.",
      "Use caution: experimental configuration may not be stable.",
      "Notes indicate prior approval was granted by the committee.",
      "Item shows minor wear consistent with age and normal use."
    ],
    "negativeContentExamples": [
      "OK",
      "Needs review",
      "Updated 05/2024",
      "N/A",
      "Description: N/A",
      "2024-05-10",
      "Item-12345",
      "High"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product_Description",
      "Customer_Notes",
      "Internal_Comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Code",
      "Count",
      "Status"
    ],
    "explanation": "This semantic type identifies unstructured, human-authored narrative text commonly stored in description, notes, or comments fields. It is useful for capturing free-form content for downstream NLP, summarization, or qualitative analysis while avoiding IDs, numeric values, or codes.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:25.031006"
  },
  {
    "resultType": "generated",
    "semanticType": "prefix",
    "description": "title_prefix: formal address designation preceding names",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(MR|MRS|MS|MX|MISS|MSTR|MASTER|DR|DOCTOR|PROF|PROFESSOR|SIR|DAME|REV|REVEREND|FR|FATHER|SR|SISTER|SRA|SENORA|HON|HONORABLE|LORD|LADY|CAPT|CAPTAIN|COL|COLONEL|MAJ|MAJOR|LT|LIEUTENANT|SGT|SERGEANT|CPL|CORPORAL|ADM|ADMIRAL|GEN|GENERAL|PRES|PRESIDENT|GOV|GOVERNOR|AMB|AMBASSADOR)\\.?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9530,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\b(honorific|title|name)\\b.*\\b(prefix)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Title Prefix"
        ],
        "negativeExamples": [
          "prefix_length"
        ]
      },
      {
        "regExp": "(?i).*\\b(name|person)\\b.*\\b(title|honorific|prefix)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Person Title"
        ],
        "negativeExamples": [
          "File Title"
        ]
      },
      {
        "regExp": "(?i).*\\b(pref|hon|salut)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "pref"
        ],
        "negativeExamples": [
          "honor"
        ]
      },
      {
        "regExp": "(?i).*\\b(honorific|salutation)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Honorific"
        ],
        "negativeExamples": [
          "First Name"
        ]
      },
      {
        "regExp": "(?i).*\\btitle\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Title"
        ],
        "negativeExamples": [
          "Full Name"
        ]
      },
      {
        "regExp": "(?i).*\\bprefix\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Prefix"
        ],
        "negativeExamples": [
          "Suffix"
        ]
      }
    ],
    "positiveContentExamples": [
      "Mr.",
      "MRS",
      "Ms",
      "Mx.",
      "Dr",
      "Professor",
      "Sir",
      "Rev."
    ],
    "negativeContentExamples": [
      "Mrr",
      "M-R",
      "Mrs,",
      "Msr",
      "Doctor of",
      "Professo",
      "Srta",
      "Suffix"
    ],
    "positiveHeaderExamples": [
      "Title",
      "Honorific",
      "Prefix",
      "Name Prefix",
      "Title Prefix",
      "Honorific Prefix",
      "Salutation",
      "Person Title"
    ],
    "negativeHeaderExamples": [
      "First Name",
      "Last Name",
      "Full Name",
      "Suffix",
      "Middle Name",
      "Nickname",
      "File Title",
      "Job Title"
    ],
    "explanation": "Identifies honorific or title prefixes used before personal names (e.g., Mr., Ms, Dr, Prof., Sir). Useful for parsing and normalizing person records, splitting name components, and validating dedicated prefix columns in contact datasets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:27.523547"
  },
  {
    "resultType": "generated",
    "semanticType": "event",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'(),.:;!?&%/#@\\-]{3,}[ ]+[A-Za-z][A-Za-z0-9'(),.:;!?&%/#@\\-]{5,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9880,
    "headerPatterns": [
      {
        "regExp": "(?i).*event.*description.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "event_description"
        ],
        "negativeExamples": [
          "event_date"
        ]
      },
      {
        "regExp": "(?i).*event.*notes.*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "event_notes"
        ],
        "negativeExamples": [
          "event_id"
        ]
      },
      {
        "regExp": "(?i).*event.*(details|summary).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "event_details"
        ],
        "negativeExamples": [
          "event_price"
        ]
      },
      {
        "regExp": "(?i).*(desc|notes|comments|cmts|cmnt|cmt).*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "text"
        ],
        "negativeExamples": [
          "price"
        ]
      }
    ],
    "positiveContentExamples": [
      "Package delivered to front porch.",
      "User reported intermittent outages overnight.",
      "No issues observed during the test run.",
      "Meeting rescheduled to next week due to weather.",
      "Customer requested a callback regarding billing error.",
      "Engine temperature readings fluctuated under load.",
      "Please refer to the attached document for full details.",
      "The event was well attended and concluded without incident."
    ],
    "negativeContentExamples": [
      "ID: 12345",
      "2024-05-03",
      "$12.99",
      "OK",
      "John",
      "A-1023",
      "Pending",
      "Error: 404"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Event Description",
      "Event Notes",
      "Event Comments",
      "Details",
      "Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Event ID",
      "Order Number",
      "Timestamp",
      "SKU",
      "Email"
    ],
    "explanation": "This semantic type identifies free-form, narrative or descriptive text commonly found in fields like description, notes, or comments. It is intended for longer, multi-word natural language content rather than structured identifiers or codes, and uses header cues to distinguish descriptive text columns.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:28.136506"
  },
  {
    "resultType": "generated",
    "semanticType": "number",
    "description": "Unique alphanumeric record key used to identify an entity; typically uppercase letters and digits, optionally separated by a single hyphen or underscore between short tokens.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Z0-9]{6,12}\\b|\\b[A-Z0-9]{2,6}[-_][A-Z0-9]{2,6}\\b|\\b[A-Z0-9]{2,6}[-_][A-Z0-9]{2,6}[-_][A-Z0-9]{2,6}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 94,
    "priority": 9630,
    "headerPatterns": [
      {
        "regExp": "(?i).*record.*key.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "record_key"
        ],
        "negativeExamples": [
          "record_count"
        ]
      },
      {
        "regExp": "(?i).*(record|entity).*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "entity_identifier"
        ],
        "negativeExamples": [
          "name_identifier"
        ]
      },
      {
        "regExp": "(?i).*(unique|uniq).*(id|identifier).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Unique ID"
        ],
        "negativeExamples": [
          "unique_name"
        ]
      },
      {
        "regExp": "(?i).*(uid|recordid|rec[_ ]id).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "recordid"
        ],
        "negativeExamples": [
          "user_id_number"
        ]
      },
      {
        "regExp": "(?i).*code.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "code"
        ],
        "negativeExamples": [
          "name"
        ]
      }
    ],
    "positiveContentExamples": [
      "RK29A7C3",
      "A1B2C3D4",
      "CUST-9Z71-K2",
      "ID_0047XZ",
      "ENTY-2024-AB12",
      "X7Y8Z9",
      "K9M2-PL4Q",
      "7F8D2A1B"
    ],
    "negativeContentExamples": [
      "abc12345",
      "ID-1",
      "12345",
      "ID--1234",
      "12_34_5",
      "A!B2C3D4",
      "USER ID 123",
      "12345678901234567890"
    ],
    "positiveHeaderExamples": [
      "ID",
      "Identifier",
      "Unique ID",
      "Record Key",
      "Entity Identifier",
      "Record ID",
      "Record Code"
    ],
    "negativeHeaderExamples": [
      "Name",
      "Description",
      "Date",
      "Record Count",
      "User ID Number",
      "Account Number",
      "Reference Number"
    ],
    "explanation": "This type targets compact alphanumeric identifiers used as record keys. It accepts uppercase letters and digits in a 6\u201312 character block or 2\u20133 short blocks separated by a single hyphen or underscore. Use it to classify columns storing unique entity keys or IDs independent of business meaning.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:37.863017"
  },
  {
    "resultType": "generated",
    "semanticType": "tag",
    "description": "text_content: unrestricted narrative or descriptive text intended for free-form notes, descriptions, or comments. Values are typically multi-word sentences or phrases rather than codes, identifiers, or numeric measurements.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'_-]{2,}( [A-Za-z0-9][A-Za-z0-9'_-]{2,}){2,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9830,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|order|record|issue|ticket).*(description|notes|comments).*",
        "confidence": 99,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "price"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed).*(description|text).*",
        "confidence": 98,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "product_description"
        ]
      },
      {
        "regExp": "(?i).*(desc|note|comment|comments|remarks|rem).*",
        "confidence": 97,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_text"
        ],
        "negativeExamples": [
          "email"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent failures during setup.",
      "Please ship with signature required and fragile handling.",
      "Item arrived with minor scratches on the left panel.",
      "Refund requested due to incorrect size and color mismatch.",
      "This account has been flagged for manual review pending verification.",
      "User prefers email contact after 5 PM on weekdays.",
      "Meeting rescheduled to next week; agenda will be updated accordingly.",
      "The application crashes when uploading large images over 10 MB."
    ],
    "negativeContentExamples": [
      "Needs review",
      "To do later",
      "On hold pending",
      "Fix ASAP",
      "Good item",
      "ok to ship",
      "see notes",
      "in progress"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "product_description",
      "long_description",
      "user_comments",
      "internal_notes",
      "detailed_text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "quantity",
      "order_id",
      "postal_code",
      "status",
      "email"
    ],
    "explanation": "This semantic type targets free-form narrative fields that contain descriptive sentences or multi-word notes. The value regex requires at least three space-separated tokens of length three or more, favoring natural language text over short labels, codes, or numeric values. Header patterns progress from specific resource-bound descriptions to general primitives such as description and text. The high threshold and low priority ensure it does not override more specific structured types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:37.979681"
  },
  {
    "resultType": "generated",
    "semanticType": "elevation",
    "description": "Unrestricted narrative or descriptive text content intended for free-form explanations, summaries, notes, or comments. Typical fields include product descriptions, case notes, comment text, and other multi-word prose.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'()\\-]{2,}( [A-Za-z0-9][A-Za-z0-9'()\\-.,;:]{1,}){2,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9800,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|case|issue).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Long Description"
        ],
        "negativeExamples": [
          "Description ID"
        ]
      },
      {
        "regExp": "(?i).*comment.*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comment Text"
        ],
        "negativeExamples": [
          "Comment ID"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|notes|cmts|cmt).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "Note Count"
        ]
      },
      {
        "regExp": "(?i).*(free|plain).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "Text ID"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent outages during peak hours.",
      "Package arrived damaged with a dented corner and torn seal.",
      "Please contact support if the issue persists after reboot.",
      "Notes indicate the invoice was resent to the billing address.",
      "This summary outlines known limitations and open questions.",
      "The room features hardwood floors and ample natural light.",
      "Provide additional context for future reviewers and auditors."
    ],
    "negativeContentExamples": [
      "ID12345",
      "2024-05-10",
      "$1,299.00",
      "AB-12345",
      "Yes",
      "John Doe",
      "Apt 4B"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Additional Notes",
      "Comment Text",
      "Long Description",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Note Count",
      "Comment ID",
      "Code",
      "SKU",
      "Quantity"
    ],
    "explanation": "This semantic type identifies free-form narrative or descriptive fields containing multi-word prose (e.g., descriptions, notes, comments). It is useful for tagging columns where the content is unstructured text intended for human reading rather than codes or numeric values. The regex requires at least three tokens to reduce collisions with short names, IDs, or codes.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:39.298969"
  },
  {
    "resultType": "generated",
    "semanticType": "party",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z]{2,}( +[a-zA-Z0-9'()\\/\\-,]{2,}){5,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9890,
    "headerPatterns": [
      {
        "regExp": "(?i).*long.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "short_code"
        ]
      },
      {
        "regExp": "(?i).*detailed.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "detailed_notes"
        ],
        "negativeExamples": [
          "internal_note_id"
        ]
      },
      {
        "regExp": "(?i).*additional.*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "additional_comments"
        ],
        "negativeExamples": [
          "comment_count"
        ]
      },
      {
        "regExp": "(?i).*desc.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "discount_rate"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "notes"
        ],
        "negativeExamples": [
          "note_date"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text"
        ],
        "negativeExamples": [
          "message_id"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent crashes after latest update",
      "Please see attached invoice and provide your feedback",
      "Package arrived damaged, requesting replacement as soon as possible",
      "User could not login due to password reset limitations",
      "Location updated during inspection and photos were uploaded",
      "Work completed ahead of schedule with minor outstanding issues",
      "Order canceled by customer after receiving incorrect item",
      "Please contact support if additional details or clarification needed"
    ],
    "negativeContentExamples": [
      "Pending approval",
      "Great service!",
      "See attached file",
      "User requested more info",
      "Work completed as planned",
      "Shipping delayed due to weather",
      "New address on file",
      "Waiting for your response"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Long Description",
      "Free Text",
      "Detailed Notes",
      "Additional Comments",
      "Product Desc"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "ZipCode",
      "Customer Name",
      "Code",
      "Comment Count"
    ],
    "explanation": "This type captures free-form narrative or descriptive text commonly found in columns like description, notes, or comments. The value pattern requires at least six tokens, which reduces false positives from short labels, codes, or identifiers. Header patterns progress from specific field variants to the primitive \"text\" term. A high confidence threshold and priority reduce conflicts with more specific types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:44.726762"
  },
  {
    "resultType": "generated",
    "semanticType": "genus",
    "description": "Unrestricted narrative or descriptive text fields intended to capture multi-word sentences, comments, or free-form descriptions. This type targets long-form text rather than structured codes or numeric identifiers.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z'-]{1,}\\b([ ]+\\b[A-Za-z][A-Za-z'-]{1,}\\b){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9670,
    "headerPatterns": [
      {
        "regExp": "(?i).*free[ _-]*text[ _-]*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "free_text_description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(description|comments|notes|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*(desc|comment|cmt|cmts|note|remark).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(narrative[ _-]*text|long[ _-]*text|free[ _-]*text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_text"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "The customer reported intermittent connection issues today.",
      "Order was delayed due to severe weather conditions.",
      "Please include all relevant attachments and a brief summary.",
      "This section provides background context for the proposed changes.",
      "No defects observed during testing; system performed as expected.",
      "User explains that notifications stopped appearing after login.",
      "Provide detailed reasoning and steps taken to resolve the matter."
    ],
    "negativeContentExamples": [
      "Pending review",
      "Out of stock",
      "Good service overall",
      "Needs immediate attention",
      "Please call back",
      "2024-05-01",
      "INV-10234",
      "OK"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "free_text_description",
      "remarks",
      "long_text",
      "customer_comments",
      "narrative_text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Email",
      "Postal Code",
      "SKU",
      "Order_Number"
    ],
    "explanation": "This semantic type detects free-form narrative fields that typically contain sentences or multi-word descriptions such as comments, notes, or detailed explanations. It is useful for identifying columns meant for human-authored text rather than structured identifiers or codes.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:55.989555"
  },
  {
    "resultType": "generated",
    "semanticType": "abstract",
    "description": "text_content: unrestricted narrative or descriptive text. This type targets free-form prose intended to summarize or describe content, such as paper abstracts, executive summaries, notes, or comments.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}\\b(\\s+\\b[A-Za-z]{2,}\\b){7,}[.!?]?",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9840,
    "headerPatterns": [
      {
        "regExp": "(?i).*(paper|article|manuscript).*abstract.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "article_abstract"
        ],
        "negativeExamples": [
          "abstract_id"
        ]
      },
      {
        "regExp": "(?i).*(executive|brief|short).*summary.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "executive_summary"
        ],
        "negativeExamples": [
          "summary_date"
        ]
      },
      {
        "regExp": "(?i).*(project|record|case).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_description"
        ],
        "negativeExamples": [
          "description_id"
        ]
      },
      {
        "regExp": "(?i).*(internal|case|meeting).*notes?",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_notes"
        ],
        "negativeExamples": [
          "note_flag"
        ]
      },
      {
        "regExp": "(?i).*(user|customer|review).*comments?",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "user_comments"
        ],
        "negativeExamples": [
          "comment_count"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "This study examines the relationship between urban growth and transit usage, highlighting key trends over the past decade.",
      "We propose a simple approach that reduces computation time while maintaining accuracy across diverse datasets.",
      "The product features a durable shell and intuitive interface designed to streamline everyday tasks for new users.",
      "In this report, we summarize stakeholder feedback and outline the next steps for implementation and evaluation.",
      "Results indicate a significant improvement in response rates after the campaign was redesigned and localized.",
      "Our analysis reveals three major challenges facing small teams and offers practical recommendations to mitigate them.",
      "The following overview describes the system architecture, key dependencies, and potential failure modes observed during testing."
    ],
    "negativeContentExamples": [
      "Short product description only",
      "Great product!",
      "Title: Introduction",
      "Version 2.1 release notes",
      "High quality and very durable build",
      "2023-07-15 product launch update",
      "Fast, light, compact design",
      "Summary pending"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Article Abstract",
      "Executive Summary",
      "Project Description",
      "User Comments",
      "Case Notes"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "comment_count",
      "description_id",
      "abstract_id",
      "summary_date",
      "quantity"
    ],
    "explanation": "This semantic type identifies free-form narrative text such as abstracts, summaries, descriptions, notes, and comments. The value pattern favors prose-like content by requiring at least eight words, reducing false matches with short labels, codes, or identifiers. Header patterns progress from specific terms (abstract, summary) through category-level phrases (description, notes, comments) to the primitive concept (text). High threshold and priority minimize conflicts with more specific, structured types.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:56.448988"
  },
  {
    "resultType": "generated",
    "semanticType": "score",
    "description": "Unrestricted narrative or descriptive text content commonly found in free-form fields such as descriptions, notes, and comments. Intended to capture multi-word, natural language entries rather than structured identifiers, codes, or numeric values.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{3,}[A-Za-z'\u2019-]*\\s+[A-Za-z]{3,}[A-Za-z'\u2019-]*\\s+[A-Za-z]{2,}[A-Za-z'\u2019-]*\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9790,
    "headerPatterns": [
      {
        "regExp": "(?i).*customer.*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "customer_notes"
        ],
        "negativeExamples": [
          "customer_id"
        ]
      },
      {
        "regExp": "(?i).*product.*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_code"
        ]
      },
      {
        "regExp": "(?i).*\\bdesc\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "prod_desc"
        ],
        "negativeExamples": [
          "prod_id"
        ]
      },
      {
        "regExp": "(?i).*comments.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "order_comments"
        ],
        "negativeExamples": [
          "order_amount"
        ]
      },
      {
        "regExp": "(?i).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "issue_notes"
        ],
        "negativeExamples": [
          "issue_status"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "internal_text"
        ],
        "negativeExamples": [
          "date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Customer reported intermittent issues after the latest update.",
      "Please call back to verify the shipping address changes.",
      "Delivery was delayed due to severe weather in the region.",
      "User requested a refund citing incorrect item received.",
      "Notes indicate repeated login failures over the weekend.",
      "Inspection revealed minor cosmetic damage on the left panel.",
      "The contract specifies termination terms and renewal options."
    ],
    "negativeContentExamples": [
      "Pending",
      "Call me",
      "12345",
      "SKU-1045-B",
      "2024-08-10",
      "john.doe@example.com",
      "OK thanks",
      "ID 123456"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "product_description",
      "customer_notes",
      "order_comments",
      "internal_text",
      "general_comments"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "quantity",
      "status_code",
      "email",
      "zip_code",
      "phone_number"
    ],
    "explanation": "This semantic type targets free-form narrative text fields typically used for descriptions, notes, and comments. The value pattern requires at least three alphabetic word tokens, helping avoid short labels, identifiers, codes, and purely numeric entries. High threshold and priority are set to minimize conflicts and ensure it is only applied when content and headers strongly indicate unstructured text.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:03:57.832130"
  },
  {
    "resultType": "generated",
    "semanticType": "percentage",
    "description": "Unrestricted narrative or descriptive text intended for human-readable notes, comments, or descriptions. Typical values contain multiple words with natural language, punctuation, and spaces.",
    "pluginType": "regex",
    "regexPattern": "\\b[a-zA-Z][a-zA-Z0-9,.'\";:!?()/%-]{2,}(\\s+[a-zA-Z][a-zA-Z0-9,.'\";:!?()/%-]{2,}){3,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9860,
    "headerPatterns": [
      {
        "regExp": "(?i).*(customer|order|product).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "product_id"
        ]
      },
      {
        "regExp": "(?i).*(issue|case|ticket).*notes.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "ticket_notes"
        ],
        "negativeExamples": [
          "case_id"
        ]
      },
      {
        "regExp": "(?i).*(desc|descr|comment|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "case_comments"
        ],
        "negativeExamples": [
          "unit_cost"
        ]
      },
      {
        "regExp": "(?i).*(note|notes|remark|remarks|narrative|details).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Notes"
        ],
        "negativeExamples": [
          "unit_rate"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "The package arrived earlier than expected and in perfect condition.",
      "Customer reports intermittent issues after the last software update.",
      "Please review the attached document for detailed specifications.",
      "This description summarizes the scope of work for the contract.",
      "Notes indicate that follow-up is required within fifteen business days.",
      "The item shows minor cosmetic wear but functions as intended.",
      "Comments from the reviewer highlight usability improvements needed."
    ],
    "negativeContentExamples": [
      "Good condition",
      "OK",
      "See note",
      "Updated 2023-05-01",
      "12345 details",
      "Approved",
      "N/A"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "product_description",
      "ticket_notes",
      "case_comments",
      "item_desc",
      "additional_remarks"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "product_id",
      "invoice_number",
      "postal_code",
      "quantity",
      "email_address"
    ],
    "explanation": "This semantic type targets free-form descriptive fields such as descriptions, comments, notes, and remarks, characterized by multi-word natural language content. It is useful for identifying columns that store narrative text used for explanations, feedback, annotations, or additional details.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:02.527374"
  },
  {
    "resultType": "generated",
    "semanticType": "currency",
    "description": "Monetary unit expressed as an English currency designation (e.g., euro, US dollar, pound sterling). Matches common currency names possibly preceded by up to a few descriptive words such as a country or region.",
    "pluginType": "regex",
    "regexPattern": "\\b([A-Za-z]+\\.?( |-)){0,3}(pounds sterling|pound sterling|dollars?|euros?|yen|yuan|renminbi|lira|rupees?|rials?|riyals?|dirhams?|francs?|krona|krone|koruna|pesos?|real|rand|shekels?|dinars?|ringgit|baht|dong|won|taka|shillings?|kyat|kina|cedi|birr|leones?|manat|drams?|rubles?|roubles?|levs?|lev|kuna|marks?|gourdes?|quetzals?|sol|bolivar|bol\u00edvar|guarani|colon|col\u00f3n|ouguiya|ariary|pula|tala|kwacha|kwanzas?|ngultrum|dalasi|lilangeni|metical|patacas?)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9780,
    "headerPatterns": [
      {
        "regExp": "(?i).*(currency[ _-]*name|monetary[ _-]*unit|money[ _-]*name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Currency Name"
        ],
        "negativeExamples": [
          "Currency Code"
        ]
      },
      {
        "regExp": "(?i).*currency.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Currency"
        ],
        "negativeExamples": [
          "Exchange Rate"
        ]
      },
      {
        "regExp": "(?i).*(curr|ccy).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "CCY"
        ],
        "negativeExamples": [
          "Country"
        ]
      },
      {
        "regExp": "(?i).*(money|tender).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Money"
        ],
        "negativeExamples": [
          "Amount"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Name"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "us dollar",
      "euro",
      "pound sterling",
      "canadian dollar",
      "japanese yen",
      "indian rupee",
      "saudi riyal",
      "uae dirham"
    ],
    "negativeContentExamples": [
      "usd",
      "eur",
      "eurozone",
      "canadian",
      "money",
      "local currency",
      "pound sign",
      "yen symbol"
    ],
    "positiveHeaderExamples": [
      "Currency",
      "Currency Name",
      "Money",
      "Monetary Unit",
      "Legal Tender Name",
      "Currency Long Name",
      "Currency Description"
    ],
    "negativeHeaderExamples": [
      "Currency Code",
      "Exchange Rate",
      "Country",
      "Amount",
      "Price",
      "ISO Currency",
      "Code",
      "Currency Symbol"
    ],
    "explanation": "This semantic type identifies English currency names (full designations) as they commonly appear in datasets, with optional country/region descriptors followed by a recognized currency unit (e.g., 'canadian dollar', 'pound sterling', 'euro'). It is useful for distinguishing currency names from codes, symbols, and monetary amounts, aiding normalization and mapping to standardized currency code sets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:06.844122"
  },
  {
    "resultType": "generated",
    "semanticType": "depth",
    "description": "text_content: unrestricted narrative or descriptive text typically containing multiple words, sentences, punctuation, and free\u2011form details used for descriptions, notes, and comments.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\u2019\\-]*\\s+[A-Za-z][A-Za-z0-9'\u2019\\-]*\\s+[A-Za-z0-9][A-Za-z0-9'\u2019\\-\\(\\),;:\\.!\\?/ ]{10,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9810,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|item|service).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Product Description"
        ],
        "negativeExamples": [
          "Product ID"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|client).*(comments|feedback|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Comments"
        ],
        "negativeExamples": [
          "Customer ID"
        ]
      },
      {
        "regExp": "(?i).*(long|full|detailed).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Description"
        ],
        "negativeExamples": [
          "Detailed Price"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Designation"
        ]
      },
      {
        "regExp": "(?i).*(note|notes|comment|comments|remark|remarks).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Status"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Free Text"
        ],
        "negativeExamples": [
          "Email"
        ]
      }
    ],
    "positiveContentExamples": [
      "This product features a durable aluminum frame and a weather\u2011resistant finish designed for daily use.",
      "Please provide any additional details about the incident, including time, location, and parties involved.",
      "The customer reported intermittent connectivity issues after the latest firmware update.",
      "Notes: shipment arrived ahead of schedule but packaging showed minor cosmetic damage.",
      "Use this field to capture free\u2011form remarks from the technician following the site visit.",
      "The narrative summarizes the key findings as well as recommended next steps and mitigations.",
      "Comments indicate that users prefer the dark theme and simplified navigation."
    ],
    "negativeContentExamples": [
      "High priority",
      "Pending",
      "N/A",
      "ID: 45892",
      "12/31/2024",
      "Qty 10",
      "Blue",
      "Brief details below"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Product Description",
      "Customer Comments",
      "Detailed Notes",
      "Free Text",
      "Commentary"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "SKU",
      "Phone",
      "Zip Code",
      "Email"
    ],
    "explanation": "Identifies cells that contain free\u2011form narrative or descriptive text such as descriptions, notes, remarks, and comments. Useful for distinguishing unstructured textual fields from structured identifiers, codes, or numeric measures. Header cues like description, notes, comments, and text help disambiguate this type.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:09.117398"
  },
  {
    "resultType": "generated",
    "semanticType": "period",
    "description": "Business quarter period identifier representing a three-month interval within a fiscal or calendar year. Typical values include formats like Q1 2023, 2023 Q3, FY2022 Q4, or Quarter 2 2021.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(Q[1-4]([ \\-/_]\\d{2,4})?|Q[1-4][ \\-/_]?FY\\s*\\d{2,4}|\\d{4}[ \\-/_]?Q[1-4]|FY\\s*\\d{2,4}[ \\-/_]?Q[1-4]|(QUARTER|QTR)\\s*[1-4]([ \\-/_]\\d{2,4})?)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9820,
    "headerPatterns": [
      {
        "regExp": "(?i).*(fiscal|fy).*quarter.*",
        "confidence": 96,
        "mandatory": true,
        "positiveExamples": [
          "Fiscal Quarter"
        ],
        "negativeExamples": [
          "Fiscal Year"
        ]
      },
      {
        "regExp": "(?i).*year.*quarter.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Year Quarter"
        ],
        "negativeExamples": [
          "Full Year"
        ]
      },
      {
        "regExp": "(?i).*quarterly.*period.*",
        "confidence": 94,
        "mandatory": true,
        "positiveExamples": [
          "Quarterly Period"
        ],
        "negativeExamples": [
          "Reporting Period"
        ]
      },
      {
        "regExp": "(?i).*(qtr|quarterly).*",
        "confidence": 92,
        "mandatory": true,
        "positiveExamples": [
          "QTR"
        ],
        "negativeExamples": [
          "Month"
        ]
      },
      {
        "regExp": "(?i).*quarter.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Quarter"
        ],
        "negativeExamples": [
          "Half Year"
        ]
      }
    ],
    "positiveContentExamples": [
      "Q1 2023",
      "2024 Q3",
      "FY2022 Q4",
      "Q2-FY24",
      "Quarter 3 2021",
      "Q1/2020",
      "2022Q2",
      "QTR4 2019"
    ],
    "negativeContentExamples": [
      "H1 2023",
      "2023-07",
      "Week 12 2023",
      "Quarter Three 2021",
      "4th Quarter 2021",
      "FY2023",
      "Q5 2020",
      "Q1 202"
    ],
    "positiveHeaderExamples": [
      "Quarter",
      "Year Quarter",
      "Quarterly Period",
      "Fiscal Quarter",
      "QTR",
      "Reporting Quarter",
      "FY Quarter"
    ],
    "negativeHeaderExamples": [
      "Half Year",
      "Month",
      "Full Year",
      "Week",
      "Month Number",
      "Semester",
      "Fiscal Year"
    ],
    "explanation": "This semantic type identifies values that represent a business quarter within a fiscal or calendar year, recognizing common formats such as Qn YYYY, YYYY Qn, FYYY Qn, Qn FYYY, and textual forms like Quarter n YYYY or QTRn YYYY. It is useful for normalizing time-series data grouped by quarter, aligning fiscal reporting periods, and validating quarter-based partitions in datasets.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:11.319519"
  },
  {
    "resultType": "generated",
    "semanticType": "format",
    "description": "text_content: unrestricted narrative or descriptive text",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z][A-Za-z0-9'\"/&()%\\-:,.]*( [A-Za-z][A-Za-z0-9'\"/&()%\\-:,.]*){5,}\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9850,
    "headerPatterns": [
      {
        "regExp": "(?i).*(free|long|detailed).*(text|narrative|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Detailed Description"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*(customer|user|order|product).*(comments|notes|description).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Customer Comments"
        ],
        "negativeExamples": [
          "Date"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "ID"
        ]
      },
      {
        "regExp": "(?i).*(comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Comments"
        ],
        "negativeExamples": [
          "Price"
        ]
      },
      {
        "regExp": "(?i).*text.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Date"
        ]
      }
    ],
    "positiveContentExamples": [
      "Please deliver the order by next Tuesday and confirm receipt.",
      "Customer reported intermittent connectivity issues during peak hours.",
      "This policy applies to all contractors working onsite.",
      "The device was packaged securely with bubble wrap and foam inserts.",
      "No defects were observed after three consecutive test cycles.",
      "Provide a short summary of the meeting outcomes and action items.",
      "User describes a persistent humming noise when the unit is idle.",
      "Steps to reproduce: open the app, log in, and navigate to Reports."
    ],
    "negativeContentExamples": [
      "N/A",
      "See notes",
      "Updated 2024-07-15",
      "123 Main St.",
      "OK",
      "Invoice 12345",
      "customer complaint",
      "Contact: support@example.com"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Detailed Text",
      "Customer Comments",
      "Order Description"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Country Code",
      "Email"
    ],
    "explanation": "This semantic type identifies freeform narrative or descriptive text commonly found in notes, comments, and description fields. It targets multi-word sentences and paragraphs rather than structured identifiers or codes, favoring longer, word-rich content that resembles natural language.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:15.002470"
  },
  {
    "resultType": "generated",
    "semanticType": "length",
    "description": "Unrestricted narrative or descriptive text intended for free-form human-readable content such as descriptions, notes, or comments.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z0-9][A-Za-z0-9'\"()-]*\\b( +[A-Za-z0-9][A-Za-z0-9'\"()-]*\\b){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9540,
    "headerPatterns": [
      {
        "regExp": "(?i).*(product|customer|order|item).*(description|notes|comments).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "product_description"
        ],
        "negativeExamples": [
          "order_id"
        ]
      },
      {
        "regExp": "(?i).*(long|detailed|free).*(description|notes|text).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "long_description"
        ],
        "negativeExamples": [
          "free_shipping"
        ]
      },
      {
        "regExp": "(?i).*(desc|remarks|memo|cmts).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "item_desc"
        ],
        "negativeExamples": [
          "id_code"
        ]
      },
      {
        "regExp": "(?i).*(comment|comments|notes).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "comments"
        ],
        "negativeExamples": [
          "status"
        ]
      },
      {
        "regExp": "(?i).*description.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "description"
        ],
        "negativeExamples": [
          "designation"
        ]
      }
    ],
    "positiveContentExamples": [
      "This item arrived damaged during transit and requires replacement.",
      "Please refer to the attached manual for setup instructions and safety notes.",
      "Customer reported intermittent freezes after installing the latest patch.",
      "Notes indicate user consent was obtained verbally on 2023-09-14.",
      "The project timeline depends on vendor availability and budget approval.",
      "Payment was delayed due to an internal review of the invoice details.",
      "Our team will follow up next week to confirm delivery preferences.",
      "User described the interface as confusing, especially on mobile devices."
    ],
    "negativeContentExamples": [
      "Needs follow up soon",
      "Pending QA signoff",
      "Short description here",
      "OK to ship now",
      "2021-06-01 completed",
      "Approved",
      "See attachment",
      "N/A"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Long Description",
      "Item Notes",
      "Customer Comments",
      "Remarks",
      "Free Text"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Quantity",
      "Order Number",
      "Email",
      "Status",
      "Code"
    ],
    "explanation": "This semantic type identifies free-form narrative text fields such as descriptions, notes, and comments, characterized by multi-word phrases and sentences rather than codes or numeric identifiers. It is useful for classifying columns that store human-readable context or explanations instead of structured values.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:37.713582"
  },
  {
    "resultType": "generated",
    "semanticType": "source",
    "description": "web_address: complete URL for network resource access",
    "pluginType": "regex",
    "regexPattern": "\\b(https?|ftp)://(([A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)+)|([0-9]{1,3}(\\.[0-9]{1,3}){3}))(?:\\:[0-9]{2,5})?(?:/[A-Za-z0-9._~:/?#\\[\\]@!$&'()*+,;=%-]*)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 95,
    "priority": 9180,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\bsource[_ ]?url\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Source URL"
        ],
        "negativeExamples": [
          "Source Name"
        ]
      },
      {
        "regExp": "(?i).*\\bweb\\b.*\\baddress\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Web Address"
        ],
        "negativeExamples": [
          "Email Address"
        ]
      },
      {
        "regExp": "(?i).*\\bwebsite\\b.*\\burl\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Website URL"
        ],
        "negativeExamples": [
          "Website Name"
        ]
      },
      {
        "regExp": "(?i).*\\bhomepage\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Homepage"
        ],
        "negativeExamples": [
          "Domain Name"
        ]
      },
      {
        "regExp": "(?i).*\\burl\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "URL"
        ],
        "negativeExamples": [
          "IP Address"
        ]
      }
    ],
    "positiveContentExamples": [
      "https://example.com",
      "http://www.example.org/index.html",
      "https://sub.domain.co.uk:8443/path/to/resource?id=42&ref=abc#section-2",
      "ftp://ftp.example.org/pub/file.txt",
      "http://192.168.1.10/login?redirect=/home",
      "https://api.example.com/v1/users?limit=50",
      "https://example.com/~user/profile"
    ],
    "negativeContentExamples": [
      "www.example.com",
      "example.com",
      "http//example.com",
      "http:/example.com",
      "mailto:support@example.com",
      "file:///C:/path/to/file.html",
      "user@example.com",
      "C:\\www\\index.html"
    ],
    "positiveHeaderExamples": [
      "URL",
      "Website",
      "Web Address",
      "Page URL",
      "Source URL",
      "Landing Page URL",
      "Target URL",
      "Homepage"
    ],
    "negativeHeaderExamples": [
      "Domain Name",
      "Email Address",
      "File Path",
      "Website Name",
      "IP Address",
      "Page Title",
      "Username",
      "File Name"
    ],
    "explanation": "This semantic type identifies full web addresses (URLs) used to access network resources, requiring an explicit scheme (http, https, or ftp), a valid host (domain with at least one dot or an IPv4 address), and optional port, path, query, and fragment components. It is suitable for fields storing page links, landing page sources, API endpoints, or download URLs. Header patterns progress from specific variants (source_url, web address, website url) to a category cue (homepage) and finally the primitive term url. The regex avoids anchors, uses word boundaries, and balances specificity with real-world URL variability; the threshold and priority reflect a moderately specific pattern that should not override more specialized identifiers.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:38.286034"
  },
  {
    "resultType": "generated",
    "semanticType": "project",
    "description": "Unrestricted narrative or descriptive text suitable for freeform comments, notes, or descriptions in datasets. Intended for long-form, natural language content rather than structured codes, identifiers, or dates.",
    "pluginType": "regex",
    "regexPattern": "\\b[A-Za-z]{2,}\\b([ \\t]+\\b[A-Za-z]{2,}\\b){4,}",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9560,
    "headerPatterns": [
      {
        "regExp": "(?i).*\\bproject\\b.*\\bdescription\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_description"
        ],
        "negativeExamples": [
          "product_description"
        ]
      },
      {
        "regExp": "(?i).*\\bproject\\b.*\\bnotes\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_notes"
        ],
        "negativeExamples": [
          "release_notes"
        ]
      },
      {
        "regExp": "(?i).*\\bproject\\b.*\\bcomments\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "project_comments"
        ],
        "negativeExamples": [
          "user_comments"
        ]
      },
      {
        "regExp": "(?i).*\\b(desc|description|notes|comments)\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Description"
        ],
        "negativeExamples": [
          "Descriptor"
        ]
      },
      {
        "regExp": "(?i).*\\btext\\b.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Text"
        ],
        "negativeExamples": [
          "Code"
        ]
      }
    ],
    "positiveContentExamples": [
      "Detailed project overview outlining scope and objectives.",
      "Customer reported intermittent issue after software update.",
      "This record contains general remarks about service quality.",
      "Notes include action items and follow up responsibilities.",
      "Freeform description of incident with observed symptoms.",
      "Narrative text capturing context, assumptions, and risks.",
      "Additional comments describing constraints and dependencies.",
      "Provide a comprehensive summary for stakeholders and reviewers."
    ],
    "negativeContentExamples": [
      "In progress",
      "See attached",
      "TBD",
      "N/A",
      "Draft v2",
      "2024-09-01",
      "High priority urgent",
      "Fix later tomorrow"
    ],
    "positiveHeaderExamples": [
      "Description",
      "Notes",
      "Comments",
      "Project Description",
      "Project Notes",
      "Free Text",
      "Detailed Description",
      "Comments Field"
    ],
    "negativeHeaderExamples": [
      "ID",
      "Date",
      "Price",
      "Descriptor",
      "Status",
      "Product Title",
      "Reference",
      "Amount"
    ],
    "explanation": "This semantic type targets freeform, descriptive text fields that typically contain multiple words and sentences, such as descriptions, notes, and comments. It is designed to avoid matching short labels, codes, identifiers, or dates by requiring multiple word tokens, and it leverages header patterns commonly used for narrative content.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:04:56.612878"
  },
  {
    "resultType": "generated",
    "semanticType": "publisher",
    "description": "Business Name: registered corporate entity designation",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b[A-Za-z0-9&'\u2019.-]+( [A-Za-z0-9&'\u2019.-]+){0,6}(,)? (Inc|Incorporated|Corp|Corporation|LLC|L\\.L\\.C\\.|Ltd|Limited|PLC|GmbH|S\\.A\\.|SA|SAS|SRL|BV|B\\.V\\.|Co\\.|Co|Company|LLP|L\\.L\\.P\\.|Pty Ltd)\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 98,
    "priority": 9750,
    "headerPatterns": [
      {
        "regExp": "(?i).*(publisher|publishing).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Publisher Name"
        ],
        "negativeExamples": [
          "Publication Title"
        ]
      },
      {
        "regExp": "(?i).*(company|corporation|organization).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Company Name"
        ],
        "negativeExamples": [
          "Employee Count"
        ]
      },
      {
        "regExp": "(?i).*(organization|corporation|company).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Organization"
        ],
        "negativeExamples": [
          "Stock Symbol"
        ]
      },
      {
        "regExp": "(?i).*(corp|inc|llc|ltd).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "corp_name"
        ],
        "negativeExamples": [
          "Industry"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Corporate Name"
        ],
        "negativeExamples": [
          "Account Number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Acme, Inc.",
      "Globex LLC",
      "Blue River Ltd",
      "Example Corporation",
      "Northwind Trading Co.",
      "FutureTech GmbH",
      "Fabrica Textil S.A.",
      "Orion Holdings PLC"
    ],
    "negativeContentExamples": [
      "Acme Publishing",
      "Globex, Incorporateded",
      "Blue River Limited Liability Company",
      "Northwind Traders",
      "FutureTech GMB",
      "Orion Holdings PLCX",
      "Example Corp Ldt",
      "Fabrica Textil S-A"
    ],
    "positiveHeaderExamples": [
      "Company Name",
      "Organization",
      "Corporation",
      "Publisher Name",
      "Organization Name",
      "Corporate Name",
      "Publishing Company Name",
      "corp_name"
    ],
    "negativeHeaderExamples": [
      "Stock Symbol",
      "Industry",
      "Employee Count",
      "Publication Title",
      "Contact Name",
      "Account Number",
      "Country"
    ],
    "explanation": "Detects registered business/legal entity names that include a corporate designator (e.g., Inc, LLC, Ltd, GmbH). Useful for identifying fields that store official organization or company names rather than personal names or informal labels.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:07:51.461280"
  },
  {
    "resultType": "generated",
    "semanticType": "road",
    "description": "Full English street/road name including the road type suffix (e.g., Street, St, Avenue, Ave, Road, Rd, etc.). Excludes house numbers, unit/apartment identifiers, and any locality or postal information.",
    "pluginType": "regex",
    "regexPattern": "(?i)\\b(N|S|E|W|NE|NW|SE|SW)?\\s*([A-Z][a-z]+(-[A-Z][a-z]+)?\\s+){0,3}([A-Z][a-z]+|[0-9]{1,3}(st|nd|rd|th))\\s+(Street|St|Avenue|Ave|Road|Rd|Boulevard|Blvd|Lane|Ln|Drive|Dr|Court|Ct|Place|Pl|Terrace|Ter|Highway|Hwy|Parkway|Pkwy|Way|Square|Sq|Trail|Trl|Circle|Cir|Crescent|Cres|Alley|Aly)\\.?\\s*(N|S|E|W|NE|NW|SE|SW)?\\b",
    "listValues": null,
    "backout": null,
    "confidenceThreshold": 93,
    "priority": 9470,
    "headerPatterns": [
      {
        "regExp": "(?i).*(street|road|avenue|blvd|lane|drive).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street Name"
        ],
        "negativeExamples": [
          "Street Type"
        ]
      },
      {
        "regExp": "(?i).*(streetname|street_name).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "StreetName"
        ],
        "negativeExamples": [
          "House Number"
        ]
      },
      {
        "regExp": "(?i).*(ave|st|rd|blvd|ln|dr).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Ave Name"
        ],
        "negativeExamples": [
          "City"
        ]
      },
      {
        "regExp": "(?i).*(street|road|avenue|blvd|lane|drive).*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Street"
        ],
        "negativeExamples": [
          "ZIP Code"
        ]
      },
      {
        "regExp": "(?i).*name.*",
        "confidence": 95,
        "mandatory": true,
        "positiveExamples": [
          "Road Name"
        ],
        "negativeExamples": [
          "House Number"
        ]
      }
    ],
    "positiveContentExamples": [
      "Main Street",
      "Elm St",
      "Oak Avenue",
      "Broadway Blvd",
      "Maple Lane",
      "1st Avenue",
      "E Main St",
      "Main St NW"
    ],
    "negativeContentExamples": [
      "123 Main Street",
      "Main",
      "Main Street Apt 2B",
      "Elm Street, Springfield",
      "E. Main St",
      "Maple-Lane",
      "W 2nd",
      "Main Str"
    ],
    "positiveHeaderExamples": [
      "Street Name",
      "Road Name",
      "Street",
      "StreetName",
      "Avenue Name",
      "Blvd Name",
      "Lane Name",
      "Drive Name"
    ],
    "negativeHeaderExamples": [
      "House Number",
      "City",
      "ZIP Code",
      "Address Line 1",
      "Street Type",
      "Road Type",
      "Country",
      "State"
    ],
    "explanation": "Identifies cells that contain a complete street/road name along with its type (e.g., Street, St, Avenue, Ave). It rejects values that include house numbers, units, or extra locality information. Useful for normalizing address components where the street name and its type are expected as a single field.",
    "description_pattern": "P6",
    "generated_at": "2025-08-10T19:11:04.492825"
  }
]